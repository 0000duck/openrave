/// autogenerated analytical inverse kinematics code from ikfast program
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// generated 2010-11-03 01:20:16.981012
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object:
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -shared -Wl,-soname,ik.so -o ik.so ik.cpp
#include <cmath>
#include <cassert>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IK2PI  6.28318530717959
#define IKPI  3.14159265358979
#define IKPI_2  1.57079632679490

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// defined when creating a shared object/dll
#ifdef IKFAST_CLIBRARY
#ifdef _MSC_VER
#define IKFAST_API extern "C" __declspec(dllexport)
#else
#define IKFAST_API extern "C"
#endif
#else
#define IKFAST_API
#endif

typedef double IKReal;
class IKSolution
{
public:
    /// Gets a solution given its free parameters
    /// \param pfree The free parameters required, range is in [-pi,pi]
    void GetSolution(IKReal* psolution, const IKReal* pfree) const {
        for(size_t i = 0; i < basesol.size(); ++i) {
            if( basesol[i].freeind < 0 )
                psolution[i] = basesol[i].foffset;
            else {
                assert(pfree != NULL);
                psolution[i] = pfree[basesol[i].freeind]*basesol[i].fmul + basesol[i].foffset;
                if( psolution[i] > IKPI )
                    psolution[i] -= IK2PI;
                else if( psolution[i] < -IKPI )
                    psolution[i] += IK2PI;
            }
        }
    }

    /// Gets the free parameters the solution requires to be set before a full solution can be returned
    /// \return vector of indices indicating the free parameters
    const std::vector<int>& GetFree() const { return vfree; }

    struct VARIABLE
    {
        VARIABLE() : freeind(-1), fmul(0), foffset(0) {}
        VARIABLE(int freeind, IKReal fmul, IKReal foffset) : freeind(freeind), fmul(fmul), foffset(foffset) {}
        int freeind;
        IKReal fmul, foffset; ///< joint value is fmul*sol[freeind]+foffset
    };

    std::vector<VARIABLE> basesol;       ///< solution and their offsets if joints are mimiced
    std::vector<int> vfree;
};

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

inline float IKasin(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asinf(f);
}
inline double IKasin(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline float IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0f;
return acosf(f);
}
inline double IKacos(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2(fy,fx);
}

IKFAST_API int getNumFreeParameters() { return 1; }
IKFAST_API int* getFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int getNumJoints() { return 7; }

IKFAST_API int getIKRealSize() { return sizeof(IKReal); }

IKFAST_API int getIKType() { return 1; }

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void fk(const IKReal* j, IKReal* eetrans, IKReal* eerot) {
    IKReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81;
    x0=IKsin(j[0]);
    x1=IKcos(j[2]);
    x2=IKcos(j[6]);
    x3=IKsin(j[4]);
    x4=IKcos(j[5]);
    x5=IKsin(j[2]);
    x6=IKcos(j[0]);
    x7=IKcos(j[1]);
    x8=IKsin(j[6]);
    x9=IKcos(j[3]);
    x10=IKcos(j[4]);
    x11=IKsin(j[5]);
    x12=IKsin(j[1]);
    x13=IKsin(j[3]);
    x14=((0.707106781186548)*(x0)*(x1)*(x10)*(x8));
    x15=((0.707106781186548)*(x0)*(x1)*(x10)*(x2));
    x16=((0.707106781186548)*(x0)*(x1)*(x2)*(x3)*(x4));
    x17=((0.707106781186548)*(x2)*(x3)*(x4)*(x5)*(x6)*(x7));
    x18=((0.707106781186548)*(x0)*(x11)*(x13)*(x5)*(x8));
    x19=((0.707106781186548)*(x1)*(x10)*(x4)*(x6)*(x7)*(x8)*(x9));
    x20=((0.707106781186548)*(x0)*(x10)*(x2)*(x4)*(x5)*(x9));
    x21=((0.707106781186548)*(x11)*(x12)*(x2)*(x6)*(x9));
    x22=((0.707106781186548)*(x10)*(x12)*(x13)*(x2)*(x4)*(x6));
    x23=((0.707106781186548)*(x10)*(x2)*(x5)*(x6)*(x7));
    x24=((0.707106781186548)*(x10)*(x5)*(x6)*(x7)*(x8));
    x25=((0.707106781186548)*(x1)*(x3)*(x6)*(x7)*(x8)*(x9));
    x26=((0.707106781186548)*(x1)*(x2)*(x3)*(x6)*(x7)*(x9));
    x27=((0.707106781186548)*(x1)*(x11)*(x13)*(x2)*(x6)*(x7));
    x28=((0.707106781186548)*(x0)*(x2)*(x3)*(x5)*(x9));
    x29=((0.707106781186548)*(x0)*(x3)*(x5)*(x8)*(x9));
    x30=((0.707106781186548)*(x1)*(x10)*(x2)*(x4)*(x6)*(x7)*(x9));
    x31=((0.707106781186548)*(x3)*(x4)*(x5)*(x6)*(x7)*(x8));
    x32=((0.707106781186548)*(x0)*(x10)*(x4)*(x5)*(x8)*(x9));
    x33=((0.707106781186548)*(x11)*(x12)*(x6)*(x8)*(x9));
    x34=((0.707106781186548)*(x0)*(x1)*(x3)*(x4)*(x8));
    x35=((0.707106781186548)*(x1)*(x11)*(x13)*(x6)*(x7)*(x8));
    x36=((0.707106781186548)*(x12)*(x13)*(x3)*(x6)*(x8));
    x37=((0.707106781186548)*(x10)*(x12)*(x13)*(x4)*(x6)*(x8));
    x38=((0.707106781186548)*(x12)*(x13)*(x2)*(x3)*(x6));
    x39=((0.707106781186548)*(x0)*(x11)*(x13)*(x2)*(x5));
    x40=((0.707106781186548)*(x11)*(x13)*(x2)*(x5)*(x6));
    x41=((0.707106781186548)*(x0)*(x10)*(x12)*(x13)*(x2)*(x4));
    x42=((0.707106781186548)*(x0)*(x1)*(x2)*(x3)*(x7)*(x9));
    x43=((0.707106781186548)*(x2)*(x3)*(x5)*(x6)*(x9));
    x44=((0.707106781186548)*(x0)*(x10)*(x2)*(x5)*(x7));
    x45=((0.707106781186548)*(x0)*(x10)*(x5)*(x7)*(x8));
    x46=((0.707106781186548)*(x0)*(x1)*(x3)*(x7)*(x8)*(x9));
    x47=((0.707106781186548)*(x1)*(x3)*(x4)*(x6)*(x8));
    x48=((0.707106781186548)*(x0)*(x2)*(x3)*(x4)*(x5)*(x7));
    x49=((0.707106781186548)*(x0)*(x1)*(x11)*(x13)*(x2)*(x7));
    x50=((0.707106781186548)*(x0)*(x11)*(x12)*(x2)*(x9));
    x51=((0.707106781186548)*(x10)*(x4)*(x5)*(x6)*(x8)*(x9));
    x52=((x14)*(x4)*(x7)*(x9));
    x53=((0.707106781186548)*(x3)*(x5)*(x6)*(x8)*(x9));
    x54=((0.707106781186548)*(x11)*(x13)*(x5)*(x6)*(x8));
    x55=((0.707106781186548)*(x0)*(x12)*(x13)*(x3)*(x8));
    x56=((0.707106781186548)*(x0)*(x1)*(x11)*(x13)*(x7)*(x8));
    x57=((0.707106781186548)*(x1)*(x10)*(x2)*(x6));
    x58=((x15)*(x4)*(x7)*(x9));
    x59=((0.707106781186548)*(x0)*(x10)*(x12)*(x13)*(x4)*(x8));
    x60=((0.707106781186548)*(x0)*(x3)*(x4)*(x5)*(x7)*(x8));
    x61=((0.707106781186548)*(x0)*(x11)*(x12)*(x8)*(x9));
    x62=((0.707106781186548)*(x0)*(x12)*(x13)*(x2)*(x3));
    x63=((0.707106781186548)*(x1)*(x2)*(x3)*(x4)*(x6));
    x64=((0.707106781186548)*(x1)*(x10)*(x6)*(x8));
    x65=((0.707106781186548)*(x10)*(x2)*(x4)*(x5)*(x6)*(x9));
    x66=((0.707106781186548)*(x1)*(x11)*(x12)*(x13)*(x8));
    x67=((0.707106781186548)*(x1)*(x10)*(x12)*(x2)*(x4)*(x9));
    x68=((0.707106781186548)*(x11)*(x2)*(x7)*(x9));
    x69=((0.707106781186548)*(x12)*(x3)*(x4)*(x5)*(x8));
    x70=((0.707106781186548)*(x10)*(x13)*(x2)*(x4)*(x7));
    x71=((0.707106781186548)*(x1)*(x12)*(x3)*(x8)*(x9));
    x72=((0.707106781186548)*(x13)*(x3)*(x7)*(x8));
    x73=((0.707106781186548)*(x1)*(x12)*(x2)*(x3)*(x9));
    x74=((0.707106781186548)*(x11)*(x7)*(x8)*(x9));
    x75=((0.707106781186548)*(x10)*(x12)*(x5)*(x8));
    x76=((0.707106781186548)*(x1)*(x11)*(x12)*(x13)*(x2));
    x77=((0.707106781186548)*(x13)*(x2)*(x3)*(x7));
    x78=((0.707106781186548)*(x1)*(x10)*(x12)*(x4)*(x8)*(x9));
    x79=((0.707106781186548)*(x10)*(x13)*(x4)*(x7)*(x8));
    x80=((0.707106781186548)*(x10)*(x12)*(x2)*(x5));
    x81=((0.707106781186548)*(x12)*(x2)*(x3)*(x4)*(x5));
    eerot[0]=((((-1.00000000000000)*(x18)))+(((-1.00000000000000)*(x19)))+(((-1.00000000000000)*(x15)))+(((-1.00000000000000)*(x26)))+(((-1.00000000000000)*(x23)))+(((-1.00000000000000)*(x29)))+(((-1.00000000000000)*(x39)))+(((-1.00000000000000)*(x36)))+(((-1.00000000000000)*(x30)))+(x38)+(x33)+(x32)+(x31)+(x37)+(x35)+(x34)+(x14)+(x17)+(x16)+(x24)+(x25)+(x27)+(x20)+(x21)+(x22)+(x28));
    eerot[1]=((((-1.00000000000000)*(x29)))+(((-1.00000000000000)*(x28)))+(((-1.00000000000000)*(x38)))+(((-1.00000000000000)*(x39)))+(((-1.00000000000000)*(x34)))+(((-1.00000000000000)*(x35)))+(((-1.00000000000000)*(x36)))+(((-1.00000000000000)*(x37)))+(((-1.00000000000000)*(x30)))+(((-1.00000000000000)*(x31)))+(((-1.00000000000000)*(x32)))+(((-1.00000000000000)*(x33)))+(x15)+(x14)+(x17)+(x16)+(x19)+(x18)+(x24)+(x25)+(x26)+(x27)+(x20)+(x21)+(x22)+(x23));
    eerot[2]=((((x1)*(x13)*(x4)*(x6)*(x7)))+(((-1.00000000000000)*(x11)*(x3)*(x5)*(x6)*(x7)))+(((-1.00000000000000)*(x0)*(x10)*(x11)*(x5)*(x9)))+(((-1.00000000000000)*(x0)*(x13)*(x4)*(x5)))+(((-1.00000000000000)*(x10)*(x11)*(x12)*(x13)*(x6)))+(((x12)*(x4)*(x6)*(x9)))+(((x1)*(x10)*(x11)*(x6)*(x7)*(x9)))+(((-1.00000000000000)*(x0)*(x1)*(x11)*(x3))));
    eetrans[0]=((((-0.0850000000000000)*(x11)*(x3)*(x5)*(x6)*(x7)))+(((-0.0850000000000000)*(x0)*(x1)*(x11)*(x3)))+(((0.0850000000000000)*(x12)*(x4)*(x6)*(x9)))+(((0.450000000000000)*(x12)*(x6)))+(((-0.500000000000000)*(x0)*(x13)*(x5)))+(((0.500000000000000)*(x12)*(x6)*(x9)))+(((0.0850000000000000)*(x1)*(x13)*(x4)*(x6)*(x7)))+(((0.0850000000000000)*(x1)*(x10)*(x11)*(x6)*(x7)*(x9)))+(((-0.0850000000000000)*(x10)*(x11)*(x12)*(x13)*(x6)))+(((0.500000000000000)*(x1)*(x13)*(x6)*(x7)))+(((-0.0850000000000000)*(x0)*(x10)*(x11)*(x5)*(x9)))+(((-0.0850000000000000)*(x0)*(x13)*(x4)*(x5))));
    eerot[3]=((((-1.00000000000000)*(x42)))+(((-1.00000000000000)*(x44)))+(((-1.00000000000000)*(x47)))+(((-1.00000000000000)*(x43)))+(x48)+(x49)+(x46)+(x45)+(x40)+(x41)+(x59)+(x54)+(x57)+(x56)+(x50)+(x53)+(x60)+(x61)+(x62)+(((-1.00000000000000)*(x63)))+(((-1.00000000000000)*(x65)))+(((-1.00000000000000)*(x64)))+(((-1.00000000000000)*(x58)))+(((-1.00000000000000)*(x51)))+(((-1.00000000000000)*(x55)))+(((-1.00000000000000)*(x52))));
    eerot[4]=((x48)+(x49)+(x46)+(x47)+(x44)+(x45)+(x42)+(x43)+(x40)+(x41)+(x51)+(x50)+(x53)+(x52)+(((-1.00000000000000)*(x63)))+(((-1.00000000000000)*(x62)))+(((-1.00000000000000)*(x61)))+(((-1.00000000000000)*(x60)))+(((-1.00000000000000)*(x65)))+(((-1.00000000000000)*(x64)))+(((-1.00000000000000)*(x58)))+(((-1.00000000000000)*(x59)))+(((-1.00000000000000)*(x56)))+(((-1.00000000000000)*(x57)))+(((-1.00000000000000)*(x54)))+(((-1.00000000000000)*(x55))));
    eerot[5]=((((x0)*(x12)*(x4)*(x9)))+(((x0)*(x1)*(x10)*(x11)*(x7)*(x9)))+(((x0)*(x1)*(x13)*(x4)*(x7)))+(((x13)*(x4)*(x5)*(x6)))+(((-1.00000000000000)*(x0)*(x10)*(x11)*(x12)*(x13)))+(((x10)*(x11)*(x5)*(x6)*(x9)))+(((x1)*(x11)*(x3)*(x6)))+(((-1.00000000000000)*(x0)*(x11)*(x3)*(x5)*(x7))));
    eetrans[1]=((((0.0850000000000000)*(x0)*(x1)*(x13)*(x4)*(x7)))+(((-0.0850000000000000)*(x0)*(x11)*(x3)*(x5)*(x7)))+(((0.0850000000000000)*(x1)*(x11)*(x3)*(x6)))+(((0.450000000000000)*(x0)*(x12)))+(((0.0850000000000000)*(x10)*(x11)*(x5)*(x6)*(x9)))+(((0.0850000000000000)*(x13)*(x4)*(x5)*(x6)))+(((0.500000000000000)*(x0)*(x12)*(x9)))+(((0.0850000000000000)*(x0)*(x12)*(x4)*(x9)))+(((0.500000000000000)*(x0)*(x1)*(x13)*(x7)))+(((0.0850000000000000)*(x0)*(x1)*(x10)*(x11)*(x7)*(x9)))+(((0.500000000000000)*(x13)*(x5)*(x6)))+(((-0.0850000000000000)*(x0)*(x10)*(x11)*(x12)*(x13))));
    eerot[6]=((((-1.00000000000000)*(x71)))+(((-1.00000000000000)*(x72)))+(((-1.00000000000000)*(x75)))+(((-1.00000000000000)*(x76)))+(x77)+(x74)+(x73)+(x70)+(x79)+(x78)+(x67)+(x68)+(x80)+(((-1.00000000000000)*(x69)))+(((-1.00000000000000)*(x66)))+(((-1.00000000000000)*(x81))));
    eerot[7]=((((-1.00000000000000)*(x71)))+(((-1.00000000000000)*(x72)))+(((-1.00000000000000)*(x73)))+(((-1.00000000000000)*(x74)))+(((-1.00000000000000)*(x75)))+(((-1.00000000000000)*(x76)))+(((-1.00000000000000)*(x77)))+(((-1.00000000000000)*(x78)))+(((-1.00000000000000)*(x79)))+(x70)+(x66)+(x67)+(x68)+(x69)+(((-1.00000000000000)*(x81)))+(((-1.00000000000000)*(x80))));
    eerot[8]=((((-1.00000000000000)*(x10)*(x11)*(x13)*(x7)))+(((-1.00000000000000)*(x1)*(x10)*(x11)*(x12)*(x9)))+(((x11)*(x12)*(x3)*(x5)))+(((x4)*(x7)*(x9)))+(((-1.00000000000000)*(x1)*(x12)*(x13)*(x4))));
    eetrans[2]=((0.315000000000000)+(((-0.0850000000000000)*(x1)*(x10)*(x11)*(x12)*(x9)))+(((0.0850000000000000)*(x4)*(x7)*(x9)))+(((0.0850000000000000)*(x11)*(x12)*(x3)*(x5)))+(((-0.500000000000000)*(x1)*(x12)*(x13)))+(((-0.0850000000000000)*(x10)*(x11)*(x13)*(x7)))+(((0.500000000000000)*(x7)*(x9)))+(((0.450000000000000)*(x7)))+(((-0.0850000000000000)*(x1)*(x12)*(x13)*(x4))));
}

class IKSolver {
public:
IKReal j0, cj0, sj0,
j1, cj1, sj1,
j3, cj3, sj3,
j4, cj4, sj4,
j5, cj5, sj5,
j6, cj6, sj6,
j2, cj2, sj2,
new_r00, r00,
new_r01, r01,
new_r02, r02,
new_r10, r10,
new_r11, r11,
new_r12, r12,
new_r20, r20,
new_r21, r21,
new_r22, r22,
new_px, new_py, new_pz, px, py, pz;

bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    vsolutions.resize(0); vsolutions.reserve(8);
    j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]);
    r00 = eerot[0*3+0];
    r01 = eerot[0*3+1];
    r02 = eerot[0*3+2];
    r10 = eerot[1*3+0];
    r11 = eerot[1*3+1];
    r12 = eerot[1*3+2];
    r20 = eerot[2*3+0];
    r21 = eerot[2*3+1];
    r22 = eerot[2*3+2];
    px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
    
    new_r00=((((-0.707106781186547)*(r00)))+(((-0.707106781186547)*(r01))));
    new_r01=((((-0.707106781186547)*(r01)))+(((0.707106781186547)*(r00))));
    new_r02=r02;
    new_px=((px)+(((-0.0850000000000000)*(r02))));
    new_r10=((((-0.707106781186547)*(r11)))+(((-0.707106781186547)*(r10))));
    new_r11=((((-0.707106781186547)*(r11)))+(((0.707106781186547)*(r10))));
    new_r12=r12;
    new_py=((py)+(((-0.0850000000000000)*(r12))));
    new_r20=((((-0.707106781186547)*(r20)))+(((-0.707106781186547)*(r21))));
    new_r21=((((0.707106781186547)*(r20)))+(((-0.707106781186547)*(r21))));
    new_r22=r22;
    new_pz=((-0.315000000000000)+(((-0.0850000000000000)*(r22)))+(pz));
    r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
    {
        if( 1 )
        {
        {
        IKReal j3array[2], cj3array[2], sj3array[2];
        bool j3valid[2]={false};
        cj3array[0]=((-1.00555555555556)+(((2.22222222222222)*((pz)*(pz))))+(((2.22222222222222)*((px)*(px))))+(((2.22222222222222)*((py)*(py)))));
        if( cj3array[0] >= -1.0001 && cj3array[0] <= 1.0001 )
        {
            j3valid[0] = j3valid[1] = true;
            j3array[0] = IKacos(cj3array[0]);
            sj3array[0] = IKsin(j3array[0]);
            cj3array[1] = cj3array[0];
            j3array[1] = -j3array[0];
            sj3array[1] = -sj3array[0];
        }
        else if( isnan(cj3array[0]) )
        {
            // probably any value will work
            j3valid[0] = true;
            cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
        }
        if( j3valid[0] && j3valid[1] && IKabs(cj3array[0]-cj3array[1]) < 0.0001 && IKabs(sj3array[0]-sj3array[1]) < 0.0001 )
            j3valid[1]=false;
        for(int ij3 = 0; ij3 < 2; ++ij3)
        {
        if( !j3valid[ij3] ) { continue; }
        j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
        
        {
        IKReal j0array[2], cj0array[2], sj0array[2];
        bool j0valid[2]={false};
        IKReal x0=(px)*(px);
        IKReal x1=(py)*(py);
        IKReal x2=((x1)+(x0));
        if( (x2) < (IKReal)-0.00001 )
            continue;
        IKReal x3=IKsqrt(x2);
        IKReal x4=IKabs(x3);
        IKReal x5=((IKabs(x4) != 0)?((IKReal)1/(x4)):(IKReal)1.0e30);
        IKReal x6=((0.500000000000000)*(sj2)*(sj3)*(x5));
        if( (x6) < -1.0001 || (x6) > 1.0001 )
            continue;
        IKReal x7=IKasin(x6);
        IKReal x8=((-1.00000000000000)*(py));
        IKReal x9=IKatan2(x8, px);
        j0array[0]=((((-1.00000000000000)*(x7)))+(((-1.00000000000000)*(x9))));
        sj0array[0]=IKsin(j0array[0]);
        cj0array[0]=IKcos(j0array[0]);
        j0array[1]=((3.14159265358979)+(x7)+(((-1.00000000000000)*(x9))));
        sj0array[1]=IKsin(j0array[1]);
        cj0array[1]=IKcos(j0array[1]);
        if( j0array[0] > IKPI )
            j0array[0]-=IK2PI;
        else if( j0array[0] < -IKPI )
            j0array[0]+=IK2PI;
        j0valid[0] = true;
        if( j0array[1] > IKPI )
            j0array[1]-=IK2PI;
        else if( j0array[1] < -IKPI )
            j0array[1]+=IK2PI;
        j0valid[1] = true;
        if( j0valid[0] && j0valid[1] && IKabs(cj0array[0]-cj0array[1]) < 0.0001 && IKabs(sj0array[0]-sj0array[1]) < 0.0001 )
            j0valid[1]=false;
        for(int ij0 = 0; ij0 < 2; ++ij0)
        {
        if( !j0valid[ij0] ) { continue; }
        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
        
        {
            IKReal j1eval[1];
            j1eval[0]=((((-0.500000000000000)*(cj3)*(pz)))+(((0.500000000000000)*(cj0)*(cj2)*(px)*(sj3)))+(((-0.450000000000000)*(pz)))+(((0.500000000000000)*(cj2)*(py)*(sj0)*(sj3))));
            if( IKabs(j1eval[0]) < 0.000001  )
            {
                {
                IKReal evalcond[4];
                    IKReal x10=((0.500000000000000)*(sj3));
                    IKReal x11=((px)*(sj0));
                    IKReal x12=((x11)+(x10));
                    IKReal x13=((cj0)*(py));
                    IKReal x14=((((-1.00000000000000)*(x13)))+(x12));
                    evalcond[0]=((IKabs(pz))+(IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                    evalcond[1]=x14;
                    evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                    evalcond[3]=x14;
                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                    {
                    {
                        IKReal j1eval[1];
                        j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                            IKReal evalcond[8];
                                IKReal x15=x11;
                                IKReal x16=((0.217944947177033)+(x15));
                                IKReal x17=x13;
                                IKReal x18=((((-1.00000000000000)*(x17)))+(x16));
                                evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=x18;
                                evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=0;
                                evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                evalcond[5]=((((-0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                evalcond[6]=((((0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                evalcond[7]=x18;
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.435889894354067)*(py)*(sj0)))+(((0.435889894354067)*(cj0)*(px))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    continue;
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x19=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x20=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x21=((x19)+(x20));
                                                                IKReal x22=((IKabs(x21) != 0)?((IKReal)1/(x21)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.435889894354067)*(cj0)*(py)*(x22)))+(((-0.435889894354067)*(px)*(sj0)*(x22)))+(((-0.0949999999999998)*(x22))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x63=((0.435889894354067)*(py)*(sj0));
                                                    IKReal x64=((0.435889894354067)*(cj0)*(px));
                                                    IKReal x65=((x63)+(x64));
                                                    IKReal x66=((IKabs(x65) != 0)?((IKReal)1/(x65)):(IKReal)1.0e30);
                                                    sj1array[0]=((((0.900000000000000)*(px)*(sj0)*(x66)))+(((-0.900000000000000)*(cj0)*(py)*(x66)))+(((0.196150452459330)*(x66))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x67=((0.900000000000000)*(cj0)*(px));
                                        IKReal x68=((0.900000000000000)*(py)*(sj0));
                                        IKReal x69=((x67)+(x68));
                                        IKReal x70=((IKabs(x69) != 0)?((IKReal)1/(x69)):(IKReal)1.0e30);
                                        sj1array[0]=((((x70)*((py)*(py))))+(((-0.0474999999999999)*(x70)))+(((x70)*((px)*(px)))));
                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                        {
                                            j1valid[0] = j1valid[1] = true;
                                            j1array[0] = IKasin(sj1array[0]);
                                            cj1array[0] = IKcos(j1array[0]);
                                            sj1array[1] = sj1array[0];
                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                            cj1array[1] = -cj1array[0];
                                        }
                                        else if( isnan(sj1array[0]) )
                                        {
                                            // probably any value will work
                                            j1valid[0] = true;
                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                        }
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                                IKReal x71=x11;
                                IKReal x72=((-0.217944947177033)+(x71));
                                IKReal x73=x13;
                                IKReal x74=((((-1.00000000000000)*(x73)))+(x72));
                                evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=x74;
                                evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=0;
                                evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                evalcond[5]=((((0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                evalcond[6]=((((-0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                evalcond[7]=x74;
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((-0.435889894354067)*(cj0)*(px)))+(((-0.435889894354067)*(py)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    continue;
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x75=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x76=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x77=((x76)+(x75));
                                                                IKReal x78=((IKabs(x77) != 0)?((IKReal)1/(x77)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.435889894354067)*(px)*(sj0)*(x78)))+(((-0.0949999999999998)*(x78)))+(((-0.435889894354067)*(cj0)*(py)*(x78))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x79=((0.435889894354067)*(py)*(sj0));
                                                    IKReal x80=((0.435889894354067)*(cj0)*(px));
                                                    IKReal x81=((x79)+(x80));
                                                    IKReal x82=((-1.00000000000000)*(x81));
                                                    IKReal x83=((IKabs(x82) != 0)?((IKReal)1/(x82)):(IKReal)1.0e30);
                                                    sj1array[0]=((((0.900000000000000)*(px)*(sj0)*(x83)))+(((-0.900000000000000)*(cj0)*(py)*(x83)))+(((-0.196150452459330)*(x83))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x84=((0.900000000000000)*(cj0)*(px));
                                        IKReal x85=((0.900000000000000)*(py)*(sj0));
                                        IKReal x86=((x84)+(x85));
                                        IKReal x87=((IKabs(x86) != 0)?((IKReal)1/(x86)):(IKReal)1.0e30);
                                        sj1array[0]=((((-0.0474999999999999)*(x87)))+(((x87)*((px)*(px))))+(((x87)*((py)*(py)))));
                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                        {
                                            j1valid[0] = j1valid[1] = true;
                                            j1array[0] = IKasin(sj1array[0]);
                                            cj1array[0] = IKcos(j1array[0]);
                                            sj1array[1] = sj1array[0];
                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                            cj1array[1] = -cj1array[0];
                                        }
                                        else if( isnan(sj1array[0]) )
                                        {
                                            // probably any value will work
                                            j1valid[0] = true;
                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                        }
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.450000000000000)*(cj0)))+(((0.500000000000000)*(cj0)*(cj3))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                        IKReal evalcond[8];
                                            IKReal x88=x11;
                                            IKReal x89=((0.217944947177033)+(x88));
                                            IKReal x90=x13;
                                            IKReal x91=((x89)+(((-1.00000000000000)*(x90))));
                                            evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x91;
                                            evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=0;
                                            evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                            evalcond[5]=((((-0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                            evalcond[6]=((((0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                            evalcond[7]=x91;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.435889894354067)*(py)*(sj0)))+(((0.435889894354067)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x92=((0.900000000000000)*(py)*(sj0));
                                                                            IKReal x93=((0.900000000000000)*(cj0)*(px));
                                                                            IKReal x94=((x93)+(x92));
                                                                            IKReal x95=((IKabs(x94) != 0)?((IKReal)1/(x94)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.0949999999999998)*(x95)))+(((0.435889894354067)*(cj0)*(py)*(x95)))+(((-0.435889894354067)*(px)*(sj0)*(x95))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x96=((0.435889894354067)*(py)*(sj0));
                                                                IKReal x97=((0.435889894354067)*(cj0)*(px));
                                                                IKReal x98=((x97)+(x96));
                                                                IKReal x99=((IKabs(x98) != 0)?((IKReal)1/(x98)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.900000000000000)*(px)*(sj0)*(x99)))+(((-0.900000000000000)*(cj0)*(py)*(x99)))+(((0.196150452459330)*(x99))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x100=((0.900000000000000)*(cj0)*(px));
                                                    IKReal x101=((0.900000000000000)*(py)*(sj0));
                                                    IKReal x102=((x100)+(x101));
                                                    IKReal x103=((IKabs(x102) != 0)?((IKReal)1/(x102)):(IKReal)1.0e30);
                                                    sj1array[0]=((((-0.0474999999999999)*(x103)))+(((x103)*((px)*(px))))+(((x103)*((py)*(py)))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x104=x11;
                                            IKReal x105=((-0.217944947177033)+(x104));
                                            IKReal x106=x13;
                                            IKReal x107=((((-1.00000000000000)*(x106)))+(x105));
                                            evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x107;
                                            evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=0;
                                            evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                            evalcond[5]=((((0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                            evalcond[6]=((((-0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                            evalcond[7]=x107;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((-0.435889894354067)*(cj0)*(px)))+(((-0.435889894354067)*(py)*(sj0))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x108=((0.900000000000000)*(py)*(sj0));
                                                                            IKReal x109=((0.900000000000000)*(cj0)*(px));
                                                                            IKReal x110=((x108)+(x109));
                                                                            IKReal x111=((IKabs(x110) != 0)?((IKReal)1/(x110)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.435889894354067)*(cj0)*(py)*(x111)))+(((0.435889894354067)*(px)*(sj0)*(x111)))+(((-0.0949999999999998)*(x111))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x112=((0.435889894354067)*(py)*(sj0));
                                                                IKReal x113=((0.435889894354067)*(cj0)*(px));
                                                                IKReal x114=((x113)+(x112));
                                                                IKReal x115=((-1.00000000000000)*(x114));
                                                                IKReal x116=((IKabs(x115) != 0)?((IKReal)1/(x115)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.196150452459330)*(x116)))+(((-0.900000000000000)*(cj0)*(py)*(x116)))+(((0.900000000000000)*(px)*(sj0)*(x116))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x117=((0.900000000000000)*(cj0)*(px));
                                                    IKReal x118=((0.900000000000000)*(py)*(sj0));
                                                    IKReal x119=((x117)+(x118));
                                                    IKReal x120=((IKabs(x119) != 0)?((IKReal)1/(x119)):(IKReal)1.0e30);
                                                    sj1array[0]=((((x120)*((px)*(px))))+(((-0.0474999999999999)*(x120)))+(((x120)*((py)*(py)))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x121=x10;
                                            IKReal x122=((x121)+(px));
                                            evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x122;
                                            evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=((-1.00000000000000)*(x122));
                                            evalcond[4]=x122;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[7];
                                                        IKReal x123=x8;
                                                        evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((0.217944947177033)+(px));
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=x123;
                                                        evalcond[5]=((-0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=x123;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x124=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.0527777777777776)*(x124)))+(((1.11111111111111)*(x124)*((px)*(px))))+(((1.11111111111111)*(py))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x125=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.105555555555555)*(x125)))+(((-0.484322104837852)*(px)*(x125))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x126=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.450000000000000)*(x126)))+(((2.06474160483506)*(px)*(x126))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x127=x8;
                                                        evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((-0.217944947177033)+(px));
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=x127;
                                                        evalcond[5]=((0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=x127;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x128=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.0527777777777776)*(x128)))+(((1.11111111111111)*(x128)*((px)*(px))))+(((1.11111111111111)*(py))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x129=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.484322104837852)*(px)*(x129)))+(((-0.105555555555555)*(x129))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x130=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.450000000000000)*(x130)))+(((-2.06474160483506)*(px)*(x130))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x131=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.0527777777777776)*(x131)))+(((1.11111111111111)*(x131)*((px)*(px))))+(((1.11111111111111)*(py))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x132=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.500000000000000)*(cj3)*(x132)))+(((0.450000000000000)*(x132))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    sj1array[0]=((py)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x133=x10;
                                            IKReal x134=((x133)+(((-1.00000000000000)*(px))));
                                            evalcond[0]=((IKfmod(((1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x134;
                                            evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x134;
                                            evalcond[4]=x134;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[8];
                                                        IKReal x135=((0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x135;
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=py;
                                                        evalcond[5]=x135;
                                                        evalcond[6]=((-1.00000000000000)*(py));
                                                        evalcond[7]=x135;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x136=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-1.11111111111111)*(py)))+(((-1.11111111111111)*(x136)*((px)*(px))))+(((0.0527777777777776)*(x136))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x137=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.484322104837852)*(px)*(x137)))+(((0.105555555555555)*(x137))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x138=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((2.06474160483506)*(px)*(x138)))+(((-0.450000000000000)*(x138))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x139=((-0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x139;
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=py;
                                                        evalcond[5]=x139;
                                                        evalcond[6]=((-1.00000000000000)*(py));
                                                        evalcond[7]=x139;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x140=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-1.11111111111111)*(x140)*((px)*(px))))+(((-1.11111111111111)*(py)))+(((0.0527777777777776)*(x140))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x141=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.484322104837852)*(px)*(x141)))+(((0.105555555555555)*(x141))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x142=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.450000000000000)*(x142)))+(((-2.06474160483506)*(px)*(x142))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x143=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-1.11111111111111)*(x143)*((px)*(px))))+(((-1.11111111111111)*(py)))+(((0.0527777777777776)*(x143))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x144=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.450000000000000)*(x144)))+(((-0.500000000000000)*(cj3)*(x144))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    sj1array[0]=((-1.00000000000000)*(py)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.500000000000000)*(cj3)*(sj0)))+(((0.450000000000000)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[8];
                                                        IKReal x145=x11;
                                                        IKReal x146=((0.217944947177033)+(x145));
                                                        IKReal x147=x13;
                                                        IKReal x148=((((-1.00000000000000)*(x147)))+(x146));
                                                        evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x148;
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                                        evalcond[5]=((((-0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=((((0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                                        evalcond[7]=x148;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((0.435889894354067)*(py)*(sj0)))+(((0.435889894354067)*(cj0)*(px))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x149=((0.900000000000000)*(py)*(sj0));
                                                                                        IKReal x150=((0.900000000000000)*(cj0)*(px));
                                                                                        IKReal x151=((x150)+(x149));
                                                                                        IKReal x152=((IKabs(x151) != 0)?((IKReal)1/(x151)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.435889894354067)*(cj0)*(py)*(x152)))+(((-0.0949999999999998)*(x152)))+(((-0.435889894354067)*(px)*(sj0)*(x152))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x153=((0.435889894354067)*(py)*(sj0));
                                                                            IKReal x154=((0.435889894354067)*(cj0)*(px));
                                                                            IKReal x155=((x154)+(x153));
                                                                            IKReal x156=((IKabs(x155) != 0)?((IKReal)1/(x155)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.900000000000000)*(px)*(sj0)*(x156)))+(((-0.900000000000000)*(cj0)*(py)*(x156)))+(((0.196150452459330)*(x156))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x157=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x158=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x159=((x157)+(x158));
                                                                IKReal x160=((IKabs(x159) != 0)?((IKReal)1/(x159)):(IKReal)1.0e30);
                                                                sj1array[0]=((((x160)*((px)*(px))))+(((x160)*((py)*(py))))+(((-0.0474999999999999)*(x160))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x161=x11;
                                                        IKReal x162=((-0.217944947177033)+(x161));
                                                        IKReal x163=x13;
                                                        IKReal x164=((((-1.00000000000000)*(x163)))+(x162));
                                                        evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x164;
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                                        evalcond[5]=((((0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=((((-0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                                        evalcond[7]=x164;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((-0.435889894354067)*(cj0)*(px)))+(((-0.435889894354067)*(py)*(sj0))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x165=((0.900000000000000)*(py)*(sj0));
                                                                                        IKReal x166=((0.900000000000000)*(cj0)*(px));
                                                                                        IKReal x167=((x166)+(x165));
                                                                                        IKReal x168=((IKabs(x167) != 0)?((IKReal)1/(x167)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.435889894354067)*(px)*(sj0)*(x168)))+(((-0.0949999999999998)*(x168)))+(((-0.435889894354067)*(cj0)*(py)*(x168))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x169=((0.435889894354067)*(py)*(sj0));
                                                                            IKReal x170=((0.435889894354067)*(cj0)*(px));
                                                                            IKReal x171=((x170)+(x169));
                                                                            IKReal x172=((-1.00000000000000)*(x171));
                                                                            IKReal x173=((IKabs(x172) != 0)?((IKReal)1/(x172)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.900000000000000)*(cj0)*(py)*(x173)))+(((0.900000000000000)*(px)*(sj0)*(x173)))+(((-0.196150452459330)*(x173))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x174=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x175=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x176=((x175)+(x174));
                                                                IKReal x177=((IKabs(x176) != 0)?((IKReal)1/(x176)):(IKReal)1.0e30);
                                                                sj1array[0]=((((x177)*((py)*(py))))+(((x177)*((px)*(px))))+(((-0.0474999999999999)*(x177))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x178=x10;
                                                        IKReal x179=((x178)+(((-1.00000000000000)*(py))));
                                                        evalcond[0]=((IKfmod(((3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x179;
                                                        evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x179;
                                                        evalcond[4]=x179;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[8];
                                                                    IKReal x180=((-1.00000000000000)*(px));
                                                                    IKReal x181=((0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x181;
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=x180;
                                                                    evalcond[5]=x180;
                                                                    evalcond[6]=x181;
                                                                    evalcond[7]=x181;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x182=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((-0.0527777777777776)*(x182)))+(((1.11111111111111)*(x182)*((py)*(py))))+(((1.11111111111111)*(px))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x183=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.105555555555555)*(x183)))+(((0.484322104837852)*(py)*(x183))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x184=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.450000000000000)*(x184)))+(((-2.06474160483506)*(py)*(x184))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    IKReal x185=((-1.00000000000000)*(px));
                                                                    IKReal x186=((-0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x186;
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=x185;
                                                                    evalcond[5]=x185;
                                                                    evalcond[6]=x186;
                                                                    evalcond[7]=x186;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x187=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((-0.0527777777777776)*(x187)))+(((1.11111111111111)*(x187)*((py)*(py))))+(((1.11111111111111)*(px))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x188=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.484322104837852)*(py)*(x188)))+(((-0.105555555555555)*(x188))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x189=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((2.06474160483506)*(py)*(x189)))+(((0.450000000000000)*(x189))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x190=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.0527777777777776)*(x190)))+(((1.11111111111111)*(x190)*((py)*(py))))+(((1.11111111111111)*(px))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x191=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.450000000000000)*(x191)))+(((0.500000000000000)*(cj3)*(x191))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                sj1array[0]=((px)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x192=x10;
                                                        IKReal x193=((x192)+(py));
                                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x193;
                                                        evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(x193));
                                                        evalcond[4]=x193;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[7];
                                                                    evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=((0.217944947177033)+(py));
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=px;
                                                                    evalcond[5]=((-1.00000000000000)*(px));
                                                                    evalcond[6]=((-0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x194=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((-1.11111111111111)*(px)))+(((0.0527777777777776)*(x194)))+(((-1.11111111111111)*(x194)*((py)*(py)))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x195=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.484322104837852)*(py)*(x195)))+(((0.105555555555555)*(x195))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x196=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.450000000000000)*(x196)))+(((-2.06474160483506)*(py)*(x196))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=((-0.217944947177033)+(py));
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=px;
                                                                    evalcond[5]=((-1.00000000000000)*(px));
                                                                    evalcond[6]=((0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x197=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((-1.11111111111111)*(x197)*((py)*(py))))+(((-1.11111111111111)*(px)))+(((0.0527777777777776)*(x197))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x198=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.484322104837852)*(py)*(x198)))+(((0.105555555555555)*(x198))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x199=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.450000000000000)*(x199)))+(((2.06474160483506)*(py)*(x199))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x200=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-1.11111111111111)*(x200)*((py)*(py))))+(((-1.11111111111111)*(px)))+(((0.0527777777777776)*(x200))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x201=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.450000000000000)*(x201)))+(((-0.500000000000000)*(cj3)*(x201))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                sj1array[0]=((-1.00000000000000)*(px)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        continue;
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x202=((0.500000000000000)*(cj3)*(sj0));
                                                    IKReal x203=((0.450000000000000)*(sj0));
                                                    IKReal x204=((x203)+(x202));
                                                    IKReal x205=((IKabs(x204) != 0)?((IKReal)1/(x204)):(IKReal)1.0e30);
                                                    sj1array[0]=((((-0.500000000000000)*(cj0)*(sj3)*(x205)))+(((py)*(x205))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                        }
                                        }
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x206=((0.450000000000000)*(cj0));
                                        IKReal x207=((0.500000000000000)*(cj0)*(cj3));
                                        IKReal x208=((x207)+(x206));
                                        IKReal x209=((IKabs(x208) != 0)?((IKReal)1/(x208)):(IKReal)1.0e30);
                                        sj1array[0]=((((px)*(x209)))+(((0.500000000000000)*(sj0)*(sj3)*(x209))));
                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                        {
                                            j1valid[0] = j1valid[1] = true;
                                            j1array[0] = IKasin(sj1array[0]);
                                            cj1array[0] = IKcos(j1array[0]);
                                            sj1array[1] = sj1array[0];
                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                            cj1array[1] = -cj1array[0];
                                        }
                                        else if( isnan(sj1array[0]) )
                                        {
                                            // probably any value will work
                                            j1valid[0] = true;
                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                        }
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                            }
                            }
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[2], cj1array[2], sj1array[2];
                            bool j1valid[2]={false};
                            IKReal x210=((0.500000000000000)*(cj3));
                            IKReal x211=((0.450000000000000)+(x210));
                            IKReal x212=((IKabs(x211) != 0)?((IKReal)1/(x211)):(IKReal)1.0e30);
                            sj1array[0]=((((cj0)*(px)*(x212)))+(((py)*(sj0)*(x212))));
                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                            {
                                j1valid[0] = j1valid[1] = true;
                                j1array[0] = IKasin(sj1array[0]);
                                cj1array[0] = IKcos(j1array[0]);
                                sj1array[1] = sj1array[0];
                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                cj1array[1] = -cj1array[0];
                            }
                            else if( isnan(sj1array[0]) )
                            {
                                // probably any value will work
                                j1valid[0] = true;
                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                            }
                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                j1valid[1]=false;
                            for(int ij1 = 0; ij1 < 2; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            rotationfunction0(vsolutions);
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                    IKReal x213=((0.500000000000000)*(sj3));
                    IKReal x214=((cj0)*(py));
                    IKReal x215=((x213)+(x214));
                    IKReal x216=((px)*(sj0));
                    evalcond[0]=((IKabs(pz))+(IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                    evalcond[1]=((x216)+(((-1.00000000000000)*(x215))));
                    evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                    evalcond[3]=((x215)+(((-1.00000000000000)*(x216))));
                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                    {
                    {
                        IKReal j1eval[1];
                        j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                            IKReal evalcond[8];
                                IKReal x217=x214;
                                IKReal x218=x216;
                                evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=((-0.217944947177033)+(x218)+(((-1.00000000000000)*(x217))));
                                evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=0;
                                evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                evalcond[5]=((((0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                evalcond[6]=((((-0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                evalcond[7]=((0.217944947177033)+(x217)+(((-1.00000000000000)*(x218))));
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.435889894354067)*(py)*(sj0)))+(((0.435889894354067)*(cj0)*(px))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    continue;
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x219=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x220=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x221=((x219)+(x220));
                                                                IKReal x222=((IKabs(x221) != 0)?((IKReal)1/(x221)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.435889894354067)*(cj0)*(py)*(x222)))+(((0.435889894354067)*(px)*(sj0)*(x222)))+(((-0.0949999999999998)*(x222))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x223=((0.435889894354067)*(py)*(sj0));
                                                    IKReal x224=((0.435889894354067)*(cj0)*(px));
                                                    IKReal x225=((x223)+(x224));
                                                    IKReal x226=((IKabs(x225) != 0)?((IKReal)1/(x225)):(IKReal)1.0e30);
                                                    sj1array[0]=((((0.900000000000000)*(cj0)*(py)*(x226)))+(((0.196150452459330)*(x226)))+(((-0.900000000000000)*(px)*(sj0)*(x226))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x227=((0.900000000000000)*(cj0)*(px));
                                        IKReal x228=((0.900000000000000)*(py)*(sj0));
                                        IKReal x229=((x228)+(x227));
                                        IKReal x230=((IKabs(x229) != 0)?((IKReal)1/(x229)):(IKReal)1.0e30);
                                        sj1array[0]=((((x230)*((py)*(py))))+(((x230)*((px)*(px))))+(((-0.0474999999999999)*(x230))));
                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                        {
                                            j1valid[0] = j1valid[1] = true;
                                            j1array[0] = IKasin(sj1array[0]);
                                            cj1array[0] = IKcos(j1array[0]);
                                            sj1array[1] = sj1array[0];
                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                            cj1array[1] = -cj1array[0];
                                        }
                                        else if( isnan(sj1array[0]) )
                                        {
                                            // probably any value will work
                                            j1valid[0] = true;
                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                        }
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                                IKReal x231=x214;
                                IKReal x232=x216;
                                evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=((0.217944947177033)+(((-1.00000000000000)*(x231)))+(x232));
                                evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=0;
                                evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                evalcond[5]=((((-0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                evalcond[6]=((((0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                evalcond[7]=((-0.217944947177033)+(((-1.00000000000000)*(x232)))+(x231));
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((-0.435889894354067)*(cj0)*(px)))+(((-0.435889894354067)*(py)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    continue;
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x233=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x234=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x235=((x233)+(x234));
                                                                IKReal x236=((IKabs(x235) != 0)?((IKReal)1/(x235)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.0949999999999998)*(x236)))+(((0.435889894354067)*(cj0)*(py)*(x236)))+(((-0.435889894354067)*(px)*(sj0)*(x236))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x237=((0.435889894354067)*(py)*(sj0));
                                                    IKReal x238=((0.435889894354067)*(cj0)*(px));
                                                    IKReal x239=((x238)+(x237));
                                                    IKReal x240=((-1.00000000000000)*(x239));
                                                    IKReal x241=((IKabs(x240) != 0)?((IKReal)1/(x240)):(IKReal)1.0e30);
                                                    sj1array[0]=((((-0.900000000000000)*(px)*(sj0)*(x241)))+(((0.900000000000000)*(cj0)*(py)*(x241)))+(((-0.196150452459330)*(x241))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x242=((0.900000000000000)*(cj0)*(px));
                                        IKReal x243=((0.900000000000000)*(py)*(sj0));
                                        IKReal x244=((x243)+(x242));
                                        IKReal x245=((IKabs(x244) != 0)?((IKReal)1/(x244)):(IKReal)1.0e30);
                                        sj1array[0]=((((x245)*((py)*(py))))+(((-0.0474999999999999)*(x245)))+(((x245)*((px)*(px)))));
                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                        {
                                            j1valid[0] = j1valid[1] = true;
                                            j1array[0] = IKasin(sj1array[0]);
                                            cj1array[0] = IKcos(j1array[0]);
                                            sj1array[1] = sj1array[0];
                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                            cj1array[1] = -cj1array[0];
                                        }
                                        else if( isnan(sj1array[0]) )
                                        {
                                            // probably any value will work
                                            j1valid[0] = true;
                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                        }
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.450000000000000)*(cj0)))+(((0.500000000000000)*(cj0)*(cj3))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                        IKReal evalcond[8];
                                            IKReal x246=x214;
                                            IKReal x247=x216;
                                            evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=((-0.217944947177033)+(x247)+(((-1.00000000000000)*(x246))));
                                            evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=0;
                                            evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                            evalcond[5]=((((0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                            evalcond[6]=((((-0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                            evalcond[7]=((0.217944947177033)+(x246)+(((-1.00000000000000)*(x247))));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.435889894354067)*(py)*(sj0)))+(((0.435889894354067)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x248=((0.900000000000000)*(py)*(sj0));
                                                                            IKReal x249=((0.900000000000000)*(cj0)*(px));
                                                                            IKReal x250=((x249)+(x248));
                                                                            IKReal x251=((IKabs(x250) != 0)?((IKReal)1/(x250)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.435889894354067)*(cj0)*(py)*(x251)))+(((0.435889894354067)*(px)*(sj0)*(x251)))+(((-0.0949999999999998)*(x251))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x252=((0.435889894354067)*(py)*(sj0));
                                                                IKReal x253=((0.435889894354067)*(cj0)*(px));
                                                                IKReal x254=((x252)+(x253));
                                                                IKReal x255=((IKabs(x254) != 0)?((IKReal)1/(x254)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.196150452459330)*(x255)))+(((0.900000000000000)*(cj0)*(py)*(x255)))+(((-0.900000000000000)*(px)*(sj0)*(x255))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x256=((0.900000000000000)*(cj0)*(px));
                                                    IKReal x257=((0.900000000000000)*(py)*(sj0));
                                                    IKReal x258=((x256)+(x257));
                                                    IKReal x259=((IKabs(x258) != 0)?((IKReal)1/(x258)):(IKReal)1.0e30);
                                                    sj1array[0]=((((x259)*((px)*(px))))+(((-0.0474999999999999)*(x259)))+(((x259)*((py)*(py)))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x260=x214;
                                            IKReal x261=x216;
                                            evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=((0.217944947177033)+(x261)+(((-1.00000000000000)*(x260))));
                                            evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=0;
                                            evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                            evalcond[5]=((((-0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                            evalcond[6]=((((0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                            evalcond[7]=((-0.217944947177033)+(x260)+(((-1.00000000000000)*(x261))));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((-0.435889894354067)*(cj0)*(px)))+(((-0.435889894354067)*(py)*(sj0))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x262=((0.900000000000000)*(py)*(sj0));
                                                                            IKReal x263=((0.900000000000000)*(cj0)*(px));
                                                                            IKReal x264=((x263)+(x262));
                                                                            IKReal x265=((IKabs(x264) != 0)?((IKReal)1/(x264)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.435889894354067)*(px)*(sj0)*(x265)))+(((-0.0949999999999998)*(x265)))+(((0.435889894354067)*(cj0)*(py)*(x265))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x266=((0.435889894354067)*(py)*(sj0));
                                                                IKReal x267=((0.435889894354067)*(cj0)*(px));
                                                                IKReal x268=((x267)+(x266));
                                                                IKReal x269=((-1.00000000000000)*(x268));
                                                                IKReal x270=((IKabs(x269) != 0)?((IKReal)1/(x269)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.900000000000000)*(px)*(sj0)*(x270)))+(((0.900000000000000)*(cj0)*(py)*(x270)))+(((-0.196150452459330)*(x270))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x271=((0.900000000000000)*(cj0)*(px));
                                                    IKReal x272=((0.900000000000000)*(py)*(sj0));
                                                    IKReal x273=((x272)+(x271));
                                                    IKReal x274=((IKabs(x273) != 0)?((IKReal)1/(x273)):(IKReal)1.0e30);
                                                    sj1array[0]=((((-0.0474999999999999)*(x274)))+(((x274)*((px)*(px))))+(((x274)*((py)*(py)))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x275=x213;
                                            IKReal x276=((x275)+(((-1.00000000000000)*(px))));
                                            evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=((px)+(((-1.00000000000000)*(x275))));
                                            evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x276;
                                            evalcond[4]=x276;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[7];
                                                        IKReal x277=x8;
                                                        evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((-0.217944947177033)+(px));
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=x277;
                                                        evalcond[5]=((0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=x277;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x278=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((1.11111111111111)*(x278)*((px)*(px))))+(((-0.0527777777777776)*(x278)))+(((1.11111111111111)*(py))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x279=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.484322104837852)*(px)*(x279)))+(((-0.105555555555555)*(x279))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x280=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.450000000000000)*(x280)))+(((-2.06474160483506)*(px)*(x280))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x281=x8;
                                                        evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((0.217944947177033)+(px));
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=x281;
                                                        evalcond[5]=((-0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=x281;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x282=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.0527777777777776)*(x282)))+(((1.11111111111111)*(py)))+(((1.11111111111111)*(x282)*((px)*(px)))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x283=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.105555555555555)*(x283)))+(((-0.484322104837852)*(px)*(x283))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x284=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((2.06474160483506)*(px)*(x284)))+(((0.450000000000000)*(x284))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x285=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((1.11111111111111)*(x285)*((px)*(px))))+(((-0.0527777777777776)*(x285)))+(((1.11111111111111)*(py))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x286=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((0.450000000000000)*(x286)))+(((0.500000000000000)*(cj3)*(x286))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    sj1array[0]=((py)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x287=x213;
                                            IKReal x288=((x287)+(px));
                                            IKReal x289=((-1.00000000000000)*(x288));
                                            evalcond[0]=((IKfmod(((1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x289;
                                            evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x289;
                                            evalcond[4]=x288;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[8];
                                                        IKReal x290=((-0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x290;
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=py;
                                                        evalcond[5]=x290;
                                                        evalcond[6]=((-1.00000000000000)*(py));
                                                        evalcond[7]=((0.217944947177033)+(px));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x291=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-1.11111111111111)*(x291)*((px)*(px))))+(((-1.11111111111111)*(py)))+(((0.0527777777777776)*(x291))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x292=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.105555555555555)*(x292)))+(((0.484322104837852)*(px)*(x292))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x293=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.450000000000000)*(x293)))+(((-2.06474160483506)*(px)*(x293))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x294=((0.217944947177033)+(((-1.00000000000000)*(px))));
                                                        evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x294;
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=py;
                                                        evalcond[5]=x294;
                                                        evalcond[6]=((-1.00000000000000)*(py));
                                                        evalcond[7]=((-0.217944947177033)+(px));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=py;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x295=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-1.11111111111111)*(py)))+(((-1.11111111111111)*(x295)*((px)*(px))))+(((0.0527777777777776)*(x295))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x296=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.105555555555555)*(x296)))+(((-0.484322104837852)*(px)*(x296))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x297=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.450000000000000)*(x297)))+(((2.06474160483506)*(px)*(x297))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=py;
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=py;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x298=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-1.11111111111111)*(x298)*((px)*(px))))+(((-1.11111111111111)*(py)))+(((0.0527777777777776)*(x298))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x299=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.500000000000000)*(cj3)*(x299)))+(((-0.450000000000000)*(x299))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    sj1array[0]=((-1.00000000000000)*(py)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((0.500000000000000)*(cj3)*(sj0)))+(((0.450000000000000)*(sj0))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[8];
                                                        IKReal x300=x214;
                                                        IKReal x301=x216;
                                                        evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((-0.217944947177033)+(x301)+(((-1.00000000000000)*(x300))));
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                                        evalcond[5]=((((0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=((((-0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                                        evalcond[7]=((0.217944947177033)+(x300)+(((-1.00000000000000)*(x301))));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((0.435889894354067)*(py)*(sj0)))+(((0.435889894354067)*(cj0)*(px))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x302=((0.900000000000000)*(py)*(sj0));
                                                                                        IKReal x303=((0.900000000000000)*(cj0)*(px));
                                                                                        IKReal x304=((x302)+(x303));
                                                                                        IKReal x305=((IKabs(x304) != 0)?((IKReal)1/(x304)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.435889894354067)*(cj0)*(py)*(x305)))+(((0.435889894354067)*(px)*(sj0)*(x305)))+(((-0.0949999999999998)*(x305))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x306=((0.435889894354067)*(py)*(sj0));
                                                                            IKReal x307=((0.435889894354067)*(cj0)*(px));
                                                                            IKReal x308=((x306)+(x307));
                                                                            IKReal x309=((IKabs(x308) != 0)?((IKReal)1/(x308)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.900000000000000)*(cj0)*(py)*(x309)))+(((0.196150452459330)*(x309)))+(((-0.900000000000000)*(px)*(sj0)*(x309))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x310=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x311=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x312=((x311)+(x310));
                                                                IKReal x313=((IKabs(x312) != 0)?((IKReal)1/(x312)):(IKReal)1.0e30);
                                                                sj1array[0]=((((x313)*((px)*(px))))+(((-0.0474999999999999)*(x313)))+(((x313)*((py)*(py)))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x314=x214;
                                                        IKReal x315=x216;
                                                        evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((0.217944947177033)+(x315)+(((-1.00000000000000)*(x314))));
                                                        evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=0;
                                                        evalcond[4]=((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px))));
                                                        evalcond[5]=((((-0.217944947177033)*(sj0)))+(((-1.00000000000000)*(px))));
                                                        evalcond[6]=((((0.217944947177033)*(cj0)))+(((-1.00000000000000)*(py))));
                                                        evalcond[7]=((-0.217944947177033)+(x314)+(((-1.00000000000000)*(x315))));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.900000000000000)*(cj0)*(px)))+(((0.900000000000000)*(py)*(sj0))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=((((-0.435889894354067)*(cj0)*(px)))+(((-0.435889894354067)*(py)*(sj0))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=((((0.900000000000000)*(py)*(sj0)))+(((0.900000000000000)*(cj0)*(px))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x316=((0.900000000000000)*(py)*(sj0));
                                                                                        IKReal x317=((0.900000000000000)*(cj0)*(px));
                                                                                        IKReal x318=((x317)+(x316));
                                                                                        IKReal x319=((IKabs(x318) != 0)?((IKReal)1/(x318)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.435889894354067)*(px)*(sj0)*(x319)))+(((-0.0949999999999998)*(x319)))+(((0.435889894354067)*(cj0)*(py)*(x319))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x320=((0.435889894354067)*(py)*(sj0));
                                                                            IKReal x321=((0.435889894354067)*(cj0)*(px));
                                                                            IKReal x322=((x320)+(x321));
                                                                            IKReal x323=((-1.00000000000000)*(x322));
                                                                            IKReal x324=((IKabs(x323) != 0)?((IKReal)1/(x323)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.900000000000000)*(cj0)*(py)*(x324)))+(((-0.196150452459330)*(x324)))+(((-0.900000000000000)*(px)*(sj0)*(x324))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                IKReal x325=((0.900000000000000)*(cj0)*(px));
                                                                IKReal x326=((0.900000000000000)*(py)*(sj0));
                                                                IKReal x327=((x325)+(x326));
                                                                IKReal x328=((IKabs(x327) != 0)?((IKReal)1/(x327)):(IKReal)1.0e30);
                                                                sj1array[0]=((((-0.0474999999999999)*(x328)))+(((x328)*((px)*(px))))+(((x328)*((py)*(py)))));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x329=x213;
                                                        IKReal x330=((x329)+(py));
                                                        IKReal x331=((-1.00000000000000)*(x330));
                                                        evalcond[0]=((IKfmod(((3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x331;
                                                        evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x331;
                                                        evalcond[4]=x330;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[8];
                                                                    IKReal x332=((-1.00000000000000)*(px));
                                                                    IKReal x333=((-0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x333;
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=x332;
                                                                    evalcond[5]=x332;
                                                                    evalcond[6]=x333;
                                                                    evalcond[7]=((0.217944947177033)+(py));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x334=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((1.11111111111111)*(x334)*((py)*(py))))+(((-0.0527777777777776)*(x334)))+(((1.11111111111111)*(px))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x335=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.484322104837852)*(py)*(x335)))+(((-0.105555555555555)*(x335))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x336=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.450000000000000)*(x336)))+(((2.06474160483506)*(py)*(x336))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    IKReal x337=((-1.00000000000000)*(px));
                                                                    IKReal x338=((0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x338;
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=x337;
                                                                    evalcond[5]=x337;
                                                                    evalcond[6]=x338;
                                                                    evalcond[7]=((-0.217944947177033)+(py));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  && IKabs(evalcond[7]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x339=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((-0.0527777777777776)*(x339)))+(((1.11111111111111)*(px)))+(((1.11111111111111)*(x339)*((py)*(py)))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x340=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.484322104837852)*(py)*(x340)))+(((-0.105555555555555)*(x340))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x341=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.450000000000000)*(x341)))+(((-2.06474160483506)*(py)*(x341))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x342=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((-0.0527777777777776)*(x342)))+(((1.11111111111111)*(x342)*((py)*(py))))+(((1.11111111111111)*(px))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x343=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((0.500000000000000)*(cj3)*(x343)))+(((0.450000000000000)*(x343))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                sj1array[0]=((px)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x344=x213;
                                                        IKReal x345=((x344)+(((-1.00000000000000)*(py))));
                                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((py)+(((-1.00000000000000)*(x344))));
                                                        evalcond[2]=((0.452500000000000)+(((0.450000000000000)*(cj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x345;
                                                        evalcond[4]=x345;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((0.450000000000000)+(((0.500000000000000)*(cj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[7];
                                                                    evalcond[0]=((IKfmod(((-2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=((-0.217944947177033)+(py));
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=px;
                                                                    evalcond[5]=((-1.00000000000000)*(px));
                                                                    evalcond[6]=((0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x346=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((0.0527777777777776)*(x346)))+(((-1.11111111111111)*(x346)*((py)*(py))))+(((-1.11111111111111)*(px))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x347=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.105555555555555)*(x347)))+(((-0.484322104837852)*(py)*(x347))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x348=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.450000000000000)*(x348)))+(((2.06474160483506)*(py)*(x348))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    evalcond[0]=((IKfmod(((2.69056584179353)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=((0.217944947177033)+(py));
                                                                    evalcond[2]=((0.0474999999999999)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=0;
                                                                    evalcond[4]=px;
                                                                    evalcond[5]=((-1.00000000000000)*(px));
                                                                    evalcond[6]=((-0.217944947177033)+(((-1.00000000000000)*(py))));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[1];
                                                                                                j1eval[0]=px;
                                                                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        continue;
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                                    bool j1valid[2]={false};
                                                                                                    IKReal x349=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                                    sj1array[0]=((((0.0527777777777776)*(x349)))+(((-1.11111111111111)*(px)))+(((-1.11111111111111)*(x349)*((py)*(py)))));
                                                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                                    {
                                                                                                        j1valid[0] = j1valid[1] = true;
                                                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                                                        sj1array[1] = sj1array[0];
                                                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                        cj1array[1] = -cj1array[0];
                                                                                                    }
                                                                                                    else if( isnan(sj1array[0]) )
                                                                                                    {
                                                                                                        // probably any value will work
                                                                                                        j1valid[0] = true;
                                                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                                    }
                                                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                        j1valid[1]=false;
                                                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x350=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.484322104837852)*(py)*(x350)))+(((0.105555555555555)*(x350))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x351=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-2.06474160483506)*(py)*(x351)))+(((-0.450000000000000)*(x351))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[1];
                                                                        j1eval[0]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                                        {
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[1];
                                                                                    j1eval[0]=px;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                        bool j1valid[2]={false};
                                                                                        IKReal x352=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        sj1array[0]=((((0.0527777777777776)*(x352)))+(((-1.11111111111111)*(px)))+(((-1.11111111111111)*(x352)*((py)*(py)))));
                                                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                        {
                                                                                            j1valid[0] = j1valid[1] = true;
                                                                                            j1array[0] = IKasin(sj1array[0]);
                                                                                            cj1array[0] = IKcos(j1array[0]);
                                                                                            sj1array[1] = sj1array[0];
                                                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                            cj1array[1] = -cj1array[0];
                                                                                        }
                                                                                        else if( isnan(sj1array[0]) )
                                                                                        {
                                                                                            // probably any value will work
                                                                                            j1valid[0] = true;
                                                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                        }
                                                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                            j1valid[1]=false;
                                                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                            bool j1valid[2]={false};
                                                                            IKReal x353=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                            sj1array[0]=((((-0.450000000000000)*(x353)))+(((-0.500000000000000)*(cj3)*(x353))));
                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                            {
                                                                                j1valid[0] = j1valid[1] = true;
                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                sj1array[1] = sj1array[0];
                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                cj1array[1] = -cj1array[0];
                                                                            }
                                                                            else if( isnan(sj1array[0]) )
                                                                            {
                                                                                // probably any value will work
                                                                                j1valid[0] = true;
                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                            }
                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                j1valid[1]=false;
                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                bool j1valid[2]={false};
                                                                sj1array[0]=((-1.00000000000000)*(px)*(((IKabs(((0.450000000000000)+(((0.500000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.450000000000000)+(((0.500000000000000)*(cj3)))))):(IKReal)1.0e30)));
                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                {
                                                                    j1valid[0] = j1valid[1] = true;
                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                    sj1array[1] = sj1array[0];
                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                    cj1array[1] = -cj1array[0];
                                                                }
                                                                else if( isnan(sj1array[0]) )
                                                                {
                                                                    // probably any value will work
                                                                    j1valid[0] = true;
                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                }
                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                    j1valid[1]=false;
                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        continue;
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                    bool j1valid[2]={false};
                                                    IKReal x354=((0.500000000000000)*(cj3)*(sj0));
                                                    IKReal x355=((0.450000000000000)*(sj0));
                                                    IKReal x356=((x355)+(x354));
                                                    IKReal x357=((IKabs(x356) != 0)?((IKReal)1/(x356)):(IKReal)1.0e30);
                                                    sj1array[0]=((((0.500000000000000)*(cj0)*(sj3)*(x357)))+(((py)*(x357))));
                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                    {
                                                        j1valid[0] = j1valid[1] = true;
                                                        j1array[0] = IKasin(sj1array[0]);
                                                        cj1array[0] = IKcos(j1array[0]);
                                                        sj1array[1] = sj1array[0];
                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                        cj1array[1] = -cj1array[0];
                                                    }
                                                    else if( isnan(sj1array[0]) )
                                                    {
                                                        // probably any value will work
                                                        j1valid[0] = true;
                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                    }
                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                        j1valid[1]=false;
                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                        }
                                        }
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x358=((0.450000000000000)*(cj0));
                                        IKReal x359=((0.500000000000000)*(cj0)*(cj3));
                                        IKReal x360=((x359)+(x358));
                                        IKReal x361=((IKabs(x360) != 0)?((IKReal)1/(x360)):(IKReal)1.0e30);
                                        sj1array[0]=((((px)*(x361)))+(((-0.500000000000000)*(sj0)*(sj3)*(x361))));
                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                        {
                                            j1valid[0] = j1valid[1] = true;
                                            j1array[0] = IKasin(sj1array[0]);
                                            cj1array[0] = IKcos(j1array[0]);
                                            sj1array[1] = sj1array[0];
                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                            cj1array[1] = -cj1array[0];
                                        }
                                        else if( isnan(sj1array[0]) )
                                        {
                                            // probably any value will work
                                            j1valid[0] = true;
                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                        }
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                            }
                            }
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[2], cj1array[2], sj1array[2];
                            bool j1valid[2]={false};
                            IKReal x362=((0.500000000000000)*(cj3));
                            IKReal x363=((0.450000000000000)+(x362));
                            IKReal x364=((IKabs(x363) != 0)?((IKReal)1/(x363)):(IKReal)1.0e30);
                            sj1array[0]=((((cj0)*(px)*(x364)))+(((py)*(sj0)*(x364))));
                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                            {
                                j1valid[0] = j1valid[1] = true;
                                j1array[0] = IKasin(sj1array[0]);
                                cj1array[0] = IKcos(j1array[0]);
                                sj1array[1] = sj1array[0];
                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                cj1array[1] = -cj1array[0];
                            }
                            else if( isnan(sj1array[0]) )
                            {
                                // probably any value will work
                                j1valid[0] = true;
                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                            }
                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                j1valid[1]=false;
                            for(int ij1 = 0; ij1 < 2; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            rotationfunction0(vsolutions);
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                    evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(pz)));
                    evalcond[1]=((((-1.00000000000000)*(cj0)*(py)))+(((px)*(sj0))));
                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  )
                    {
                    {
                        IKReal j1eval[1];
                        j1eval[0]=((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                            IKReal evalcond[4];
                                IKReal x365=((px)*(sj0));
                                IKReal x366=((cj0)*(py));
                                IKReal x367=((((-1.00000000000000)*(x366)))+(x365));
                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                evalcond[1]=x367;
                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=x367;
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                {
                                {
                                IKReal j1array[2], cj1array[2], sj1array[2];
                                bool j1valid[2]={false};
                                sj1array[0]=((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px))));
                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                {
                                    j1valid[0] = j1valid[1] = true;
                                    j1array[0] = IKasin(sj1array[0]);
                                    cj1array[0] = IKcos(j1array[0]);
                                    sj1array[1] = sj1array[0];
                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                    cj1array[1] = -cj1array[0];
                                }
                                else if( isnan(sj1array[0]) )
                                {
                                    // probably any value will work
                                    j1valid[0] = true;
                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                }
                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                    j1valid[1]=false;
                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                {
                                if( !j1valid[ij1] ) { continue; }
                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                
                                rotationfunction0(vsolutions);
                                }
                                }
                            
                            } else
                            {
                                IKReal x368=((cj0)*(py));
                                IKReal x369=((px)*(sj0));
                                evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=((((-1.00000000000000)*(x368)))+(x369));
                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=((((-1.00000000000000)*(x369)))+(x368));
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                {
                                {
                                IKReal j1array[2], cj1array[2], sj1array[2];
                                bool j1valid[2]={false};
                                sj1array[0]=((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px))));
                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                {
                                    j1valid[0] = j1valid[1] = true;
                                    j1array[0] = IKasin(sj1array[0]);
                                    cj1array[0] = IKcos(j1array[0]);
                                    sj1array[1] = sj1array[0];
                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                    cj1array[1] = -cj1array[0];
                                }
                                else if( isnan(sj1array[0]) )
                                {
                                    // probably any value will work
                                    j1valid[0] = true;
                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                }
                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                    j1valid[1]=false;
                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                {
                                if( !j1valid[ij1] ) { continue; }
                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                
                                rotationfunction0(vsolutions);
                                }
                                }
                            
                            } else
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[2];
                                    j1eval[0]=cj0;
                                    j1eval[1]=((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))));
                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                    {
                                        {
                                        IKReal evalcond[4];
                                            evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=px;
                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=((-1.00000000000000)*(px));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[2];
                                                j1eval[0]=cj2;
                                                j1eval[1]=py;
                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[4];
                                                        evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=px;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(px));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((1.05263157894737)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                        evalcond[1]=px;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(px));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((1.05263157894737)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=py;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[4];
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=px;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(px));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((1.05263157894737)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=px;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(px));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((1.05263157894737)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=py;
                                                                        j1eval[1]=cj2;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[4];
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=px;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(px));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((1.05263157894737)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=px;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(px));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((1.05263157894737)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            IKReal x370=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            j1array[0]=IKatan2(((0.950000000000000)*(x370)), ((px)*(sj2)*(x370)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((1.05263157894737)*(py)), ((-1.00000000000000)*(cj2)*(px)*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    j1array[0]=IKatan2(((1.05263157894737)*(py)), ((px)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x371=((-1.00000000000000)*(px));
                                            evalcond[0]=((IKfmod(((1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x371;
                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x371;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[2];
                                                j1eval[0]=cj2;
                                                j1eval[1]=py;
                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[6];
                                                        IKReal x372=x371;
                                                        evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x372;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x372;
                                                        evalcond[4]=x372;
                                                        evalcond[5]=x372;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((-1.05263157894737)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x373=x371;
                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                        evalcond[1]=x373;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x373;
                                                        evalcond[4]=px;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((-1.05263157894737)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=py;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[5];
                                                                    IKReal x374=x371;
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=x374;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x374;
                                                                    evalcond[4]=x374;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-1.05263157894737)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    IKReal x375=x371;
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x375;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x375;
                                                                    evalcond[4]=px;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-1.05263157894737)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=py;
                                                                        j1eval[1]=cj2;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[6];
                                                                                IKReal x376=x371;
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=x376;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x376;
                                                                                evalcond[4]=x376;
                                                                                evalcond[5]=x376;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-1.05263157894737)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x377=x371;
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=x377;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x377;
                                                                                evalcond[4]=px;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-1.05263157894737)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            IKReal x378=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            j1array[0]=IKatan2(((-0.950000000000000)*(x378)), ((px)*(sj2)*(x378)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((-1.05263157894737)*(py)), ((-1.00000000000000)*(cj2)*(px)*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    j1array[0]=IKatan2(((-1.05263157894737)*(py)), ((px)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x379=((px)*(sj0));
                                            IKReal x380=((cj0)*(py));
                                            IKReal x381=((x379)+(((-1.00000000000000)*(x380))));
                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                            evalcond[1]=x381;
                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x381;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                            bool j1valid[2]={false};
                                            sj1array[0]=((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px))));
                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                            {
                                                j1valid[0] = j1valid[1] = true;
                                                j1array[0] = IKasin(sj1array[0]);
                                                cj1array[0] = IKcos(j1array[0]);
                                                sj1array[1] = sj1array[0];
                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                cj1array[1] = -cj1array[0];
                                            }
                                            else if( isnan(sj1array[0]) )
                                            {
                                                // probably any value will work
                                                j1valid[0] = true;
                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                            }
                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                j1valid[1]=false;
                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                            {
                                            if( !j1valid[ij1] ) { continue; }
                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                            
                                            rotationfunction0(vsolutions);
                                            }
                                            }
                                        
                                        } else
                                        {
                                            IKReal x382=((cj0)*(py));
                                            IKReal x383=((px)*(sj0));
                                            evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=((x383)+(((-1.00000000000000)*(x382))));
                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=((x382)+(((-1.00000000000000)*(x383))));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                            bool j1valid[2]={false};
                                            sj1array[0]=((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px))));
                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                            {
                                                j1valid[0] = j1valid[1] = true;
                                                j1array[0] = IKasin(sj1array[0]);
                                                cj1array[0] = IKcos(j1array[0]);
                                                sj1array[1] = sj1array[0];
                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                cj1array[1] = -cj1array[0];
                                            }
                                            else if( isnan(sj1array[0]) )
                                            {
                                                // probably any value will work
                                                j1valid[0] = true;
                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                            }
                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                j1valid[1]=false;
                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                            {
                                            if( !j1valid[ij1] ) { continue; }
                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                            
                                            rotationfunction0(vsolutions);
                                            }
                                            }
                                        
                                        } else
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[2];
                                                j1eval[0]=sj0;
                                                j1eval[1]=((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))));
                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[4];
                                                        IKReal x384=x8;
                                                        evalcond[0]=((IKfmod(((3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x384;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x384;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=px;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[5];
                                                                    IKReal x385=x8;
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=x385;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x385;
                                                                    evalcond[4]=x385;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((1.05263157894737)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    IKReal x386=x8;
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x386;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x386;
                                                                    evalcond[4]=py;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((1.05263157894737)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=cj2;
                                                                        j1eval[1]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[6];
                                                                                IKReal x387=x8;
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=x387;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x387;
                                                                                evalcond[4]=x387;
                                                                                evalcond[5]=x387;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((1.05263157894737)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x388=x8;
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=x388;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x388;
                                                                                evalcond[4]=py;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((1.05263157894737)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=px;
                                                                                    j1eval[1]=sj2;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[5];
                                                                                            IKReal x389=x8;
                                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                            evalcond[1]=x389;
                                                                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=x389;
                                                                                            evalcond[4]=x389;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((1.05263157894737)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x390=x8;
                                                                                            evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                            evalcond[1]=x390;
                                                                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=x390;
                                                                                            evalcond[4]=py;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((1.05263157894737)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        IKReal x391=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        j1array[0]=IKatan2(((0.950000000000000)*(x391)), ((cj2)*(py)*(x391)*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            j1array[0]=IKatan2(((1.05263157894737)*(px)), ((-1.00000000000000)*(py)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((1.05263157894737)*(px)), ((cj2)*(py)*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=py;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(py));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=px;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[4];
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=py;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(py));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-1.05263157894737)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=py;
                                                                    evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(py));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-1.05263157894737)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=cj2;
                                                                        j1eval[1]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[4];
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=py;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(py));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-1.05263157894737)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=py;
                                                                                evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(py));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-1.05263157894737)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=px;
                                                                                    j1eval[1]=sj2;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[4];
                                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                            evalcond[1]=py;
                                                                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=((-1.00000000000000)*(py));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((-1.05263157894737)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                            evalcond[1]=py;
                                                                                            evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=((-1.00000000000000)*(py));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((-1.05263157894737)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        IKReal x392=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        j1array[0]=IKatan2(((-0.950000000000000)*(x392)), ((cj2)*(py)*(x392)*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            j1array[0]=IKatan2(((-1.05263157894737)*(px)), ((-1.00000000000000)*(py)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((-1.05263157894737)*(px)), ((cj2)*(py)*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x393=((px)*(sj0));
                                                        IKReal x394=((cj0)*(py));
                                                        IKReal x395=((((-1.00000000000000)*(x394)))+(x393));
                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                        evalcond[1]=x395;
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x395;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px))));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x396=((cj0)*(py));
                                                        IKReal x397=((px)*(sj0));
                                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((((-1.00000000000000)*(x396)))+(x397));
                                                        evalcond[2]=((0.902500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((((-1.00000000000000)*(x397)))+(x396));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px))));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        continue;
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    j1array[0]=IKatan2(((1.05263157894737)*(py)*(((IKabs(sj0) != 0)?((IKReal)1/(sj0)):(IKReal)1.0e30))), ((((IKabs(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))))) != 0)?((IKReal)1/(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(cj2)*(px)*(sj0)))+(((cj0)*(cj2)*(py)))))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                        }
                                        }
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                        bool j1valid[1]={false};
                                        j1array[0]=IKatan2(((1.05263157894737)*(px)*(((IKabs(cj0) != 0)?((IKReal)1/(cj0)):(IKReal)1.0e30))), ((((IKabs(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))))) != 0)?((IKReal)1/(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(cj2)*(px)*(sj0)))+(((cj0)*(cj2)*(py)))))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                            }
                            }
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[1], cj1array[1], sj1array[1];
                            bool j1valid[1]={false};
                            j1array[0]=IKatan2(((((1.05263157894737)*(py)*(sj0)))+(((1.05263157894737)*(cj0)*(px)))), ((((IKabs(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))))) != 0)?((IKReal)1/(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(cj2)*(px)*(sj0)))+(((cj0)*(cj2)*(py)))))));
                            sj1array[0]=IKsin(j1array[0]);
                            cj1array[0]=IKcos(j1array[0]);
                            if( j1array[0] > IKPI )
                                j1array[0]-=IK2PI;
                            else if( j1array[0] < -IKPI )
                                j1array[0]+=IK2PI;
                            j1valid[0] = true;
                            for(int ij1 = 0; ij1 < 1; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            rotationfunction0(vsolutions);
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                    evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(pz)));
                    evalcond[1]=((((-1.00000000000000)*(cj0)*(py)))+(((px)*(sj0))));
                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  )
                    {
                    {
                        IKReal j1eval[1];
                        j1eval[0]=((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                            IKReal evalcond[4];
                                IKReal x398=((px)*(sj0));
                                IKReal x399=((cj0)*(py));
                                IKReal x400=((((-1.00000000000000)*(x399)))+(x398));
                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                evalcond[1]=x400;
                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=x400;
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                {
                                {
                                IKReal j1array[2], cj1array[2], sj1array[2];
                                bool j1valid[2]={false};
                                sj1array[0]=((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0))));
                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                {
                                    j1valid[0] = j1valid[1] = true;
                                    j1array[0] = IKasin(sj1array[0]);
                                    cj1array[0] = IKcos(j1array[0]);
                                    sj1array[1] = sj1array[0];
                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                    cj1array[1] = -cj1array[0];
                                }
                                else if( isnan(sj1array[0]) )
                                {
                                    // probably any value will work
                                    j1valid[0] = true;
                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                }
                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                    j1valid[1]=false;
                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                {
                                if( !j1valid[ij1] ) { continue; }
                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                
                                rotationfunction0(vsolutions);
                                }
                                }
                            
                            } else
                            {
                                IKReal x401=((cj0)*(py));
                                IKReal x402=((px)*(sj0));
                                evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=((x402)+(((-1.00000000000000)*(x401))));
                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                evalcond[3]=((x401)+(((-1.00000000000000)*(x402))));
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                {
                                {
                                IKReal j1array[2], cj1array[2], sj1array[2];
                                bool j1valid[2]={false};
                                sj1array[0]=((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0))));
                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                {
                                    j1valid[0] = j1valid[1] = true;
                                    j1array[0] = IKasin(sj1array[0]);
                                    cj1array[0] = IKcos(j1array[0]);
                                    sj1array[1] = sj1array[0];
                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                    cj1array[1] = -cj1array[0];
                                }
                                else if( isnan(sj1array[0]) )
                                {
                                    // probably any value will work
                                    j1valid[0] = true;
                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                }
                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                    j1valid[1]=false;
                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                {
                                if( !j1valid[ij1] ) { continue; }
                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                
                                rotationfunction0(vsolutions);
                                }
                                }
                            
                            } else
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[2];
                                    j1eval[0]=cj0;
                                    j1eval[1]=((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))));
                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                    {
                                        {
                                        IKReal evalcond[4];
                                            evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=px;
                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=((-1.00000000000000)*(px));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[2];
                                                j1eval[0]=cj2;
                                                j1eval[1]=py;
                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[4];
                                                        evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=px;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(px));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((-20.0000000000000)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                        evalcond[1]=px;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(px));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((-20.0000000000000)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=py;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[4];
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=px;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(px));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-20.0000000000000)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=px;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(px));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-20.0000000000000)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=py;
                                                                        j1eval[1]=cj2;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[4];
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=px;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(px));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-20.0000000000000)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=px;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(px));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-20.0000000000000)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            IKReal x403=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            j1array[0]=IKatan2(((-0.0499999999999999)*(x403)), ((px)*(sj2)*(x403)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((-20.0000000000000)*(py)), ((-1.00000000000000)*(cj2)*(px)*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    j1array[0]=IKatan2(((-20.0000000000000)*(py)), ((px)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x404=((-1.00000000000000)*(px));
                                            evalcond[0]=((IKfmod(((1.57079632679490)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=x404;
                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x404;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[2];
                                                j1eval[0]=cj2;
                                                j1eval[1]=py;
                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[6];
                                                        IKReal x405=x404;
                                                        evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x405;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x405;
                                                        evalcond[4]=x405;
                                                        evalcond[5]=px;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((20.0000000000000)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x406=x404;
                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                        evalcond[1]=x406;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x406;
                                                        evalcond[4]=px;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((20.0000000000000)*(py));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=py;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[5];
                                                                    IKReal x407=x404;
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=x407;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x407;
                                                                    evalcond[4]=x407;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((20.0000000000000)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    IKReal x408=x404;
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x408;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x408;
                                                                    evalcond[4]=px;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((20.0000000000000)*(py));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=py;
                                                                        j1eval[1]=cj2;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[6];
                                                                                IKReal x409=x404;
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=x409;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x409;
                                                                                evalcond[4]=x409;
                                                                                evalcond[5]=px;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((20.0000000000000)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x410=x404;
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=x410;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x410;
                                                                                evalcond[4]=px;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((20.0000000000000)*(py));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            IKReal x411=((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30);
                                                                            j1array[0]=IKatan2(((0.0499999999999999)*(x411)), ((px)*(sj2)*(x411)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((20.0000000000000)*(py)), ((-1.00000000000000)*(cj2)*(px)*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    j1array[0]=IKatan2(((20.0000000000000)*(py)), ((px)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(py) != 0)?((IKReal)1/(py)):(IKReal)1.0e30))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x412=((px)*(sj0));
                                            IKReal x413=((cj0)*(py));
                                            IKReal x414=((x412)+(((-1.00000000000000)*(x413))));
                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                            evalcond[1]=x414;
                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=x414;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                            bool j1valid[2]={false};
                                            sj1array[0]=((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0))));
                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                            {
                                                j1valid[0] = j1valid[1] = true;
                                                j1array[0] = IKasin(sj1array[0]);
                                                cj1array[0] = IKcos(j1array[0]);
                                                sj1array[1] = sj1array[0];
                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                cj1array[1] = -cj1array[0];
                                            }
                                            else if( isnan(sj1array[0]) )
                                            {
                                                // probably any value will work
                                                j1valid[0] = true;
                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                            }
                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                j1valid[1]=false;
                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                            {
                                            if( !j1valid[ij1] ) { continue; }
                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                            
                                            rotationfunction0(vsolutions);
                                            }
                                            }
                                        
                                        } else
                                        {
                                            IKReal x415=((cj0)*(py));
                                            IKReal x416=((px)*(sj0));
                                            evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=((x416)+(((-1.00000000000000)*(x415))));
                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            evalcond[3]=((x415)+(((-1.00000000000000)*(x416))));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                            bool j1valid[2]={false};
                                            sj1array[0]=((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0))));
                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                            {
                                                j1valid[0] = j1valid[1] = true;
                                                j1array[0] = IKasin(sj1array[0]);
                                                cj1array[0] = IKcos(j1array[0]);
                                                sj1array[1] = sj1array[0];
                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                cj1array[1] = -cj1array[0];
                                            }
                                            else if( isnan(sj1array[0]) )
                                            {
                                                // probably any value will work
                                                j1valid[0] = true;
                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                            }
                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                j1valid[1]=false;
                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                            {
                                            if( !j1valid[ij1] ) { continue; }
                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                            
                                            rotationfunction0(vsolutions);
                                            }
                                            }
                                        
                                        } else
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[2];
                                                j1eval[0]=sj0;
                                                j1eval[1]=((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))));
                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                {
                                                    {
                                                    IKReal evalcond[4];
                                                        IKReal x417=x8;
                                                        evalcond[0]=((IKfmod(((3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=x417;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x417;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=px;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[5];
                                                                    IKReal x418=x8;
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=x418;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x418;
                                                                    evalcond[4]=x418;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-20.0000000000000)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    IKReal x419=x8;
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=x419;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=x419;
                                                                    evalcond[4]=py;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((-20.0000000000000)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=cj2;
                                                                        j1eval[1]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[6];
                                                                                IKReal x420=x8;
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=x420;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x420;
                                                                                evalcond[4]=x420;
                                                                                evalcond[5]=py;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-20.0000000000000)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x421=x8;
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=x421;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=x421;
                                                                                evalcond[4]=py;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((-20.0000000000000)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=px;
                                                                                    j1eval[1]=sj2;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[5];
                                                                                            IKReal x422=x8;
                                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                            evalcond[1]=x422;
                                                                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=x422;
                                                                                            evalcond[4]=x422;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((-20.0000000000000)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x423=x8;
                                                                                            evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                            evalcond[1]=x423;
                                                                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=x423;
                                                                                            evalcond[4]=py;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((-20.0000000000000)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        IKReal x424=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        j1array[0]=IKatan2(((-0.0499999999999999)*(x424)), ((cj2)*(py)*(x424)*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            j1array[0]=IKatan2(((-20.0000000000000)*(px)), ((-1.00000000000000)*(py)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((-20.0000000000000)*(px)), ((cj2)*(py)*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=py;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((-1.00000000000000)*(py));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=px;
                                                            j1eval[1]=sj2;
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[4];
                                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                    evalcond[1]=py;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(py));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((20.0000000000000)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                    evalcond[1]=py;
                                                                    evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    evalcond[3]=((-1.00000000000000)*(py));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[2], cj1array[2], sj1array[2];
                                                                    bool j1valid[2]={false};
                                                                    sj1array[0]=((20.0000000000000)*(px));
                                                                    if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                    {
                                                                        j1valid[0] = j1valid[1] = true;
                                                                        j1array[0] = IKasin(sj1array[0]);
                                                                        cj1array[0] = IKcos(j1array[0]);
                                                                        sj1array[1] = sj1array[0];
                                                                        j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                        cj1array[1] = -cj1array[0];
                                                                    }
                                                                    else if( isnan(sj1array[0]) )
                                                                    {
                                                                        // probably any value will work
                                                                        j1valid[0] = true;
                                                                        cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                    }
                                                                    if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                        j1valid[1]=false;
                                                                    for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=cj2;
                                                                        j1eval[1]=px;
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[4];
                                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                evalcond[1]=py;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(py));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((20.0000000000000)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                evalcond[1]=py;
                                                                                evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                evalcond[3]=((-1.00000000000000)*(py));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                bool j1valid[2]={false};
                                                                                sj1array[0]=((20.0000000000000)*(px));
                                                                                if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                {
                                                                                    j1valid[0] = j1valid[1] = true;
                                                                                    j1array[0] = IKasin(sj1array[0]);
                                                                                    cj1array[0] = IKcos(j1array[0]);
                                                                                    sj1array[1] = sj1array[0];
                                                                                    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                    cj1array[1] = -cj1array[0];
                                                                                }
                                                                                else if( isnan(sj1array[0]) )
                                                                                {
                                                                                    // probably any value will work
                                                                                    j1valid[0] = true;
                                                                                    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                }
                                                                                if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                    j1valid[1]=false;
                                                                                for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                {
                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                
                                                                                rotationfunction0(vsolutions);
                                                                                }
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=px;
                                                                                    j1eval[1]=sj2;
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[4];
                                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                            evalcond[1]=py;
                                                                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=((-1.00000000000000)*(py));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((20.0000000000000)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                            evalcond[1]=py;
                                                                                            evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                                            evalcond[3]=((-1.00000000000000)*(py));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[2], cj1array[2], sj1array[2];
                                                                                            bool j1valid[2]={false};
                                                                                            sj1array[0]=((20.0000000000000)*(px));
                                                                                            if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                                                            {
                                                                                                j1valid[0] = j1valid[1] = true;
                                                                                                j1array[0] = IKasin(sj1array[0]);
                                                                                                cj1array[0] = IKcos(j1array[0]);
                                                                                                sj1array[1] = sj1array[0];
                                                                                                j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                                                                cj1array[1] = -cj1array[0];
                                                                                            }
                                                                                            else if( isnan(sj1array[0]) )
                                                                                            {
                                                                                                // probably any value will work
                                                                                                j1valid[0] = true;
                                                                                                cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                                                            }
                                                                                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                                                                j1valid[1]=false;
                                                                                            for(int ij1 = 0; ij1 < 2; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            continue;
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        IKReal x425=((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30);
                                                                                        j1array[0]=IKatan2(((0.0499999999999999)*(x425)), ((cj2)*(py)*(x425)*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            j1array[0]=IKatan2(((20.0000000000000)*(px)), ((-1.00000000000000)*(py)*(sj2)*(((IKabs(cj2) != 0)?((IKReal)1/(cj2)):(IKReal)1.0e30))*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((20.0000000000000)*(px)), ((cj2)*(py)*(((IKabs(px) != 0)?((IKReal)1/(px)):(IKReal)1.0e30))*(((IKabs(sj2) != 0)?((IKReal)1/(sj2)):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x426=((px)*(sj0));
                                                        IKReal x427=((cj0)*(py));
                                                        IKReal x428=((((-1.00000000000000)*(x427)))+(x426));
                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                        evalcond[1]=x428;
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=x428;
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0))));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        IKReal x429=((cj0)*(py));
                                                        IKReal x430=((px)*(sj0));
                                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                        evalcond[1]=((((-1.00000000000000)*(x429)))+(x430));
                                                        evalcond[2]=((0.00250000000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                        evalcond[3]=((((-1.00000000000000)*(x430)))+(x429));
                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                        {
                                                        {
                                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                                        bool j1valid[2]={false};
                                                        sj1array[0]=((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0))));
                                                        if( sj1array[0] >= -1.0001 && sj1array[0] <= 1.0001 )
                                                        {
                                                            j1valid[0] = j1valid[1] = true;
                                                            j1array[0] = IKasin(sj1array[0]);
                                                            cj1array[0] = IKcos(j1array[0]);
                                                            sj1array[1] = sj1array[0];
                                                            j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
                                                            cj1array[1] = -cj1array[0];
                                                        }
                                                        else if( isnan(sj1array[0]) )
                                                        {
                                                            // probably any value will work
                                                            j1valid[0] = true;
                                                            cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
                                                        }
                                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                                            j1valid[1]=false;
                                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                                        {
                                                        if( !j1valid[ij1] ) { continue; }
                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                        
                                                        rotationfunction0(vsolutions);
                                                        }
                                                        }
                                                    
                                                    } else
                                                    {
                                                        if( 1 )
                                                        {
                                                        continue;
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    j1array[0]=IKatan2(((-20.0000000000000)*(py)*(((IKabs(sj0) != 0)?((IKReal)1/(sj0)):(IKReal)1.0e30))), ((((IKabs(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))))) != 0)?((IKReal)1/(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(cj2)*(px)*(sj0)))+(((cj0)*(cj2)*(py)))))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                        }
                                        }
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                        bool j1valid[1]={false};
                                        j1array[0]=IKatan2(((-20.0000000000000)*(px)*(((IKabs(cj0) != 0)?((IKReal)1/(cj0)):(IKReal)1.0e30))), ((((IKabs(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))))) != 0)?((IKReal)1/(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(cj2)*(px)*(sj0)))+(((cj0)*(cj2)*(py)))))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                            }
                            }
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[1], cj1array[1], sj1array[1];
                            bool j1valid[1]={false};
                            j1array[0]=IKatan2(((((-20.0000000000000)*(cj0)*(px)))+(((-20.0000000000000)*(py)*(sj0)))), ((((IKabs(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2))))) != 0)?((IKReal)1/(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(cj2)*(px)*(sj0)))+(((cj0)*(cj2)*(py)))))));
                            sj1array[0]=IKsin(j1array[0]);
                            cj1array[0]=IKcos(j1array[0]);
                            if( j1array[0] > IKPI )
                                j1array[0]-=IK2PI;
                            else if( j1array[0] < -IKPI )
                                j1array[0]+=IK2PI;
                            j1valid[0] = true;
                            for(int ij1 = 0; ij1 < 1; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            rotationfunction0(vsolutions);
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                    if( 1 )
                    {
                    {
                        IKReal j1eval[1];
                        j1eval[0]=((0.202500000000000)+(((0.250000000000000)*((cj3)*(cj3))))+(((0.250000000000000)*((cj2)*(cj2))*((sj3)*(sj3))))+(((0.450000000000000)*(cj3))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((0.500000000000000)*(cj3)*(py)*(sj0)))+(((0.500000000000000)*(cj0)*(cj3)*(px)))+(((0.450000000000000)*(cj0)*(px)))+(((0.450000000000000)*(py)*(sj0)))+(((0.500000000000000)*(cj2)*(pz)*(sj3))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            continue;
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                        bool j1valid[1]={false};
                                        IKReal x431=((0.500000000000000)*(cj3)*(py)*(sj0));
                                        IKReal x432=((0.500000000000000)*(cj0)*(cj3)*(px));
                                        IKReal x433=((0.450000000000000)*(cj0)*(px));
                                        IKReal x434=((0.450000000000000)*(py)*(sj0));
                                        IKReal x435=((0.500000000000000)*(cj2)*(pz)*(sj3));
                                        IKReal x436=((x431)+(x432)+(x433)+(x434)+(x435));
                                        IKReal x437=((IKabs(x436) != 0)?((IKReal)1/(x436)):(IKReal)1.0e30);
                                        IKReal x438=((0.500000000000000)*(cj3));
                                        IKReal x439=((0.450000000000000)+(x438));
                                        j1array[0]=IKatan2(((x437)*(((((-1.00000000000000)*((pz)*(pz))))+((x439)*(x439))))), ((x437)*(((((-1.00000000000000)*(pz)*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))))+(((0.500000000000000)*(cj2)*(sj3)*(x439)))))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[1], cj1array[1], sj1array[1];
                            bool j1valid[1]={false};
                            IKReal x440=(cj3)*(cj3);
                            IKReal x441=((0.250000000000000)*(x440));
                            IKReal x442=(cj2)*(cj2);
                            IKReal x443=(sj3)*(sj3);
                            IKReal x444=((0.250000000000000)*(x442)*(x443));
                            IKReal x445=((0.450000000000000)*(cj3));
                            IKReal x446=((0.202500000000000)+(x445)+(x444)+(x441));
                            IKReal x447=((IKabs(x446) != 0)?((IKReal)1/(x446)):(IKReal)1.0e30);
                            IKReal x448=((cj0)*(px));
                            IKReal x449=((py)*(sj0));
                            IKReal x450=((x449)+(x448));
                            IKReal x451=((-1.00000000000000)*(x450));
                            IKReal x452=((0.500000000000000)*(cj3));
                            IKReal x453=((0.450000000000000)+(x452));
                            j1array[0]=IKatan2(((-1.00000000000000)*(x447)*(((((0.500000000000000)*(cj2)*(pz)*(sj3)))+(((x451)*(x453)))))), ((-1.00000000000000)*(x447)*(((((-1.00000000000000)*(pz)*(x453)))+(((0.500000000000000)*(cj2)*(sj3)*(x451)))))));
                            sj1array[0]=IKsin(j1array[0]);
                            cj1array[0]=IKcos(j1array[0]);
                            if( j1array[0] > IKPI )
                                j1array[0]-=IK2PI;
                            else if( j1array[0] < -IKPI )
                                j1array[0]+=IK2PI;
                            j1valid[0] = true;
                            for(int ij1 = 0; ij1 < 1; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            rotationfunction0(vsolutions);
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                }
                }
                }
                }
                }
                }
            
            } else
            {
                {
                IKReal j1array[1], cj1array[1], sj1array[1];
                bool j1valid[1]={false};
                IKReal x454=((0.500000000000000)*(cj0)*(cj2)*(px)*(sj3));
                IKReal x455=((0.500000000000000)*(cj2)*(py)*(sj0)*(sj3));
                IKReal x456=((x454)+(x455));
                IKReal x457=((0.450000000000000)*(pz));
                IKReal x458=((0.500000000000000)*(cj3)*(pz));
                IKReal x459=((x458)+(x457));
                IKReal x460=((((-1.00000000000000)*(x459)))+(x456));
                IKReal x461=((IKabs(x460) != 0)?((IKReal)1/(x460)):(IKReal)1.0e30);
                j1array[0]=IKatan2(((x461)*(((((pz)*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))))+(((0.500000000000000)*(cj2)*(sj3)*(((0.450000000000000)+(((0.500000000000000)*(cj3)))))))))), ((x461)*(((((-1.00000000000000)*((pz)*(pz))))+(((0.250000000000000)*((cj2)*(cj2))*((sj3)*(sj3))))))));
                sj1array[0]=IKsin(j1array[0]);
                cj1array[0]=IKcos(j1array[0]);
                if( j1array[0] > IKPI )
                    j1array[0]-=IK2PI;
                else if( j1array[0] < -IKPI )
                    j1array[0]+=IK2PI;
                j1valid[0] = true;
                for(int ij1 = 0; ij1 < 1; ++ij1)
                {
                if( !j1valid[ij1] ) { continue; }
                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                
                rotationfunction0(vsolutions);
                }
                }
            
            }
        
        }
        }
        }
        }
        }
    
    } else
    {
    }
    }
}
return vsolutions.size()>0;
}
    inline void rotationfunction0(std::vector<IKSolution>& vsolutions) {
        IKReal x23=((cj1)*(sj3));
        IKReal x24=((cj2)*(cj3)*(sj1));
        IKReal x25=((x24)+(x23));
        IKReal x26=((-1.00000000000000)*(x25));
        IKReal x27=((cj0)*(cj1)*(cj2)*(cj3));
        IKReal x28=((cj3)*(sj0)*(sj2));
        IKReal x29=((cj0)*(sj1)*(sj3));
        IKReal x30=((x28)+(x29));
        IKReal x31=((((-1.00000000000000)*(x30)))+(x27));
        IKReal x32=((cj0)*(cj3)*(sj2));
        IKReal x33=((cj1)*(cj2)*(cj3)*(sj0));
        IKReal x34=((x33)+(x32));
        IKReal x35=((sj0)*(sj1)*(sj3));
        IKReal x36=((((-1.00000000000000)*(x35)))+(x34));
        IKReal x37=((cj0)*(cj2));
        IKReal x38=((cj1)*(sj0)*(sj2));
        IKReal x39=((((-1.00000000000000)*(x38)))+(x37));
        IKReal x40=((cj2)*(sj0));
        IKReal x41=((cj0)*(cj1)*(sj2));
        IKReal x42=((x40)+(x41));
        IKReal x43=((-1.00000000000000)*(x42));
        IKReal x44=((cj1)*(cj3));
        IKReal x45=((cj2)*(sj1)*(sj3));
        IKReal x46=((((-1.00000000000000)*(x45)))+(x44));
        IKReal x47=((cj0)*(cj3)*(sj1));
        IKReal x48=((x23)*(x37));
        IKReal x49=((x48)+(x47));
        IKReal x50=((sj0)*(sj2)*(sj3));
        IKReal x51=((x49)+(((-1.00000000000000)*(x50))));
        IKReal x52=((x23)*(x40));
        IKReal x53=((cj3)*(sj0)*(sj1));
        IKReal x54=((cj0)*(sj2)*(sj3));
        IKReal x55=((x54)+(x53)+(x52));
        new_r00=((((r00)*(x31)))+(((r10)*(x36)))+(((r20)*(x26))));
        new_r01=((((r01)*(x31)))+(((r21)*(x26)))+(((r11)*(x36))));
        new_r02=((((r22)*(x26)))+(((r02)*(x31)))+(((r12)*(x36))));
        new_r10=((((r00)*(x43)))+(((r10)*(x39)))+(((r20)*(sj1)*(sj2))));
        new_r11=((((r01)*(x43)))+(((r21)*(sj1)*(sj2)))+(((r11)*(x39))));
        new_r12=((((r02)*(x43)))+(((r22)*(sj1)*(sj2)))+(((r12)*(x39))));
        new_r20=((((r20)*(x46)))+(((r10)*(x55)))+(((r00)*(x51))));
        new_r21=((((r11)*(x55)))+(((r01)*(x51)))+(((r21)*(x46))));
        new_r22=((((r02)*(x51)))+(((r22)*(x46)))+(((r12)*(x55))));
        {
        IKReal j5eval;
        j5eval=new_r22;
        if( j5eval >= -1.000010 && j5eval <= -0.999990 )
        {
            {
            j5 = 3.141593; sj5 = 0.000000; cj5 = -1.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=1.00000000000000;
            j6=((-1.00000000000000)*(IKatan2(((-1.00000000000000)*(new_r10)), new_r11)));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
        
        } else
        if( j5eval >= 0.999990 && j5eval <= 1.000010 )
        {
            {
            j5 = 0.000000; sj5 = 0.000000; cj5 = 1.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=-1.00000000000000;
            j6=((((-1.00000000000000)*(IKatan2(new_r10, ((-1.00000000000000)*(new_r11))))))+(((-1.00000000000000)*(3.14159265358979))));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
        
        } else
        {
            {
            IKReal j4array[2], cj4array[2], sj4array[2];
            bool j4valid[2]={false};
            j4array[0]=IKatan2(new_r12, new_r02);
            sj4array[0]=IKsin(j4array[0]);
            cj4array[0]=IKcos(j4array[0]);
            j4array[1] = j4array[0] > 0 ? j4array[0]-IKPI : j4array[0]+IKPI;
            sj4array[1] = -sj4array[0];
            cj4array[1] = -cj4array[0];
            if( j4array[0] > IKPI )
                j4array[0]-=IK2PI;
            else if( j4array[0] < -IKPI )
                j4array[0]+=IK2PI;
            j4valid[0] = true;
            if( j4array[1] > IKPI )
                j4array[1]-=IK2PI;
            else if( j4array[1] < -IKPI )
                j4array[1]+=IK2PI;
            j4valid[1] = true;
            if( j4valid[0] && j4valid[1] && IKabs(cj4array[0]-cj4array[1]) < 0.0001 && IKabs(sj4array[0]-sj4array[1]) < 0.0001 )
                j4valid[1]=false;
            for(int ij4 = 0; ij4 < 2; ++ij4)
            {
            if( !j4valid[ij4] ) { continue; }
            j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
            
            {
            IKReal evalcond[1];
                evalcond[0]=IKsin(j4);
                if( IKabs(evalcond[0]) < 0.000010  )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(((new_r02)*(((IKabs(IKcos(j4)) != 0)?((IKReal)1/(IKcos(j4))):(IKReal)1.0e30))), new_r22);
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal j6array[1], cj6array[1], sj6array[1];
                bool j6valid[1]={false};
                IKReal x56=IKcos(j4);
                IKReal x57=((IKabs(x56) != 0)?((IKReal)1/(x56)):(IKReal)1.0e30);
                j6array[0]=IKatan2(((new_r10)*(x57)), ((new_r11)*(x57)));
                sj6array[0]=IKsin(j6array[0]);
                cj6array[0]=IKcos(j6array[0]);
                if( j6array[0] > IKPI )
                    j6array[0]-=IK2PI;
                else if( j6array[0] < -IKPI )
                    j6array[0]+=IK2PI;
                j6valid[0] = true;
                for(int ij6 = 0; ij6 < 1; ++ij6)
                {
                if( !j6valid[ij6] ) { continue; }
                j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                
                vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                solution.basesol.resize(7);
                solution.basesol[0].foffset = j0;
                solution.basesol[1].foffset = j1;
                solution.basesol[2].foffset = j2;
                solution.basesol[3].foffset = j3;
                solution.basesol[4].foffset = j4;
                solution.basesol[5].foffset = j5;
                solution.basesol[6].foffset = j6;
                solution.vfree.resize(0);
                }
                }
                }
                }
            
            } else
            {
                if( 1 )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(((new_r12)*(((IKabs(sj4) != 0)?((IKReal)1/(sj4)):(IKReal)1.0e30))), new_r22);
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal evalcond[1];
                    evalcond[0]=IKsin(j5);
                    if( IKabs(evalcond[0]) < 0.000010  )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x58=IKcos(j4);
                    IKReal x59=IKcos(j5);
                    IKReal x60=((IKabs(x59) != 0)?((IKReal)1/(x59)):(IKReal)1.0e30);
                    IKReal x61=IKsin(j4);
                    j6array[0]=IKatan2(((((new_r10)*(x58)))+(((-1.00000000000000)*(new_r00)*(x61)))), ((((new_r00)*(x58)*(x60)))+(((new_r10)*(x60)*(x61)))));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                
                } else
                {
                    if( 1 )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x62=((IKabs(sj5) != 0)?((IKReal)1/(sj5)):(IKReal)1.0e30);
                    j6array[0]=IKatan2(((new_r21)*(x62)), ((-1.00000000000000)*(new_r20)*(x62)));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                
                } else
                {
                }
                }
                }
                }
                }
            
            } else
            {
            }
            }
            }
            }
            }
        
        }
        }
    }};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
IKSolver solver;
return solver.ik(eetrans,eerot,pfree,vsolutions);
}

IKFAST_API const char* getKinematicsHash() { return "197f863f13f8bc481b0d92a11d69c607"; }

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv)
{
    if( argc != 12+getNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",getNumFreeParameters());
        return 1;
    }

    std::vector<IKSolution> vsolutions;
    std::vector<IKReal> vfree(getNumFreeParameters());
    IKReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ik(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, vsolutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)vsolutions.size());
    std::vector<IKReal> sol(getNumJoints());
    for(size_t i = 0; i < vsolutions.size(); ++i) {
        printf("sol%d (free=%d): ", (int)i, (int)vsolutions[i].GetFree().size());
        std::vector<IKReal> vsolfree(vsolutions[i].GetFree().size());
        vsolutions[i].GetSolution(&sol[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( size_t j = 0; j < sol.size(); ++j)
            printf("%f, ", (float)sol[j]);
        printf("\n");
    }
    return 0;
}

#endif
