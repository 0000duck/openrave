/// autogenerated analytical inverse kinematics code from ikfast program
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// generated 2010-11-03 00:12:25.359445
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object:
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -shared -Wl,-soname,ik.so -o ik.so ik.cpp
#include <cmath>
#include <cassert>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IK2PI  6.28318530717959
#define IKPI  3.14159265358979
#define IKPI_2  1.57079632679490

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// defined when creating a shared object/dll
#ifdef IKFAST_CLIBRARY
#ifdef _MSC_VER
#define IKFAST_API extern "C" __declspec(dllexport)
#else
#define IKFAST_API extern "C"
#endif
#else
#define IKFAST_API
#endif

typedef double IKReal;
class IKSolution
{
public:
    /// Gets a solution given its free parameters
    /// \param pfree The free parameters required, range is in [-pi,pi]
    void GetSolution(IKReal* psolution, const IKReal* pfree) const {
        for(size_t i = 0; i < basesol.size(); ++i) {
            if( basesol[i].freeind < 0 )
                psolution[i] = basesol[i].foffset;
            else {
                assert(pfree != NULL);
                psolution[i] = pfree[basesol[i].freeind]*basesol[i].fmul + basesol[i].foffset;
                if( psolution[i] > IKPI )
                    psolution[i] -= IK2PI;
                else if( psolution[i] < -IKPI )
                    psolution[i] += IK2PI;
            }
        }
    }

    /// Gets the free parameters the solution requires to be set before a full solution can be returned
    /// \return vector of indices indicating the free parameters
    const std::vector<int>& GetFree() const { return vfree; }

    struct VARIABLE
    {
        VARIABLE() : freeind(-1), fmul(0), foffset(0) {}
        VARIABLE(int freeind, IKReal fmul, IKReal foffset) : freeind(freeind), fmul(fmul), foffset(foffset) {}
        int freeind;
        IKReal fmul, foffset; ///< joint value is fmul*sol[freeind]+foffset
    };

    std::vector<VARIABLE> basesol;       ///< solution and their offsets if joints are mimiced
    std::vector<int> vfree;
};

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

inline float IKasin(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asinf(f);
}
inline double IKasin(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline float IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0f;
return acosf(f);
}
inline double IKacos(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2(fy,fx);
}

IKFAST_API int getNumFreeParameters() { return 1; }
IKFAST_API int* getFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int getNumJoints() { return 7; }

IKFAST_API int getIKRealSize() { return sizeof(IKReal); }

IKFAST_API int getIKType() { return 1; }

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void fk(const IKReal* j, IKReal* eetrans, IKReal* eerot) {
    IKReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13;
    x0=IKcos(j[0]);
    x1=IKcos(j[1]);
    x2=IKcos(j[2]);
    x3=IKcos(j[3]);
    x4=IKsin(j[4]);
    x5=IKsin(j[6]);
    x6=IKcos(j[4]);
    x7=IKcos(j[5]);
    x8=IKcos(j[6]);
    x9=IKsin(j[0]);
    x10=IKsin(j[2]);
    x11=IKsin(j[3]);
    x12=IKsin(j[1]);
    x13=IKsin(j[5]);
    eerot[0]=((((x0)*(x1)*(x2)*(x3)*(x4)*(x5)))+(((x2)*(x5)*(x6)*(x9)))+(((x0)*(x1)*(x2)*(x3)*(x6)*(x7)*(x8)))+(((-1.00000000000000)*(x0)*(x12)*(x13)*(x3)*(x8)))+(((x10)*(x3)*(x4)*(x5)*(x9)))+(((-1.00000000000000)*(x0)*(x1)*(x11)*(x13)*(x2)*(x8)))+(((-1.00000000000000)*(x2)*(x4)*(x7)*(x8)*(x9)))+(((-1.00000000000000)*(x0)*(x1)*(x10)*(x5)*(x6)))+(((x0)*(x1)*(x10)*(x4)*(x7)*(x8)))+(((-1.00000000000000)*(x10)*(x11)*(x13)*(x8)*(x9)))+(((-1.00000000000000)*(x0)*(x11)*(x12)*(x6)*(x7)*(x8)))+(((-1.00000000000000)*(x0)*(x11)*(x12)*(x4)*(x5)))+(((x10)*(x3)*(x6)*(x7)*(x8)*(x9))));
    eerot[1]=((((-1.00000000000000)*(x0)*(x11)*(x12)*(x5)*(x6)*(x7)))+(((x10)*(x3)*(x5)*(x6)*(x7)*(x9)))+(((x0)*(x1)*(x2)*(x3)*(x5)*(x6)*(x7)))+(((-1.00000000000000)*(x0)*(x12)*(x13)*(x3)*(x5)))+(((x0)*(x1)*(x10)*(x4)*(x5)*(x7)))+(((x0)*(x11)*(x12)*(x4)*(x8)))+(((x0)*(x1)*(x10)*(x6)*(x8)))+(((-1.00000000000000)*(x0)*(x1)*(x11)*(x13)*(x2)*(x5)))+(((-1.00000000000000)*(x2)*(x4)*(x5)*(x7)*(x9)))+(((-1.00000000000000)*(x2)*(x6)*(x8)*(x9)))+(((-1.00000000000000)*(x10)*(x11)*(x13)*(x5)*(x9)))+(((-1.00000000000000)*(x10)*(x3)*(x4)*(x8)*(x9)))+(((-1.00000000000000)*(x0)*(x1)*(x2)*(x3)*(x4)*(x8))));
    eerot[2]=((((x10)*(x13)*(x3)*(x6)*(x9)))+(((x0)*(x1)*(x11)*(x2)*(x7)))+(((x0)*(x12)*(x3)*(x7)))+(((-1.00000000000000)*(x13)*(x2)*(x4)*(x9)))+(((x10)*(x11)*(x7)*(x9)))+(((x0)*(x1)*(x10)*(x13)*(x4)))+(((-1.00000000000000)*(x0)*(x11)*(x12)*(x13)*(x6)))+(((x0)*(x1)*(x13)*(x2)*(x3)*(x6))));
    eetrans[0]=((0.220000000000000)+(((0.300000000000000)*(x10)*(x11)*(x9)))+(((-0.0450000000000000)*(x10)*(x3)*(x9)))+(((0.220000000000000)*(x0)*(x1)*(x11)*(x2)*(x7)))+(((-0.220000000000000)*(x0)*(x11)*(x12)*(x13)*(x6)))+(((0.220000000000000)*(x10)*(x11)*(x7)*(x9)))+(((-0.220000000000000)*(x13)*(x2)*(x4)*(x9)))+(((0.300000000000000)*(x0)*(x1)*(x11)*(x2)))+(((0.0450000000000000)*(x10)*(x9)))+(((0.220000000000000)*(x0)*(x1)*(x10)*(x13)*(x4)))+(((-0.0450000000000000)*(x0)*(x1)*(x2)*(x3)))+(((0.220000000000000)*(x0)*(x1)*(x13)*(x2)*(x3)*(x6)))+(((0.0450000000000000)*(x0)*(x1)*(x2)))+(((0.220000000000000)*(x10)*(x13)*(x3)*(x6)*(x9)))+(((0.0450000000000000)*(x0)*(x11)*(x12)))+(((0.300000000000000)*(x0)*(x12)*(x3)))+(((0.550000000000000)*(x0)*(x12)))+(((0.220000000000000)*(x0)*(x12)*(x3)*(x7))));
    eerot[3]=((((-1.00000000000000)*(x0)*(x2)*(x5)*(x6)))+(((x0)*(x10)*(x11)*(x13)*(x8)))+(((-1.00000000000000)*(x1)*(x10)*(x5)*(x6)*(x9)))+(((x1)*(x2)*(x3)*(x6)*(x7)*(x8)*(x9)))+(((x0)*(x2)*(x4)*(x7)*(x8)))+(((-1.00000000000000)*(x12)*(x13)*(x3)*(x8)*(x9)))+(((-1.00000000000000)*(x0)*(x10)*(x3)*(x6)*(x7)*(x8)))+(((x1)*(x10)*(x4)*(x7)*(x8)*(x9)))+(((-1.00000000000000)*(x11)*(x12)*(x6)*(x7)*(x8)*(x9)))+(((x1)*(x2)*(x3)*(x4)*(x5)*(x9)))+(((-1.00000000000000)*(x1)*(x11)*(x13)*(x2)*(x8)*(x9)))+(((-1.00000000000000)*(x11)*(x12)*(x4)*(x5)*(x9)))+(((-1.00000000000000)*(x0)*(x10)*(x3)*(x4)*(x5))));
    eerot[4]=((((x0)*(x10)*(x3)*(x4)*(x8)))+(((-1.00000000000000)*(x1)*(x11)*(x13)*(x2)*(x5)*(x9)))+(((x11)*(x12)*(x4)*(x8)*(x9)))+(((x0)*(x10)*(x11)*(x13)*(x5)))+(((x1)*(x10)*(x4)*(x5)*(x7)*(x9)))+(((x1)*(x2)*(x3)*(x5)*(x6)*(x7)*(x9)))+(((x0)*(x2)*(x6)*(x8)))+(((-1.00000000000000)*(x12)*(x13)*(x3)*(x5)*(x9)))+(((-1.00000000000000)*(x1)*(x2)*(x3)*(x4)*(x8)*(x9)))+(((x1)*(x10)*(x6)*(x8)*(x9)))+(((x0)*(x2)*(x4)*(x5)*(x7)))+(((-1.00000000000000)*(x11)*(x12)*(x5)*(x6)*(x7)*(x9)))+(((-1.00000000000000)*(x0)*(x10)*(x3)*(x5)*(x6)*(x7))));
    eerot[5]=((((-1.00000000000000)*(x11)*(x12)*(x13)*(x6)*(x9)))+(((x1)*(x13)*(x2)*(x3)*(x6)*(x9)))+(((x1)*(x11)*(x2)*(x7)*(x9)))+(((x0)*(x13)*(x2)*(x4)))+(((-1.00000000000000)*(x0)*(x10)*(x13)*(x3)*(x6)))+(((x12)*(x3)*(x7)*(x9)))+(((x1)*(x10)*(x13)*(x4)*(x9)))+(((-1.00000000000000)*(x0)*(x10)*(x11)*(x7))));
    eetrans[1]=((0.140000000000000)+(((0.0450000000000000)*(x11)*(x12)*(x9)))+(((0.220000000000000)*(x1)*(x11)*(x2)*(x7)*(x9)))+(((-0.220000000000000)*(x11)*(x12)*(x13)*(x6)*(x9)))+(((-0.220000000000000)*(x0)*(x10)*(x11)*(x7)))+(((-0.0450000000000000)*(x1)*(x2)*(x3)*(x9)))+(((0.300000000000000)*(x12)*(x3)*(x9)))+(((0.300000000000000)*(x1)*(x11)*(x2)*(x9)))+(((-0.300000000000000)*(x0)*(x10)*(x11)))+(((0.220000000000000)*(x1)*(x13)*(x2)*(x3)*(x6)*(x9)))+(((0.220000000000000)*(x12)*(x3)*(x7)*(x9)))+(((0.220000000000000)*(x1)*(x10)*(x13)*(x4)*(x9)))+(((0.550000000000000)*(x12)*(x9)))+(((0.0450000000000000)*(x0)*(x10)*(x3)))+(((-0.220000000000000)*(x0)*(x10)*(x13)*(x3)*(x6)))+(((0.220000000000000)*(x0)*(x13)*(x2)*(x4)))+(((0.0450000000000000)*(x1)*(x2)*(x9)))+(((-0.0450000000000000)*(x0)*(x10))));
    eerot[6]=((((-1.00000000000000)*(x12)*(x2)*(x3)*(x6)*(x7)*(x8)))+(((-1.00000000000000)*(x10)*(x12)*(x4)*(x7)*(x8)))+(((-1.00000000000000)*(x1)*(x13)*(x3)*(x8)))+(((-1.00000000000000)*(x1)*(x11)*(x4)*(x5)))+(((-1.00000000000000)*(x12)*(x2)*(x3)*(x4)*(x5)))+(((-1.00000000000000)*(x1)*(x11)*(x6)*(x7)*(x8)))+(((x11)*(x12)*(x13)*(x2)*(x8)))+(((x10)*(x12)*(x5)*(x6))));
    eerot[7]=((((-1.00000000000000)*(x10)*(x12)*(x4)*(x5)*(x7)))+(((-1.00000000000000)*(x1)*(x13)*(x3)*(x5)))+(((-1.00000000000000)*(x10)*(x12)*(x6)*(x8)))+(((x12)*(x2)*(x3)*(x4)*(x8)))+(((x11)*(x12)*(x13)*(x2)*(x5)))+(((-1.00000000000000)*(x1)*(x11)*(x5)*(x6)*(x7)))+(((x1)*(x11)*(x4)*(x8)))+(((-1.00000000000000)*(x12)*(x2)*(x3)*(x5)*(x6)*(x7))));
    eerot[8]=((((-1.00000000000000)*(x1)*(x11)*(x13)*(x6)))+(((x1)*(x3)*(x7)))+(((-1.00000000000000)*(x11)*(x12)*(x2)*(x7)))+(((-1.00000000000000)*(x10)*(x12)*(x13)*(x4)))+(((-1.00000000000000)*(x12)*(x13)*(x2)*(x3)*(x6))));
    eetrans[2]=((0.346000000000000)+(((-0.220000000000000)*(x1)*(x11)*(x13)*(x6)))+(((-0.220000000000000)*(x10)*(x12)*(x13)*(x4)))+(((0.300000000000000)*(x1)*(x3)))+(((0.550000000000000)*(x1)))+(((-0.220000000000000)*(x12)*(x13)*(x2)*(x3)*(x6)))+(((-0.300000000000000)*(x11)*(x12)*(x2)))+(((0.0450000000000000)*(x12)*(x2)*(x3)))+(((0.220000000000000)*(x1)*(x3)*(x7)))+(((-0.0450000000000000)*(x12)*(x2)))+(((-0.220000000000000)*(x11)*(x12)*(x2)*(x7)))+(((0.0450000000000000)*(x1)*(x11))));
}

class IKSolver {
public:
IKReal j0, cj0, sj0,
j1, cj1, sj1,
j3, cj3, sj3,
j4, cj4, sj4,
j5, cj5, sj5,
j6, cj6, sj6,
j2, cj2, sj2,
new_r00, r00,
new_r01, r01,
new_r02, r02,
new_r10, r10,
new_r11, r11,
new_r12, r12,
new_r20, r20,
new_r21, r21,
new_r22, r22,
new_px, new_py, new_pz, px, py, pz;

bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    vsolutions.resize(0); vsolutions.reserve(8);
    j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]);
    r00 = eerot[0*3+0];
    r01 = eerot[0*3+1];
    r02 = eerot[0*3+2];
    r10 = eerot[1*3+0];
    r11 = eerot[1*3+1];
    r12 = eerot[1*3+2];
    r20 = eerot[2*3+0];
    r21 = eerot[2*3+1];
    r22 = eerot[2*3+2];
    px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
    
    new_r00=r00;
    new_r01=((-1.00000000000000)*(r02));
    new_r02=r01;
    new_px=((-0.220000000000000)+(px)+(((-0.220000000000000)*(r02))));
    new_r10=r10;
    new_r11=((-1.00000000000000)*(r12));
    new_r12=r11;
    new_py=((-0.140000000000000)+(py)+(((-0.220000000000000)*(r12))));
    new_r20=r20;
    new_r21=((-1.00000000000000)*(r22));
    new_r22=r21;
    new_pz=((-0.346000000000000)+(pz)+(((-0.220000000000000)*(r22))));
    r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
    {
        if( 1 )
        {
        {
        IKReal j3array[2], cj3array[2], sj3array[2];
        bool j3valid[2]={false};
        IKReal x0=(pz)*(pz);
        IKReal x1=((2.98679637348110)*(x0));
        IKReal x2=(py)*(py);
        IKReal x3=((2.98679637348110)*(x2));
        IKReal x4=(px)*(px);
        IKReal x5=((2.98679637348110)*(x4));
        IKReal x6=((-1.18441410190393)+(x3)+(x1)+(x5));
        if( (x6) < -1.0001 || (x6) > 1.0001 )
            continue;
        IKReal x7=IKasin(x6);
        j3array[0]=((-1.34027003705633)+(x7));
        sj3array[0]=IKsin(j3array[0]);
        cj3array[0]=IKcos(j3array[0]);
        j3array[1]=((1.80132261653346)+(((-1.00000000000000)*(x7))));
        sj3array[1]=IKsin(j3array[1]);
        cj3array[1]=IKcos(j3array[1]);
        if( j3array[0] > IKPI )
            j3array[0]-=IK2PI;
        else if( j3array[0] < -IKPI )
            j3array[0]+=IK2PI;
        j3valid[0] = true;
        if( j3array[1] > IKPI )
            j3array[1]-=IK2PI;
        else if( j3array[1] < -IKPI )
            j3array[1]+=IK2PI;
        j3valid[1] = true;
        if( j3valid[0] && j3valid[1] && IKabs(cj3array[0]-cj3array[1]) < 0.0001 && IKabs(sj3array[0]-sj3array[1]) < 0.0001 )
            j3valid[1]=false;
        for(int ij3 = 0; ij3 < 2; ++ij3)
        {
        if( !j3valid[ij3] ) { continue; }
        j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
        
        {
        IKReal j0array[2], cj0array[2], sj0array[2];
        bool j0valid[2]={false};
        IKReal x8=x4;
        IKReal x9=x2;
        IKReal x10=((x9)+(x8));
        if( (x10) < (IKReal)-0.00001 )
            continue;
        IKReal x11=IKsqrt(x10);
        IKReal x12=IKabs(x11);
        IKReal x13=((IKabs(x12) != 0)?((IKReal)1/(x12)):(IKReal)1.0e30);
        IKReal x14=((0.0450000000000000)*(cj3)*(sj2));
        IKReal x15=((0.0450000000000000)*(sj2));
        IKReal x16=((0.300000000000000)*(sj2)*(sj3));
        IKReal x17=((x15)+(x16));
        IKReal x18=((((-1.00000000000000)*(x17)))+(x14));
        IKReal x19=((x13)*(x18));
        if( (x19) < -1.0001 || (x19) > 1.0001 )
            continue;
        IKReal x20=IKasin(x19);
        IKReal x21=((-1.00000000000000)*(py));
        IKReal x22=IKatan2(x21, px);
        j0array[0]=((((-1.00000000000000)*(x20)))+(((-1.00000000000000)*(x22))));
        sj0array[0]=IKsin(j0array[0]);
        cj0array[0]=IKcos(j0array[0]);
        j0array[1]=((3.14159265358979)+(((-1.00000000000000)*(x22)))+(x20));
        sj0array[1]=IKsin(j0array[1]);
        cj0array[1]=IKcos(j0array[1]);
        if( j0array[0] > IKPI )
            j0array[0]-=IK2PI;
        else if( j0array[0] < -IKPI )
            j0array[0]+=IK2PI;
        j0valid[0] = true;
        if( j0array[1] > IKPI )
            j0array[1]-=IK2PI;
        else if( j0array[1] < -IKPI )
            j0array[1]+=IK2PI;
        j0valid[1] = true;
        if( j0valid[0] && j0valid[1] && IKabs(cj0array[0]-cj0array[1]) < 0.0001 && IKabs(sj0array[0]-sj0array[1]) < 0.0001 )
            j0valid[1]=false;
        for(int ij0 = 0; ij0 < 2; ++ij0)
        {
        if( !j0valid[ij0] ) { continue; }
        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
        
        {
            IKReal j1eval[1];
            j1eval[0]=(((((py)*(py))*((sj0)*(sj0))))+(((2.00000000000000)*(cj0)*(px)*(py)*(sj0)))+((pz)*(pz))+((((cj0)*(cj0))*((px)*(px)))));
            if( IKabs(j1eval[0]) < 0.000001  )
            {
                {
                    if( 1 )
                    {
                    {
                        IKReal j1eval[1];
                        j1eval[0]=((((sj2)*((pz)*(pz))))+(((sj2)*((cj0)*(cj0))*((px)*(px))))+(((2.00000000000000)*(cj0)*(px)*(py)*(sj0)*(sj2)))+(((sj2)*((py)*(py))*((sj0)*(sj0)))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                            IKReal evalcond[4];
                                IKReal x23=((px)*(sj0));
                                IKReal x24=((cj0)*(py));
                                IKReal x25=((((-1.00000000000000)*(x24)))+(x23));
                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                evalcond[2]=x25;
                                evalcond[3]=x25;
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=(((((py)*(py))*((sj0)*(sj0))))+(((2.00000000000000)*(cj0)*(px)*(py)*(sj0)))+((pz)*(pz))+((((cj0)*(cj0))*((px)*(px)))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((-0.0450000000000000)*(pz)))+(((-0.300000000000000)*(cj3)*(py)*(sj0)))+(((-0.300000000000000)*(cj0)*(cj3)*(px)))+(((-0.0450000000000000)*(cj0)*(px)*(sj3)))+(((-0.300000000000000)*(pz)*(sj3)))+(((-0.550000000000000)*(cj0)*(px)))+(((-0.550000000000000)*(py)*(sj0)))+(((-0.0450000000000000)*(py)*(sj0)*(sj3)))+(((0.0450000000000000)*(cj3)*(pz))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.550000000000000)*(pz)))+(((-0.300000000000000)*(py)*(sj0)*(sj3)))+(((-0.300000000000000)*(cj0)*(px)*(sj3)))+(((-0.0450000000000000)*(py)*(sj0)))+(((0.0450000000000000)*(cj3)*(py)*(sj0)))+(((0.0450000000000000)*(cj0)*(cj3)*(px)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))+(((-0.0450000000000000)*(cj0)*(px))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[4];
                                                                    IKReal x26=x23;
                                                                    IKReal x27=x24;
                                                                    IKReal x28=((((-1.00000000000000)*(x27)))+(x26));
                                                                    evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(pz)));
                                                                    evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                    evalcond[2]=x28;
                                                                    evalcond[3]=x28;
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                    bool j1valid[1]={false};
                                                                    j1array[0]=IKatan2(((((1.17647058823529)*(py)*(sj0)))+(((1.17647058823529)*(cj0)*(px)))), ((1.17647058823529)*(pz)));
                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                    if( j1array[0] > IKPI )
                                                                        j1array[0]-=IK2PI;
                                                                    else if( j1array[0] < -IKPI )
                                                                        j1array[0]+=IK2PI;
                                                                    j1valid[0] = true;
                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    continue;
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                IKReal x70=((0.300000000000000)*(sj3));
                                                                IKReal x71=((0.0450000000000000)+(x70));
                                                                IKReal x72=((0.0450000000000000)*(cj3));
                                                                IKReal x73=((((-1.00000000000000)*(x72)))+(x71));
                                                                IKReal x74=((0.550000000000000)*(pz));
                                                                IKReal x75=((1.00000000000000)*(py)*(sj0)*(x72));
                                                                IKReal x76=((1.00000000000000)*(cj0)*(px)*(x72));
                                                                IKReal x77=((0.300000000000000)*(cj3)*(pz));
                                                                IKReal x78=((0.0450000000000000)*(pz)*(sj3));
                                                                IKReal x79=((x77)+(x76)+(x75)+(x74)+(x78));
                                                                IKReal x80=((0.0450000000000000)*(cj0)*(px));
                                                                IKReal x81=((py)*(sj0)*(x70));
                                                                IKReal x82=((0.0450000000000000)*(py)*(sj0));
                                                                IKReal x83=((cj0)*(px)*(x70));
                                                                IKReal x84=((x82)+(x83)+(x80)+(x81));
                                                                IKReal x85=((x79)+(((-1.00000000000000)*(x84))));
                                                                IKReal x86=((IKabs(x85) != 0)?((IKReal)1/(x85)):(IKReal)1.0e30);
                                                                j1array[0]=IKatan2(((-1.00000000000000)*(x86)*(((((x73)*(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))))+(((pz)*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))))))), ((x86)*(((((-1.00000000000000)*((x73)*(x73))))+((pz)*(pz))))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    IKReal x87=((0.0450000000000000)*(sj3));
                                                    IKReal x88=((0.300000000000000)*(cj3));
                                                    IKReal x89=((0.550000000000000)+(x88)+(x87));
                                                    IKReal x90=((0.0450000000000000)*(cj3)*(pz));
                                                    IKReal x91=((0.550000000000000)*(py)*(sj0));
                                                    IKReal x92=((1.00000000000000)*(cj0)*(px)*(x87));
                                                    IKReal x93=((0.300000000000000)*(pz)*(sj3));
                                                    IKReal x94=((1.00000000000000)*(py)*(sj0)*(x87));
                                                    IKReal x95=((0.550000000000000)*(cj0)*(px));
                                                    IKReal x96=((0.0450000000000000)*(pz));
                                                    IKReal x97=((py)*(sj0)*(x88));
                                                    IKReal x98=((cj0)*(px)*(x88));
                                                    IKReal x99=((x98)+(x91)+(x93)+(x92)+(x95)+(x94)+(x97)+(x96));
                                                    IKReal x100=((x90)+(((-1.00000000000000)*(x99))));
                                                    IKReal x101=((IKabs(x100) != 0)?((IKReal)1/(x100)):(IKReal)1.0e30);
                                                    j1array[0]=IKatan2(((x101)*((((pz)*(pz))+(((-1.00000000000000)*((x89)*(x89))))))), ((x101)*(((((pz)*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))))+(((-1.00000000000000)*(x89)*(((0.0450000000000000)+(((-0.0450000000000000)*(cj3)))+(((0.300000000000000)*(sj3)))))))))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                        bool j1valid[1]={false};
                                        IKReal x102=x2;
                                        IKReal x103=(sj0)*(sj0);
                                        IKReal x104=((x102)*(x103));
                                        IKReal x105=((2.00000000000000)*(cj0)*(px)*(py)*(sj0));
                                        IKReal x106=x0;
                                        IKReal x107=(cj0)*(cj0);
                                        IKReal x108=x4;
                                        IKReal x109=((x107)*(x108));
                                        IKReal x110=((x109)+(x104)+(x105)+(x106));
                                        IKReal x111=((IKabs(x110) != 0)?((IKReal)1/(x110)):(IKReal)1.0e30);
                                        IKReal x112=((0.0450000000000000)*(sj3));
                                        IKReal x113=((0.300000000000000)*(cj3));
                                        IKReal x114=((0.550000000000000)+(x113)+(x112));
                                        IKReal x115=((cj0)*(px));
                                        IKReal x116=((py)*(sj0));
                                        IKReal x117=((x116)+(x115));
                                        IKReal x118=((0.300000000000000)*(sj3));
                                        IKReal x119=((0.0450000000000000)+(x118));
                                        IKReal x120=((0.0450000000000000)*(cj3));
                                        IKReal x121=((((-1.00000000000000)*(x120)))+(x119));
                                        j1array[0]=IKatan2(((x111)*(((((-1.00000000000000)*(pz)*(x121)))+(((x114)*(x117)))))), ((x111)*(((((x117)*(x121)))+(((pz)*(x114)))))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                                IKReal x122=((cj0)*(py));
                                IKReal x123=((px)*(sj0));
                                evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                evalcond[2]=((((-1.00000000000000)*(x122)))+(x123));
                                evalcond[3]=((((-1.00000000000000)*(x123)))+(x122));
                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=(((((py)*(py))*((sj0)*(sj0))))+(((2.00000000000000)*(cj0)*(px)*(py)*(sj0)))+((pz)*(pz))+((((cj0)*(cj0))*((px)*(px)))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((((-0.300000000000000)*(cj3)*(py)*(sj0)))+(((-0.300000000000000)*(cj0)*(cj3)*(px)))+(((-0.0450000000000000)*(cj0)*(px)*(sj3)))+(((0.300000000000000)*(pz)*(sj3)))+(((-0.0450000000000000)*(cj3)*(pz)))+(((-0.550000000000000)*(cj0)*(px)))+(((-0.550000000000000)*(py)*(sj0)))+(((0.0450000000000000)*(pz)))+(((-0.0450000000000000)*(py)*(sj0)*(sj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[1];
                                                            j1eval[0]=((((0.550000000000000)*(pz)))+(((0.0450000000000000)*(cj0)*(px)))+(((0.300000000000000)*(py)*(sj0)*(sj3)))+(((0.0450000000000000)*(py)*(sj0)))+(((0.300000000000000)*(cj0)*(px)*(sj3)))+(((-0.0450000000000000)*(cj0)*(cj3)*(px)))+(((0.300000000000000)*(cj3)*(pz)))+(((-0.0450000000000000)*(cj3)*(py)*(sj0)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                            {
                                                                {
                                                                IKReal evalcond[4];
                                                                    IKReal x124=x122;
                                                                    IKReal x125=x123;
                                                                    evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(pz)));
                                                                    evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                    evalcond[2]=((((-1.00000000000000)*(x124)))+(x125));
                                                                    evalcond[3]=((((-1.00000000000000)*(x125)))+(x124));
                                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                    {
                                                                    {
                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                    bool j1valid[1]={false};
                                                                    j1array[0]=IKatan2(((((1.17647058823529)*(py)*(sj0)))+(((1.17647058823529)*(cj0)*(px)))), ((1.17647058823529)*(pz)));
                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                    if( j1array[0] > IKPI )
                                                                        j1array[0]-=IK2PI;
                                                                    else if( j1array[0] < -IKPI )
                                                                        j1array[0]+=IK2PI;
                                                                    j1valid[0] = true;
                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                    {
                                                                    if( !j1valid[ij1] ) { continue; }
                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                    
                                                                    rotationfunction0(vsolutions);
                                                                    }
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    continue;
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                IKReal x126=((0.300000000000000)*(sj3));
                                                                IKReal x127=((0.0450000000000000)+(x126));
                                                                IKReal x128=((0.0450000000000000)*(cj3));
                                                                IKReal x129=((((-1.00000000000000)*(x128)))+(x127));
                                                                IKReal x130=((0.550000000000000)*(pz));
                                                                IKReal x131=((0.0450000000000000)*(cj0)*(px));
                                                                IKReal x132=((py)*(sj0)*(x126));
                                                                IKReal x133=((0.0450000000000000)*(py)*(sj0));
                                                                IKReal x134=((cj0)*(px)*(x126));
                                                                IKReal x135=((0.300000000000000)*(cj3)*(pz));
                                                                IKReal x136=((0.0450000000000000)*(pz)*(sj3));
                                                                IKReal x137=((x135)+(x134)+(x136)+(x131)+(x130)+(x133)+(x132));
                                                                IKReal x138=((1.00000000000000)*(py)*(sj0)*(x128));
                                                                IKReal x139=((1.00000000000000)*(cj0)*(px)*(x128));
                                                                IKReal x140=((x139)+(x138));
                                                                IKReal x141=((((-1.00000000000000)*(x140)))+(x137));
                                                                IKReal x142=((IKabs(x141) != 0)?((IKReal)1/(x141)):(IKReal)1.0e30);
                                                                j1array[0]=IKatan2(((x142)*(((((-1.00000000000000)*(pz)*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))))+(((x129)*(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))))))), ((x142)*((((pz)*(pz))+(((-1.00000000000000)*((x129)*(x129))))))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    IKReal x143=((0.0450000000000000)*(sj3));
                                                    IKReal x144=((0.300000000000000)*(cj3));
                                                    IKReal x145=((0.550000000000000)+(x143)+(x144));
                                                    IKReal x146=((0.300000000000000)*(pz)*(sj3));
                                                    IKReal x147=((0.0450000000000000)*(pz));
                                                    IKReal x148=((x146)+(x147));
                                                    IKReal x149=((0.550000000000000)*(py)*(sj0));
                                                    IKReal x150=((1.00000000000000)*(cj0)*(px)*(x143));
                                                    IKReal x151=((1.00000000000000)*(py)*(sj0)*(x143));
                                                    IKReal x152=((0.550000000000000)*(cj0)*(px));
                                                    IKReal x153=((1.00000000000000)*(cj3)*(x147));
                                                    IKReal x154=((py)*(sj0)*(x144));
                                                    IKReal x155=((cj0)*(px)*(x144));
                                                    IKReal x156=((x155)+(x154)+(x153)+(x152)+(x151)+(x150)+(x149));
                                                    IKReal x157=((((-1.00000000000000)*(x156)))+(x148));
                                                    IKReal x158=((IKabs(x157) != 0)?((IKReal)1/(x157)):(IKReal)1.0e30);
                                                    j1array[0]=IKatan2(((x158)*((((pz)*(pz))+(((-1.00000000000000)*((x145)*(x145))))))), ((x158)*(((((x145)*(((0.0450000000000000)+(((-0.0450000000000000)*(cj3)))+(((0.300000000000000)*(sj3)))))))+(((pz)*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))))))));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                        bool j1valid[1]={false};
                                        IKReal x159=x2;
                                        IKReal x160=(sj0)*(sj0);
                                        IKReal x161=((x159)*(x160));
                                        IKReal x162=((2.00000000000000)*(cj0)*(px)*(py)*(sj0));
                                        IKReal x163=x0;
                                        IKReal x164=(cj0)*(cj0);
                                        IKReal x165=x4;
                                        IKReal x166=((x164)*(x165));
                                        IKReal x167=((x162)+(x163)+(x161)+(x166));
                                        IKReal x168=((IKabs(x167) != 0)?((IKReal)1/(x167)):(IKReal)1.0e30);
                                        IKReal x169=((cj0)*(px));
                                        IKReal x170=((py)*(sj0));
                                        IKReal x171=((x170)+(x169));
                                        IKReal x172=((0.300000000000000)*(sj3));
                                        IKReal x173=((0.0450000000000000)+(x172));
                                        IKReal x174=((0.0450000000000000)*(cj3));
                                        IKReal x175=((((-1.00000000000000)*(x174)))+(x173));
                                        IKReal x176=((0.0450000000000000)*(sj3));
                                        IKReal x177=((0.300000000000000)*(cj3));
                                        IKReal x178=((0.550000000000000)+(x177)+(x176));
                                        j1array[0]=IKatan2(((x168)*(((((pz)*(x175)))+(((x171)*(x178)))))), ((x168)*(((((pz)*(x178)))+(((-1.00000000000000)*(x171)*(x175)))))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[1];
                                    j1eval[0]=((((cj2)*((py)*(py))*((sj0)*(sj0))))+(((cj2)*((cj0)*(cj0))*((px)*(px))))+(((2.00000000000000)*(cj0)*(cj2)*(px)*(py)*(sj0)))+(((cj2)*((pz)*(pz)))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                        IKReal evalcond[4];
                                            IKReal x179=((0.300000000000000)*(sj3));
                                            IKReal x180=((cj0)*(py));
                                            IKReal x181=((0.0450000000000000)*(cj3));
                                            IKReal x182=((px)*(sj0));
                                            evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                            evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                            evalcond[2]=((-0.0450000000000000)+(((-1.00000000000000)*(x179)))+(((-1.00000000000000)*(x180)))+(x181)+(x182));
                                            evalcond[3]=((0.0450000000000000)+(((-1.00000000000000)*(x182)))+(((-1.00000000000000)*(x181)))+(x179)+(x180));
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                            j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                        j1eval[1]=((((-0.300000000000000)*(cj3)*(py)*(sj0)))+(((-0.300000000000000)*(cj0)*(cj3)*(px)))+(((-0.0450000000000000)*(cj0)*(px)*(sj3)))+(((-0.550000000000000)*(cj0)*(px)))+(((-0.550000000000000)*(py)*(sj0)))+(((-0.0450000000000000)*(py)*(sj0)*(sj3))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[5];
                                                                                IKReal x183=x179;
                                                                                IKReal x184=x181;
                                                                                IKReal x185=((-0.0450000000000000)+(x184));
                                                                                IKReal x186=((x183)+(py));
                                                                                IKReal x187=((((-1.00000000000000)*(x186)))+(x185));
                                                                                evalcond[0]=((IKabs(px))+(IKabs(((IKfmod(((3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=x187;
                                                                                evalcond[3]=((0.0450000000000000)+(((-1.00000000000000)*(x184)))+(x186));
                                                                                evalcond[4]=x187;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                    j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                j1eval[1]=((((-0.300000000000000)*(cj3)*(px)))+(((-0.0450000000000000)*(px)*(sj3)))+(((-0.550000000000000)*(px))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                    IKReal evalcond[4];
                                                                                                        evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((-1.00000000000000)*(py));
                                                                                                        evalcond[3]=py;
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.17647058823529)*(px)), ((1.17647058823529)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((-0.345000000000000)+(((-1.00000000000000)*(py))));
                                                                                                        evalcond[3]=((0.345000000000000)+(py));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.68067226890756)*(px)), ((1.68067226890756)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((-0.0900000000000000)+(((-1.00000000000000)*(py))));
                                                                                                        evalcond[3]=((0.0900000000000000)+(py));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((4.00000000000000)*(px)), ((4.00000000000000)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((0.255000000000000)+(((-1.00000000000000)*(py))));
                                                                                                        evalcond[3]=((-0.255000000000000)+(py));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.98019801980198)*(px)), ((1.98019801980198)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x188=x4;
                                                                                                                IKReal x189=x0;
                                                                                                                IKReal x190=((x188)+(x189));
                                                                                                                IKReal x191=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x192=((0.300000000000000)*(cj3));
                                                                                                                IKReal x193=((0.550000000000000)+(x192)+(x191));
                                                                                                                j1array[0]=IKatan2(((px)*(x193)*(((IKabs(x190) != 0)?((IKReal)1/(x190)):(IKReal)1.0e30))), ((pz)*(x193)*(((IKabs(x190) != 0)?((IKReal)1/(x190)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((px)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((-1.00000000000000)*(px)*(pz)*(((IKabs(((((-0.300000000000000)*(cj3)*(px)))+(((-0.0450000000000000)*(px)*(sj3)))+(((-0.550000000000000)*(px))))) != 0)?((IKReal)1/(((((-0.300000000000000)*(cj3)*(px)))+(((-0.0450000000000000)*(px)*(sj3)))+(((-0.550000000000000)*(px)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((px)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x194=x179;
                                                                                IKReal x195=x181;
                                                                                IKReal x196=((0.0450000000000000)+(x194));
                                                                                IKReal x197=((x195)+(py));
                                                                                IKReal x198=((((-1.00000000000000)*(x197)))+(x196));
                                                                                evalcond[0]=((IKabs(px))+(IKabs(((IKfmod(j0, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=((-0.0450000000000000)+(((-1.00000000000000)*(x194)))+(x197));
                                                                                evalcond[3]=x198;
                                                                                evalcond[4]=x198;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    j1eval[1]=((((0.550000000000000)*(px)))+(((0.0450000000000000)*(px)*(sj3)))+(((0.300000000000000)*(cj3)*(px))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[4];
                                                                                            evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=py;
                                                                                            evalcond[3]=((-1.00000000000000)*(py));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.17647058823529)*(px)), ((1.17647058823529)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((-0.345000000000000)+(py));
                                                                                            evalcond[3]=((0.345000000000000)+(((-1.00000000000000)*(py))));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.68067226890756)*(px)), ((1.68067226890756)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((-0.0900000000000000)+(py));
                                                                                            evalcond[3]=((0.0900000000000000)+(((-1.00000000000000)*(py))));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-4.00000000000000)*(px)), ((4.00000000000000)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((0.255000000000000)+(py));
                                                                                            evalcond[3]=((-0.255000000000000)+(((-1.00000000000000)*(py))));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.98019801980198)*(px)), ((1.98019801980198)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                                j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x199=x4;
                                                                                                                IKReal x200=x0;
                                                                                                                IKReal x201=((x199)+(x200));
                                                                                                                IKReal x202=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x203=((0.300000000000000)*(cj3));
                                                                                                                IKReal x204=((0.550000000000000)+(x203)+(x202));
                                                                                                                j1array[0]=IKatan2(((-1.00000000000000)*(px)*(x204)*(((IKabs(x201) != 0)?((IKReal)1/(x201)):(IKReal)1.0e30))), ((pz)*(x204)*(((IKabs(x201) != 0)?((IKReal)1/(x201)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((-1.00000000000000)*(px)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((-1.00000000000000)*(px)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((px)*(pz)*(((IKabs(((((0.550000000000000)*(px)))+(((0.0450000000000000)*(px)*(sj3)))+(((0.300000000000000)*(cj3)*(px))))) != 0)?((IKReal)1/(((((0.550000000000000)*(px)))+(((0.0450000000000000)*(px)*(sj3)))+(((0.300000000000000)*(cj3)*(px)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x205=x179;
                                                                                IKReal x206=x181;
                                                                                IKReal x207=((0.0450000000000000)+(x205));
                                                                                IKReal x208=((x206)+(px));
                                                                                IKReal x209=((((-1.00000000000000)*(x208)))+(x207));
                                                                                evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=((-0.0450000000000000)+(((-1.00000000000000)*(x205)))+(x208));
                                                                                evalcond[3]=x209;
                                                                                evalcond[4]=x209;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                    j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                j1eval[1]=((((-0.0450000000000000)*(py)*(sj3)))+(((-0.300000000000000)*(cj3)*(py)))+(((-0.550000000000000)*(py))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                    IKReal evalcond[4];
                                                                                                        evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=px;
                                                                                                        evalcond[3]=((-1.00000000000000)*(px));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.17647058823529)*(py)), ((1.17647058823529)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((-0.345000000000000)+(px));
                                                                                                        evalcond[3]=((0.345000000000000)+(((-1.00000000000000)*(px))));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.68067226890756)*(py)), ((1.68067226890756)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((-0.0900000000000000)+(px));
                                                                                                        evalcond[3]=((0.0900000000000000)+(((-1.00000000000000)*(px))));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((4.00000000000000)*(py)), ((4.00000000000000)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=((0.255000000000000)+(px));
                                                                                                        evalcond[3]=((-0.255000000000000)+(((-1.00000000000000)*(px))));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.98019801980198)*(py)), ((1.98019801980198)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x210=x2;
                                                                                                                IKReal x211=x0;
                                                                                                                IKReal x212=((x210)+(x211));
                                                                                                                IKReal x213=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x214=((0.300000000000000)*(cj3));
                                                                                                                IKReal x215=((0.550000000000000)+(x213)+(x214));
                                                                                                                j1array[0]=IKatan2(((py)*(x215)*(((IKabs(x212) != 0)?((IKReal)1/(x212)):(IKReal)1.0e30))), ((pz)*(x215)*(((IKabs(x212) != 0)?((IKReal)1/(x212)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((py)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((-1.00000000000000)*(py)*(pz)*(((IKabs(((((-0.0450000000000000)*(py)*(sj3)))+(((-0.300000000000000)*(cj3)*(py)))+(((-0.550000000000000)*(py))))) != 0)?((IKReal)1/(((((-0.0450000000000000)*(py)*(sj3)))+(((-0.300000000000000)*(cj3)*(py)))+(((-0.550000000000000)*(py)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((py)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x216=x179;
                                                                                IKReal x217=x181;
                                                                                IKReal x218=((-0.0450000000000000)+(x217));
                                                                                IKReal x219=((x216)+(px));
                                                                                IKReal x220=((x218)+(((-1.00000000000000)*(x219))));
                                                                                evalcond[0]=((IKabs(py))+(IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=x220;
                                                                                evalcond[3]=((0.0450000000000000)+(x219)+(((-1.00000000000000)*(x217))));
                                                                                evalcond[4]=x220;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    j1eval[1]=((((0.550000000000000)*(py)))+(((0.0450000000000000)*(py)*(sj3)))+(((0.300000000000000)*(cj3)*(py))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[4];
                                                                                            evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((-1.00000000000000)*(px));
                                                                                            evalcond[3]=px;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.17647058823529)*(py)), ((1.17647058823529)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((-0.345000000000000)+(((-1.00000000000000)*(px))));
                                                                                            evalcond[3]=((0.345000000000000)+(px));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.68067226890756)*(py)), ((1.68067226890756)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((-0.0900000000000000)+(((-1.00000000000000)*(px))));
                                                                                            evalcond[3]=((0.0900000000000000)+(px));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-4.00000000000000)*(py)), ((4.00000000000000)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=((0.255000000000000)+(((-1.00000000000000)*(px))));
                                                                                            evalcond[3]=((-0.255000000000000)+(px));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.98019801980198)*(py)), ((1.98019801980198)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                                j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x221=x2;
                                                                                                                IKReal x222=x0;
                                                                                                                IKReal x223=((x221)+(x222));
                                                                                                                IKReal x224=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x225=((0.300000000000000)*(cj3));
                                                                                                                IKReal x226=((0.550000000000000)+(x225)+(x224));
                                                                                                                j1array[0]=IKatan2(((-1.00000000000000)*(py)*(x226)*(((IKabs(x223) != 0)?((IKReal)1/(x223)):(IKReal)1.0e30))), ((pz)*(x226)*(((IKabs(x223) != 0)?((IKReal)1/(x223)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((-1.00000000000000)*(py)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((-1.00000000000000)*(py)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((py)*(pz)*(((IKabs(((((0.550000000000000)*(py)))+(((0.0450000000000000)*(py)*(sj3)))+(((0.300000000000000)*(cj3)*(py))))) != 0)?((IKReal)1/(((((0.550000000000000)*(py)))+(((0.0450000000000000)*(py)*(sj3)))+(((0.300000000000000)*(cj3)*(py)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            IKReal x227=((cj0)*(px));
                                                                            IKReal x228=((py)*(sj0));
                                                                            IKReal x229=((x228)+(x227));
                                                                            j1array[0]=IKatan2(((x229)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((-1.00000000000000)*(pz)*(x229)*(((IKabs(((((-0.0450000000000000)*(sj3)*(x228)))+(((-0.0450000000000000)*(sj3)*(x227)))+(((-0.550000000000000)*(x228)))+(((-0.550000000000000)*(x227)))+(((-0.300000000000000)*(cj3)*(x227)))+(((-0.300000000000000)*(cj3)*(x228))))) != 0)?((IKReal)1/(((((-0.0450000000000000)*(sj3)*(x228)))+(((-0.0450000000000000)*(sj3)*(x227)))+(((-0.550000000000000)*(x228)))+(((-0.550000000000000)*(x227)))+(((-0.300000000000000)*(cj3)*(x227)))+(((-0.300000000000000)*(cj3)*(x228)))))):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((-1.00000000000000)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    IKReal x230=((0.0450000000000000)*(sj3));
                                                    IKReal x231=((0.300000000000000)*(cj3));
                                                    IKReal x232=((0.550000000000000)+(x230)+(x231));
                                                    IKReal x233=((IKabs(x232) != 0)?((IKReal)1/(x232)):(IKReal)1.0e30);
                                                    j1array[0]=IKatan2(((x233)*(((((cj0)*(px)))+(((py)*(sj0)))))), ((pz)*(x233)));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            IKReal x234=((0.300000000000000)*(sj3));
                                            IKReal x235=((px)*(sj0));
                                            IKReal x236=((0.0450000000000000)+(x234)+(x235));
                                            IKReal x237=((0.0450000000000000)*(cj3));
                                            IKReal x238=((cj0)*(py));
                                            IKReal x239=((x238)+(x237));
                                            IKReal x240=((((-1.00000000000000)*(x239)))+(x236));
                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                            evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                            evalcond[2]=x240;
                                            evalcond[3]=x240;
                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                            {
                                            {
                                                IKReal j1eval[1];
                                                j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                if( IKabs(j1eval[0]) < 0.000001  )
                                                {
                                                    {
                                                        if( 1 )
                                                        {
                                                        {
                                                            IKReal j1eval[2];
                                                            j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                            j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                            if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                            {
                                                                {
                                                                    if( 1 )
                                                                    {
                                                                    {
                                                                        IKReal j1eval[2];
                                                                        j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                        j1eval[1]=((((-0.300000000000000)*(cj3)*(py)*(sj0)))+(((-0.300000000000000)*(cj0)*(cj3)*(px)))+(((-0.0450000000000000)*(cj0)*(px)*(sj3)))+(((-0.550000000000000)*(cj0)*(px)))+(((-0.550000000000000)*(py)*(sj0)))+(((-0.0450000000000000)*(py)*(sj0)*(sj3))));
                                                                        if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                        {
                                                                            {
                                                                            IKReal evalcond[5];
                                                                                IKReal x241=x234;
                                                                                IKReal x242=((0.0450000000000000)+(x241));
                                                                                IKReal x243=x237;
                                                                                IKReal x244=((x243)+(py));
                                                                                IKReal x245=((x242)+(((-1.00000000000000)*(x244))));
                                                                                evalcond[0]=((IKabs(px))+(IKabs(((IKfmod(((3.14159265358979)+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=x245;
                                                                                evalcond[3]=x245;
                                                                                evalcond[4]=x245;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                    j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                j1eval[1]=((((-0.300000000000000)*(cj3)*(px)))+(((-0.0450000000000000)*(px)*(sj3)))+(((-0.550000000000000)*(px))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                    IKReal evalcond[6];
                                                                                                        IKReal x246=x21;
                                                                                                        evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x246;
                                                                                                        evalcond[3]=x246;
                                                                                                        evalcond[4]=x246;
                                                                                                        evalcond[5]=x246;
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.17647058823529)*(px)), ((1.17647058823529)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        IKReal x247=((0.345000000000000)+(((-1.00000000000000)*(py))));
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x247;
                                                                                                        evalcond[3]=x247;
                                                                                                        evalcond[4]=x247;
                                                                                                        evalcond[5]=x247;
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.68067226890756)*(px)), ((1.68067226890756)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        IKReal x248=((0.0900000000000000)+(((-1.00000000000000)*(py))));
                                                                                                        evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x248;
                                                                                                        evalcond[3]=x248;
                                                                                                        evalcond[4]=x248;
                                                                                                        evalcond[5]=((-0.0900000000000000)+(py));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((4.00000000000000)*(px)), ((4.00000000000000)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        IKReal x249=((-0.255000000000000)+(((-1.00000000000000)*(py))));
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                                        evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x249;
                                                                                                        evalcond[3]=x249;
                                                                                                        evalcond[4]=x249;
                                                                                                        evalcond[5]=((0.255000000000000)+(py));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.98019801980198)*(px)), ((1.98019801980198)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x250=x4;
                                                                                                                IKReal x251=x0;
                                                                                                                IKReal x252=((x250)+(x251));
                                                                                                                IKReal x253=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x254=((0.300000000000000)*(cj3));
                                                                                                                IKReal x255=((0.550000000000000)+(x254)+(x253));
                                                                                                                j1array[0]=IKatan2(((px)*(x255)*(((IKabs(x252) != 0)?((IKReal)1/(x252)):(IKReal)1.0e30))), ((pz)*(x255)*(((IKabs(x252) != 0)?((IKReal)1/(x252)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((px)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((-1.00000000000000)*(px)*(pz)*(((IKabs(((((-0.300000000000000)*(cj3)*(px)))+(((-0.0450000000000000)*(px)*(sj3)))+(((-0.550000000000000)*(px))))) != 0)?((IKReal)1/(((((-0.300000000000000)*(cj3)*(px)))+(((-0.0450000000000000)*(px)*(sj3)))+(((-0.550000000000000)*(px)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((px)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x256=x234;
                                                                                IKReal x257=((0.0450000000000000)+(x256)+(py));
                                                                                IKReal x258=x237;
                                                                                IKReal x259=((x257)+(((-1.00000000000000)*(x258))));
                                                                                evalcond[0]=((IKabs(px))+(IKabs(((IKfmod(j0, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=x259;
                                                                                evalcond[3]=x259;
                                                                                evalcond[4]=((x258)+(((-1.00000000000000)*(x257))));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    j1eval[1]=((((0.550000000000000)*(px)))+(((0.0450000000000000)*(px)*(sj3)))+(((0.300000000000000)*(cj3)*(px))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[5];
                                                                                            evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=py;
                                                                                            evalcond[3]=py;
                                                                                            evalcond[4]=((-1.00000000000000)*(py));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.17647058823529)*(px)), ((1.17647058823529)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x260=((0.345000000000000)+(py));
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x260;
                                                                                            evalcond[3]=x260;
                                                                                            evalcond[4]=((-0.345000000000000)+(((-1.00000000000000)*(py))));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.68067226890756)*(px)), ((1.68067226890756)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x261=((0.0900000000000000)+(py));
                                                                                            evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x261;
                                                                                            evalcond[3]=x261;
                                                                                            evalcond[4]=((-0.0900000000000000)+(((-1.00000000000000)*(py))));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-4.00000000000000)*(px)), ((4.00000000000000)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x262=((-0.255000000000000)+(py));
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(px)));
                                                                                            evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x262;
                                                                                            evalcond[3]=x262;
                                                                                            evalcond[4]=((0.255000000000000)+(((-1.00000000000000)*(py))));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.98019801980198)*(px)), ((1.98019801980198)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                                j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x263=x4;
                                                                                                                IKReal x264=x0;
                                                                                                                IKReal x265=((x264)+(x263));
                                                                                                                IKReal x266=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x267=((0.300000000000000)*(cj3));
                                                                                                                IKReal x268=((0.550000000000000)+(x267)+(x266));
                                                                                                                j1array[0]=IKatan2(((-1.00000000000000)*(px)*(x268)*(((IKabs(x265) != 0)?((IKReal)1/(x265)):(IKReal)1.0e30))), ((pz)*(x268)*(((IKabs(x265) != 0)?((IKReal)1/(x265)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((-1.00000000000000)*(px)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((-1.00000000000000)*(px)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((px)*(pz)*(((IKabs(((((0.550000000000000)*(px)))+(((0.0450000000000000)*(px)*(sj3)))+(((0.300000000000000)*(cj3)*(px))))) != 0)?((IKReal)1/(((((0.550000000000000)*(px)))+(((0.0450000000000000)*(px)*(sj3)))+(((0.300000000000000)*(cj3)*(px)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x269=x234;
                                                                                IKReal x270=((0.0450000000000000)+(x269)+(px));
                                                                                IKReal x271=x237;
                                                                                IKReal x272=((x270)+(((-1.00000000000000)*(x271))));
                                                                                evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=x272;
                                                                                evalcond[3]=x272;
                                                                                evalcond[4]=((x271)+(((-1.00000000000000)*(x270))));
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                    j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                j1eval[1]=((((-0.0450000000000000)*(py)*(sj3)))+(((-0.300000000000000)*(cj3)*(py)))+(((-0.550000000000000)*(py))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                    IKReal evalcond[5];
                                                                                                        evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=px;
                                                                                                        evalcond[3]=px;
                                                                                                        evalcond[4]=((-1.00000000000000)*(px));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.17647058823529)*(py)), ((1.17647058823529)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        IKReal x273=((0.345000000000000)+(px));
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x273;
                                                                                                        evalcond[3]=x273;
                                                                                                        evalcond[4]=((-0.345000000000000)+(((-1.00000000000000)*(px))));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.68067226890756)*(py)), ((1.68067226890756)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        IKReal x274=((0.0900000000000000)+(px));
                                                                                                        evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x274;
                                                                                                        evalcond[3]=x274;
                                                                                                        evalcond[4]=((-0.0900000000000000)+(((-1.00000000000000)*(px))));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((4.00000000000000)*(py)), ((4.00000000000000)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        IKReal x275=((-0.255000000000000)+(px));
                                                                                                        evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                                        evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                        evalcond[2]=x275;
                                                                                                        evalcond[3]=x275;
                                                                                                        evalcond[4]=((0.255000000000000)+(((-1.00000000000000)*(px))));
                                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                                        {
                                                                                                        {
                                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                        bool j1valid[1]={false};
                                                                                                        j1array[0]=IKatan2(((1.98019801980198)*(py)), ((1.98019801980198)*(pz)));
                                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                                        if( j1array[0] > IKPI )
                                                                                                            j1array[0]-=IK2PI;
                                                                                                        else if( j1array[0] < -IKPI )
                                                                                                            j1array[0]+=IK2PI;
                                                                                                        j1valid[0] = true;
                                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                        {
                                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                        
                                                                                                        rotationfunction0(vsolutions);
                                                                                                        }
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x276=x2;
                                                                                                                IKReal x277=x0;
                                                                                                                IKReal x278=((x276)+(x277));
                                                                                                                IKReal x279=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x280=((0.300000000000000)*(cj3));
                                                                                                                IKReal x281=((0.550000000000000)+(x279)+(x280));
                                                                                                                j1array[0]=IKatan2(((py)*(x281)*(((IKabs(x278) != 0)?((IKReal)1/(x278)):(IKReal)1.0e30))), ((pz)*(x281)*(((IKabs(x278) != 0)?((IKReal)1/(x278)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((py)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((-1.00000000000000)*(py)*(pz)*(((IKabs(((((-0.0450000000000000)*(py)*(sj3)))+(((-0.300000000000000)*(cj3)*(py)))+(((-0.550000000000000)*(py))))) != 0)?((IKReal)1/(((((-0.0450000000000000)*(py)*(sj3)))+(((-0.300000000000000)*(cj3)*(py)))+(((-0.550000000000000)*(py)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((py)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                IKReal x282=x234;
                                                                                IKReal x283=((0.0450000000000000)+(x282));
                                                                                IKReal x284=x237;
                                                                                IKReal x285=((x284)+(px));
                                                                                IKReal x286=((x283)+(((-1.00000000000000)*(x285))));
                                                                                evalcond[0]=((IKabs(py))+(IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j0)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979)))))));
                                                                                evalcond[1]=((0.396550000000000)+(((0.0765000000000000)*(sj3)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3))));
                                                                                evalcond[2]=x286;
                                                                                evalcond[3]=x286;
                                                                                evalcond[4]=x286;
                                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                                {
                                                                                {
                                                                                    IKReal j1eval[2];
                                                                                    j1eval[0]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                    j1eval[1]=((((0.550000000000000)*(py)))+(((0.0450000000000000)*(py)*(sj3)))+(((0.300000000000000)*(cj3)*(py))));
                                                                                    if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                    {
                                                                                        {
                                                                                        IKReal evalcond[6];
                                                                                            IKReal x287=((-1.00000000000000)*(px));
                                                                                            evalcond[0]=((IKabs(((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x287;
                                                                                            evalcond[3]=x287;
                                                                                            evalcond[4]=x287;
                                                                                            evalcond[5]=x287;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.17647058823529)*(py)), ((1.17647058823529)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x288=((0.345000000000000)+(((-1.00000000000000)*(px))));
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((0.500000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.473050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x288;
                                                                                            evalcond[3]=x288;
                                                                                            evalcond[4]=x288;
                                                                                            evalcond[5]=x288;
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.68067226890756)*(py)), ((1.68067226890756)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x289=((0.0900000000000000)+(((-1.00000000000000)*(px))));
                                                                                            evalcond[0]=((IKabs(((IKfmod(j3, ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.0706000000000001)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x289;
                                                                                            evalcond[3]=x289;
                                                                                            evalcond[4]=x289;
                                                                                            evalcond[5]=((-0.0900000000000000)+(px));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-4.00000000000000)*(py)), ((4.00000000000000)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            IKReal x290=((-0.255000000000000)+(((-1.00000000000000)*(px))));
                                                                                            evalcond[0]=((IKabs(((IKfmod(((((1.50000000000000)*(3.14159265358979)))+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))))))+(IKabs(py)));
                                                                                            evalcond[1]=((0.320050000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                            evalcond[2]=x290;
                                                                                            evalcond[3]=x290;
                                                                                            evalcond[4]=x290;
                                                                                            evalcond[5]=((0.255000000000000)+(px));
                                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                            {
                                                                                            {
                                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                            bool j1valid[1]={false};
                                                                                            j1array[0]=IKatan2(((-1.98019801980198)*(py)), ((1.98019801980198)*(pz)));
                                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                                            if( j1array[0] > IKPI )
                                                                                                j1array[0]-=IK2PI;
                                                                                            else if( j1array[0] < -IKPI )
                                                                                                j1array[0]+=IK2PI;
                                                                                            j1valid[0] = true;
                                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                            {
                                                                                            if( !j1valid[ij1] ) { continue; }
                                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                            
                                                                                            rotationfunction0(vsolutions);
                                                                                            }
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                            if( 1 )
                                                                                            {
                                                                                            {
                                                                                                IKReal j1eval[2];
                                                                                                j1eval[0]=((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))));
                                                                                                j1eval[1]=((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))));
                                                                                                if( IKabs(j1eval[0]) < 0.000001  || IKabs(j1eval[1]) < 0.000001  )
                                                                                                {
                                                                                                    {
                                                                                                        if( 1 )
                                                                                                        {
                                                                                                        {
                                                                                                            IKReal j1eval[1];
                                                                                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                                            if( IKabs(j1eval[0]) < 0.000001  )
                                                                                                            {
                                                                                                                {
                                                                                                                    if( 1 )
                                                                                                                    {
                                                                                                                    continue;
                                                                                                                
                                                                                                                } else
                                                                                                                {
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            } else
                                                                                                            {
                                                                                                                {
                                                                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                                bool j1valid[1]={false};
                                                                                                                IKReal x291=x2;
                                                                                                                IKReal x292=x0;
                                                                                                                IKReal x293=((x291)+(x292));
                                                                                                                IKReal x294=((0.0450000000000000)*(sj3));
                                                                                                                IKReal x295=((0.300000000000000)*(cj3));
                                                                                                                IKReal x296=((0.550000000000000)+(x294)+(x295));
                                                                                                                j1array[0]=IKatan2(((-1.00000000000000)*(py)*(x296)*(((IKabs(x293) != 0)?((IKReal)1/(x293)):(IKReal)1.0e30))), ((pz)*(x296)*(((IKabs(x293) != 0)?((IKReal)1/(x293)):(IKReal)1.0e30))));
                                                                                                                sj1array[0]=IKsin(j1array[0]);
                                                                                                                cj1array[0]=IKcos(j1array[0]);
                                                                                                                if( j1array[0] > IKPI )
                                                                                                                    j1array[0]-=IK2PI;
                                                                                                                else if( j1array[0] < -IKPI )
                                                                                                                    j1array[0]+=IK2PI;
                                                                                                                j1valid[0] = true;
                                                                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                                {
                                                                                                                if( !j1valid[ij1] ) { continue; }
                                                                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                                
                                                                                                                rotationfunction0(vsolutions);
                                                                                                                }
                                                                                                                }
                                                                                                            
                                                                                                            }
                                                                                                        
                                                                                                        }
                                                                                                    
                                                                                                    } else
                                                                                                    {
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                    {
                                                                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                                    bool j1valid[1]={false};
                                                                                                    j1array[0]=IKatan2(((-1.00000000000000)*(py)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                                                    sj1array[0]=IKsin(j1array[0]);
                                                                                                    cj1array[0]=IKcos(j1array[0]);
                                                                                                    if( j1array[0] > IKPI )
                                                                                                        j1array[0]-=IK2PI;
                                                                                                    else if( j1array[0] < -IKPI )
                                                                                                        j1array[0]+=IK2PI;
                                                                                                    j1valid[0] = true;
                                                                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                                    {
                                                                                                    if( !j1valid[ij1] ) { continue; }
                                                                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                                    
                                                                                                    rotationfunction0(vsolutions);
                                                                                                    }
                                                                                                    }
                                                                                                
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        } else
                                                                                        {
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        {
                                                                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                                                                        bool j1valid[1]={false};
                                                                                        j1array[0]=IKatan2(((-1.00000000000000)*(py)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((py)*(pz)*(((IKabs(((((0.550000000000000)*(py)))+(((0.0450000000000000)*(py)*(sj3)))+(((0.300000000000000)*(cj3)*(py))))) != 0)?((IKReal)1/(((((0.550000000000000)*(py)))+(((0.0450000000000000)*(py)*(sj3)))+(((0.300000000000000)*(cj3)*(py)))))):(IKReal)1.0e30))));
                                                                                        sj1array[0]=IKsin(j1array[0]);
                                                                                        cj1array[0]=IKcos(j1array[0]);
                                                                                        if( j1array[0] > IKPI )
                                                                                            j1array[0]-=IK2PI;
                                                                                        else if( j1array[0] < -IKPI )
                                                                                            j1array[0]+=IK2PI;
                                                                                        j1valid[0] = true;
                                                                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                                        {
                                                                                        if( !j1valid[ij1] ) { continue; }
                                                                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                                        
                                                                                        rotationfunction0(vsolutions);
                                                                                        }
                                                                                        }
                                                                                    
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            } else
                                                                            {
                                                                                if( 1 )
                                                                                {
                                                                                continue;
                                                                            
                                                                            } else
                                                                            {
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            {
                                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                                            bool j1valid[1]={false};
                                                                            IKReal x297=((cj0)*(px));
                                                                            IKReal x298=((py)*(sj0));
                                                                            IKReal x299=((x298)+(x297));
                                                                            j1array[0]=IKatan2(((x299)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))), ((-1.00000000000000)*(pz)*(x299)*(((IKabs(((((-0.300000000000000)*(cj3)*(x297)))+(((-0.300000000000000)*(cj3)*(x298)))+(((-0.0450000000000000)*(sj3)*(x297)))+(((-0.0450000000000000)*(sj3)*(x298)))+(((-0.550000000000000)*(x298)))+(((-0.550000000000000)*(x297))))) != 0)?((IKReal)1/(((((-0.300000000000000)*(cj3)*(x297)))+(((-0.300000000000000)*(cj3)*(x298)))+(((-0.0450000000000000)*(sj3)*(x297)))+(((-0.0450000000000000)*(sj3)*(x298)))+(((-0.550000000000000)*(x298)))+(((-0.550000000000000)*(x297)))))):(IKReal)1.0e30))));
                                                                            sj1array[0]=IKsin(j1array[0]);
                                                                            cj1array[0]=IKcos(j1array[0]);
                                                                            if( j1array[0] > IKPI )
                                                                                j1array[0]-=IK2PI;
                                                                            else if( j1array[0] < -IKPI )
                                                                                j1array[0]+=IK2PI;
                                                                            j1valid[0] = true;
                                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                            {
                                                                            if( !j1valid[ij1] ) { continue; }
                                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                            
                                                                            rotationfunction0(vsolutions);
                                                                            }
                                                                            }
                                                                        
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                } else
                                                                {
                                                                }
                                                                }
                                                            
                                                            } else
                                                            {
                                                                {
                                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                                bool j1valid[1]={false};
                                                                j1array[0]=IKatan2(((-1.00000000000000)*(pz)*(((IKabs(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3))))) != 0)?((IKReal)1/(((((0.550000000000000)*(pz)))+(((0.300000000000000)*(cj3)*(pz)))+(((0.0450000000000000)*(pz)*(sj3)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(py)*(sj0)))+(((-1.00000000000000)*(cj0)*(px)))))), ((pz)*(((IKabs(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3))))) != 0)?((IKReal)1/(((0.550000000000000)+(((0.0450000000000000)*(sj3)))+(((0.300000000000000)*(cj3)))))):(IKReal)1.0e30))));
                                                                sj1array[0]=IKsin(j1array[0]);
                                                                cj1array[0]=IKcos(j1array[0]);
                                                                if( j1array[0] > IKPI )
                                                                    j1array[0]-=IK2PI;
                                                                else if( j1array[0] < -IKPI )
                                                                    j1array[0]+=IK2PI;
                                                                j1valid[0] = true;
                                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                                {
                                                                if( !j1valid[ij1] ) { continue; }
                                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                                
                                                                rotationfunction0(vsolutions);
                                                                }
                                                                }
                                                            
                                                            }
                                                        
                                                        }
                                                    
                                                    } else
                                                    {
                                                    }
                                                    }
                                                
                                                } else
                                                {
                                                    {
                                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                                    bool j1valid[1]={false};
                                                    IKReal x300=((0.0450000000000000)*(sj3));
                                                    IKReal x301=((0.300000000000000)*(cj3));
                                                    IKReal x302=((0.550000000000000)+(x300)+(x301));
                                                    IKReal x303=((IKabs(x302) != 0)?((IKReal)1/(x302)):(IKReal)1.0e30);
                                                    j1array[0]=IKatan2(((x303)*(((((cj0)*(px)))+(((py)*(sj0)))))), ((pz)*(x303)));
                                                    sj1array[0]=IKsin(j1array[0]);
                                                    cj1array[0]=IKcos(j1array[0]);
                                                    if( j1array[0] > IKPI )
                                                        j1array[0]-=IK2PI;
                                                    else if( j1array[0] < -IKPI )
                                                        j1array[0]+=IK2PI;
                                                    j1valid[0] = true;
                                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                                    {
                                                    if( !j1valid[ij1] ) { continue; }
                                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                    
                                                    rotationfunction0(vsolutions);
                                                    }
                                                    }
                                                
                                                }
                                            
                                            }
                                        
                                        } else
                                        {
                                            if( 1 )
                                            {
                                            continue;
                                        
                                        } else
                                        {
                                        }
                                        }
                                        }
                                        }
                                    
                                    } else
                                    {
                                        {
                                        IKReal j1array[1], cj1array[1], sj1array[1];
                                        bool j1valid[1]={false};
                                        IKReal x304=x2;
                                        IKReal x305=(sj0)*(sj0);
                                        IKReal x306=((cj2)*(x304)*(x305));
                                        IKReal x307=(cj0)*(cj0);
                                        IKReal x308=x4;
                                        IKReal x309=((cj2)*(x307)*(x308));
                                        IKReal x310=((2.00000000000000)*(cj0)*(cj2)*(px)*(py)*(sj0));
                                        IKReal x311=x0;
                                        IKReal x312=((cj2)*(x311));
                                        IKReal x313=((x309)+(x306)+(x310)+(x312));
                                        IKReal x314=((IKabs(x313) != 0)?((IKReal)1/(x313)):(IKReal)1.0e30);
                                        IKReal x315=((0.300000000000000)*(cj3));
                                        IKReal x316=((0.0450000000000000)*(sj3));
                                        IKReal x317=((0.550000000000000)+(x315)+(x316));
                                        IKReal x318=((cj0)*(py)*(sj2));
                                        IKReal x319=((0.300000000000000)*(sj3));
                                        IKReal x320=((0.0450000000000000)+(x319)+(x318));
                                        IKReal x321=((0.0450000000000000)*(cj3));
                                        IKReal x322=((px)*(sj0)*(sj2));
                                        IKReal x323=((x321)+(x322));
                                        IKReal x324=((((-1.00000000000000)*(x323)))+(x320));
                                        j1array[0]=IKatan2(((x314)*(((((x317)*(((((cj2)*(py)*(sj0)))+(((cj0)*(cj2)*(px)))))))+(((-1.00000000000000)*(pz)*(x324)))))), ((x314)*(((((x324)*(((((cj0)*(px)))+(((py)*(sj0)))))))+(((cj2)*(pz)*(x317)))))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        for(int ij1 = 0; ij1 < 1; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        rotationfunction0(vsolutions);
                                        }
                                        }
                                    
                                    }
                                
                                }
                            
                            } else
                            {
                            }
                            }
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[1], cj1array[1], sj1array[1];
                            bool j1valid[1]={false};
                            IKReal x325=x0;
                            IKReal x326=((sj2)*(x325));
                            IKReal x327=(cj0)*(cj0);
                            IKReal x328=x4;
                            IKReal x329=((sj2)*(x327)*(x328));
                            IKReal x330=((2.00000000000000)*(cj0)*(px)*(py)*(sj0)*(sj2));
                            IKReal x331=x2;
                            IKReal x332=(sj0)*(sj0);
                            IKReal x333=((sj2)*(x331)*(x332));
                            IKReal x334=((x333)+(x330)+(x326)+(x329));
                            IKReal x335=((IKabs(x334) != 0)?((IKReal)1/(x334)):(IKReal)1.0e30);
                            IKReal x336=((cj2)*(px)*(sj0));
                            IKReal x337=((cj0)*(cj2)*(py));
                            IKReal x338=((x336)+(((-1.00000000000000)*(x337))));
                            IKReal x339=((0.300000000000000)*(cj3));
                            IKReal x340=((0.0450000000000000)*(sj3));
                            IKReal x341=((0.550000000000000)+(x339)+(x340));
                            j1array[0]=IKatan2(((x335)*(((((-1.00000000000000)*(pz)*(x338)))+(((x341)*(((((cj0)*(px)*(sj2)))+(((py)*(sj0)*(sj2)))))))))), ((x335)*(((((pz)*(sj2)*(x341)))+(((x338)*(((((cj0)*(px)))+(((py)*(sj0)))))))))));
                            sj1array[0]=IKsin(j1array[0]);
                            cj1array[0]=IKcos(j1array[0]);
                            if( j1array[0] > IKPI )
                                j1array[0]-=IK2PI;
                            else if( j1array[0] < -IKPI )
                                j1array[0]+=IK2PI;
                            j1valid[0] = true;
                            for(int ij1 = 0; ij1 < 1; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            rotationfunction0(vsolutions);
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                }
                }
            
            } else
            {
                {
                IKReal j1array[1], cj1array[1], sj1array[1];
                bool j1valid[1]={false};
                IKReal x342=x2;
                IKReal x343=(sj0)*(sj0);
                IKReal x344=((x342)*(x343));
                IKReal x345=((2.00000000000000)*(cj0)*(px)*(py)*(sj0));
                IKReal x346=x0;
                IKReal x347=(cj0)*(cj0);
                IKReal x348=x4;
                IKReal x349=((x347)*(x348));
                IKReal x350=((x346)+(x344)+(x345)+(x349));
                IKReal x351=((IKabs(x350) != 0)?((IKReal)1/(x350)):(IKReal)1.0e30);
                IKReal x352=((cj0)*(px));
                IKReal x353=((py)*(sj0));
                IKReal x354=((x353)+(x352));
                IKReal x355=((0.0450000000000000)*(cj2));
                IKReal x356=((0.300000000000000)*(cj2)*(sj3));
                IKReal x357=((x355)+(x356));
                IKReal x358=((1.00000000000000)*(cj3)*(x355));
                IKReal x359=((((-1.00000000000000)*(x358)))+(x357));
                IKReal x360=((0.300000000000000)*(cj3));
                IKReal x361=((0.0450000000000000)*(sj3));
                IKReal x362=((0.550000000000000)+(x360)+(x361));
                j1array[0]=IKatan2(((x351)*(((((x354)*(x362)))+(((-1.00000000000000)*(pz)*(x359)))))), ((x351)*(((((x354)*(x359)))+(((pz)*(x362)))))));
                sj1array[0]=IKsin(j1array[0]);
                cj1array[0]=IKcos(j1array[0]);
                if( j1array[0] > IKPI )
                    j1array[0]-=IK2PI;
                else if( j1array[0] < -IKPI )
                    j1array[0]+=IK2PI;
                j1valid[0] = true;
                for(int ij1 = 0; ij1 < 1; ++ij1)
                {
                if( !j1valid[ij1] ) { continue; }
                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                
                rotationfunction0(vsolutions);
                }
                }
            
            }
        
        }
        }
        }
        }
        }
    
    } else
    {
    }
    }
}
return vsolutions.size()>0;
}
    inline void rotationfunction0(std::vector<IKSolution>& vsolutions) {
        IKReal x29=((cj1)*(sj3));
        IKReal x30=((cj2)*(cj3)*(sj1));
        IKReal x31=((x30)+(x29));
        IKReal x32=((-1.00000000000000)*(x31));
        IKReal x33=((cj1)*(cj2)*(cj3)*(sj0));
        IKReal x34=((cj0)*(cj3)*(sj2));
        IKReal x35=((sj0)*(sj1)*(sj3));
        IKReal x36=((x35)+(x34));
        IKReal x37=((((-1.00000000000000)*(x36)))+(x33));
        IKReal x38=((cj0)*(cj1)*(cj2)*(cj3));
        IKReal x39=((cj3)*(sj0)*(sj2));
        IKReal x40=((x39)+(x38));
        IKReal x41=((cj0)*(sj1)*(sj3));
        IKReal x42=((((-1.00000000000000)*(x41)))+(x40));
        IKReal x43=((cj0)*(sj2)*(sj3));
        IKReal x44=((cj2)*(sj0)*(x29));
        IKReal x45=((cj3)*(sj0)*(sj1));
        IKReal x46=((x44)+(x45));
        IKReal x47=((((-1.00000000000000)*(x46)))+(x43));
        IKReal x48=((cj0)*(cj3)*(sj1));
        IKReal x49=((cj0)*(cj2)*(x29));
        IKReal x50=((sj0)*(sj2)*(sj3));
        IKReal x51=((x48)+(x49)+(x50));
        IKReal x52=((-1.00000000000000)*(x51));
        IKReal x53=((cj2)*(sj1)*(sj3));
        IKReal x54=((cj1)*(cj3));
        IKReal x55=((x53)+(((-1.00000000000000)*(x54))));
        IKReal x56=((cj0)*(cj1)*(sj2));
        IKReal x57=((cj2)*(sj0));
        IKReal x58=((x56)+(((-1.00000000000000)*(x57))));
        IKReal x59=((cj0)*(cj2));
        IKReal x60=((cj1)*(sj0)*(sj2));
        IKReal x61=((x59)+(x60));
        new_r00=((((r20)*(x32)))+(((r00)*(x42)))+(((r10)*(x37))));
        new_r01=((((r01)*(x42)))+(((r11)*(x37)))+(((r21)*(x32))));
        new_r02=((((r22)*(x32)))+(((r02)*(x42)))+(((r12)*(x37))));
        new_r10=((((r10)*(x47)))+(((r00)*(x52)))+(((r20)*(x55))));
        new_r11=((((r01)*(x52)))+(((r21)*(x55)))+(((r11)*(x47))));
        new_r12=((((r22)*(x55)))+(((r02)*(x52)))+(((r12)*(x47))));
        new_r20=((((r10)*(x61)))+(((-1.00000000000000)*(r20)*(sj1)*(sj2)))+(((r00)*(x58))));
        new_r21=((((r11)*(x61)))+(((-1.00000000000000)*(r21)*(sj1)*(sj2)))+(((r01)*(x58))));
        new_r22=((((r02)*(x58)))+(((-1.00000000000000)*(r22)*(sj1)*(sj2)))+(((r12)*(x61))));
        {
        IKReal j5eval;
        j5eval=new_r11;
        if( j5eval >= -1.000010 && j5eval <= -0.999990 )
        {
            {
            j5 = 3.141593; sj5 = 0.000000; cj5 = -1.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=-1.00000000000000;
            j6=((((-1.00000000000000)*(IKatan2(((-1.00000000000000)*(new_r02)), new_r00))))+(((-1.00000000000000)*(3.14159265358979))));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
        
        } else
        if( j5eval >= 0.999990 && j5eval <= 1.000010 )
        {
            {
            j5 = 0.000000; sj5 = 0.000000; cj5 = 1.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=1.00000000000000;
            j6=((-1.00000000000000)*(IKatan2(new_r20, new_r22)));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
        
        } else
        {
            {
            IKReal j4array[2], cj4array[2], sj4array[2];
            bool j4valid[2]={false};
            j4array[0]=IKatan2(((-1.00000000000000)*(new_r21)), ((-1.00000000000000)*(new_r01)));
            sj4array[0]=IKsin(j4array[0]);
            cj4array[0]=IKcos(j4array[0]);
            j4array[1] = j4array[0] > 0 ? j4array[0]-IKPI : j4array[0]+IKPI;
            sj4array[1] = -sj4array[0];
            cj4array[1] = -cj4array[0];
            if( j4array[0] > IKPI )
                j4array[0]-=IK2PI;
            else if( j4array[0] < -IKPI )
                j4array[0]+=IK2PI;
            j4valid[0] = true;
            if( j4array[1] > IKPI )
                j4array[1]-=IK2PI;
            else if( j4array[1] < -IKPI )
                j4array[1]+=IK2PI;
            j4valid[1] = true;
            if( j4valid[0] && j4valid[1] && IKabs(cj4array[0]-cj4array[1]) < 0.0001 && IKabs(sj4array[0]-sj4array[1]) < 0.0001 )
                j4valid[1]=false;
            for(int ij4 = 0; ij4 < 2; ++ij4)
            {
            if( !j4valid[ij4] ) { continue; }
            j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
            
            {
            IKReal evalcond[1];
                evalcond[0]=IKcos(j4);
                if( IKabs(evalcond[0]) < 0.000010  )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(((-1.00000000000000)*(new_r21)*(((IKabs(IKsin(j4)) != 0)?((IKReal)1/(IKsin(j4))):(IKReal)1.0e30))), new_r11);
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal j6array[1], cj6array[1], sj6array[1];
                bool j6valid[1]={false};
                IKReal x62=IKsin(j4);
                IKReal x63=((IKabs(x62) != 0)?((IKReal)1/(x62)):(IKReal)1.0e30);
                j6array[0]=IKatan2(((new_r00)*(x63)), ((-1.00000000000000)*(new_r02)*(x63)));
                sj6array[0]=IKsin(j6array[0]);
                cj6array[0]=IKcos(j6array[0]);
                if( j6array[0] > IKPI )
                    j6array[0]-=IK2PI;
                else if( j6array[0] < -IKPI )
                    j6array[0]+=IK2PI;
                j6valid[0] = true;
                for(int ij6 = 0; ij6 < 1; ++ij6)
                {
                if( !j6valid[ij6] ) { continue; }
                j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                
                vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                solution.basesol.resize(7);
                solution.basesol[0].foffset = j0;
                solution.basesol[1].foffset = j1;
                solution.basesol[2].foffset = j2;
                solution.basesol[3].foffset = j3;
                solution.basesol[4].foffset = j4;
                solution.basesol[5].foffset = j5;
                solution.basesol[6].foffset = j6;
                solution.vfree.resize(0);
                }
                }
                }
                }
            
            } else
            {
                if( 1 )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(((-1.00000000000000)*(new_r01)*(((IKabs(cj4) != 0)?((IKReal)1/(cj4)):(IKReal)1.0e30))), new_r11);
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal evalcond[1];
                    evalcond[0]=IKsin(j5);
                    if( IKabs(evalcond[0]) < 0.000010  )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x64=IKcos(j5);
                    IKReal x65=((IKabs(x64) != 0)?((IKReal)1/(x64)):(IKReal)1.0e30);
                    IKReal x66=IKcos(j4);
                    IKReal x67=IKsin(j4);
                    j6array[0]=IKatan2(((((new_r02)*(x65)*(x66)))+(((new_r22)*(x65)*(x67)))), ((((new_r22)*(x66)))+(((-1.00000000000000)*(new_r02)*(x67)))));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                
                } else
                {
                    if( 1 )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x68=IKsin(j5);
                    IKReal x69=((IKabs(x68) != 0)?((IKReal)1/(x68)):(IKReal)1.0e30);
                    j6array[0]=IKatan2(((new_r12)*(x69)), ((new_r10)*(x69)));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                
                } else
                {
                }
                }
                }
                }
                }
            
            } else
            {
            }
            }
            }
            }
            }
        
        }
        }
    }};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
IKSolver solver;
return solver.ik(eetrans,eerot,pfree,vsolutions);
}

IKFAST_API const char* getKinematicsHash() { return "b4ff7e5e04780df16a6bda565e714741"; }

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv)
{
    if( argc != 12+getNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",getNumFreeParameters());
        return 1;
    }

    std::vector<IKSolution> vsolutions;
    std::vector<IKReal> vfree(getNumFreeParameters());
    IKReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ik(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, vsolutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)vsolutions.size());
    std::vector<IKReal> sol(getNumJoints());
    for(size_t i = 0; i < vsolutions.size(); ++i) {
        printf("sol%d (free=%d): ", (int)i, (int)vsolutions[i].GetFree().size());
        std::vector<IKReal> vsolfree(vsolutions[i].GetFree().size());
        vsolutions[i].GetSolution(&sol[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( size_t j = 0; j < sol.size(); ++j)
            printf("%f, ", (float)sol[j]);
        printf("\n");
    }
    return 0;
}

#endif
