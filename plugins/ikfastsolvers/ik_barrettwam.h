/// autogenerated analytical inverse kinematics code from ikfast program
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// generated 2010-10-27 10:19:47.557364
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object:
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -shared -Wl,-soname,ik.so -o ik.so ik.cpp
#include <cmath>
#include <cassert>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IK2PI  6.28318530717959
#define IKPI  3.14159265358979
#define IKPI_2  1.57079632679490

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// defined when creating a shared object/dll
#ifdef IKFAST_CLIBRARY
#ifdef _MSC_VER
#define IKFAST_API extern "C" __declspec(dllexport)
#else
#define IKFAST_API extern "C"
#endif
#else
#define IKFAST_API
#endif

typedef double IKReal;
class IKSolution
{
public:
    /// Gets a solution given its free parameters
    /// \param pfree The free parameters required, range is in [-pi,pi]
    void GetSolution(IKReal* psolution, const IKReal* pfree) const {
        for(size_t i = 0; i < basesol.size(); ++i) {
            if( basesol[i].freeind < 0 )
                psolution[i] = basesol[i].foffset;
            else {
                assert(pfree != NULL);
                psolution[i] = pfree[basesol[i].freeind]*basesol[i].fmul + basesol[i].foffset;
                if( psolution[i] > IKPI )
                    psolution[i] -= IK2PI;
                else if( psolution[i] < -IKPI )
                    psolution[i] += IK2PI;
            }
        }
    }

    /// Gets the free parameters the solution requires to be set before a full solution can be returned
    /// \return vector of indices indicating the free parameters
    const std::vector<int>& GetFree() const { return vfree; }

    struct VARIABLE
    {
        VARIABLE() : freeind(-1), fmul(0), foffset(0) {}
        VARIABLE(int freeind, IKReal fmul, IKReal foffset) : freeind(freeind), fmul(fmul), foffset(foffset) {}
        int freeind;
        IKReal fmul, foffset; ///< joint value is fmul*sol[freeind]+foffset
    };

    std::vector<VARIABLE> basesol;       ///< solution and their offsets if joints are mimiced
    std::vector<int> vfree;
};

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

inline float IKasin(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asinf(f);
}
inline double IKasin(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline float IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0f;
return acosf(f);
}
inline double IKacos(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2(fy,fx);
}

IKFAST_API int getNumFreeParameters() { return 1; }
IKFAST_API int* getFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int getNumJoints() { return 7; }

IKFAST_API int getIKRealSize() { return sizeof(IKReal); }

IKFAST_API int getIKType() { return 1; }

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void fk(const IKReal* j, IKReal* eetrans, IKReal* eerot) {
    IKReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87;
    x0=IKcos(j[4]);
    x1=IKcos(j[5]);
    x2=IKcos(j[6]);
    x3=IKsin(j[4]);
    x4=IKsin(j[6]);
    x5=IKsin(j[3]);
    x6=((x0)*(x1)*(x2));
    x7=((x3)*(x4));
    x8=((x7)+(x6));
    x9=IKcos(j[3]);
    x10=IKsin(j[5]);
    x11=IKsin(j[2]);
    x12=((x8)*(x9));
    x13=((x10)*(x2)*(x5));
    x14=((((-1.00000000000000)*(x13)))+(x12));
    x15=IKcos(j[2]);
    x16=((x0)*(x4));
    x17=((x1)*(x2)*(x3));
    x18=IKsin(j[0]);
    x19=IKcos(j[0]);
    x20=IKcos(j[1]);
    x21=((x0)*(x2));
    x22=((x1)*(x7));
    x23=((x21)+(x22));
    x24=((x1)*(x16));
    x25=((x2)*(x3));
    x26=((((-1.00000000000000)*(x25)))+(x24));
    x27=((x26)*(x9));
    x28=((x10)*(x4)*(x5));
    x29=((((-1.00000000000000)*(x28)))+(x27));
    x30=IKsin(j[1]);
    x31=((x0)*(x10)*(x9));
    x32=((x1)*(x5));
    x33=((x32)+(x31));
    x34=((-1.00000000000000)*(x33));
    x35=((0.300000000000000)*(x5));
    x36=((0.0450000000000000)+(x35));
    x37=((0.0450000000000000)*(x9));
    x38=((((-1.00000000000000)*(x37)))+(x36));
    x39=((x11)*(x34));
    x40=((x10)*(x15)*(x3));
    x41=((x39)+(x40));
    x42=((x0)*(x10)*(x5));
    x43=((x1)*(x9));
    x44=((((-1.00000000000000)*(x43)))+(x42));
    x45=((x30)*(x44));
    x46=((x15)*(x34));
    x47=((x10)*(x11)*(x3));
    x48=((((-1.00000000000000)*(x47)))+(x46));
    x49=((x20)*(x48));
    x50=((x49)+(x45));
    x51=((-1.00000000000000)*(x8));
    x52=((((-1.00000000000000)*(x16)))+(x17));
    x53=((x11)*(x52));
    x54=((x14)*(x15));
    x55=((x54)+(x53));
    x56=((x20)*(x55));
    x57=((x5)*(x51));
    x58=((x10)*(x2)*(x9));
    x59=((x57)+(((-1.00000000000000)*(x58))));
    x60=((x30)*(x59));
    x61=((x56)+(x60));
    x62=((((-1.00000000000000)*(x24)))+(x25));
    x63=((x11)*(x23));
    x64=((x15)*(x29));
    x65=((x63)+(x64));
    x66=((x20)*(x65));
    x67=((x5)*(x62));
    x68=((x10)*(x4)*(x9));
    x69=((x67)+(((-1.00000000000000)*(x68))));
    x70=((x30)*(x69));
    x71=((x70)+(x66));
    x72=((0.0450000000000000)*(x5));
    x73=((0.300000000000000)*(x9));
    x74=((0.550000000000000)+(x73)+(x72));
    x75=((x30)*(x74));
    x76=((x15)*(x20)*(x38));
    x77=((x76)+(x75));
    x78=((x11)*(x33));
    x79=((((-1.00000000000000)*(x40)))+(x78));
    x80=((x51)*(x9));
    x81=((x13)+(x80));
    x82=((((-1.00000000000000)*(x17)))+(x16));
    x83=((x62)*(x9));
    x84=((x28)+(x83));
    x85=((-1.00000000000000)*(x23));
    x86=((x15)*(x33));
    x87=((x47)+(x86));
    eerot[0]=((((x19)*(x61)))+(((x18)*(((((x15)*(x82)))+(((x11)*(x14))))))));
    eerot[1]=((((x19)*(x71)))+(((x18)*(((((x15)*(x85)))+(((x11)*(x29))))))));
    eerot[2]=((((-1.00000000000000)*(x19)*(x50)))+(((-1.00000000000000)*(x18)*(x41))));
    eetrans[0]=((0.220000000000000)+(((x19)*(x77)))+(((x11)*(x18)*(x38)))+(((-0.220000000000000)*(x18)*(x41)))+(((-0.220000000000000)*(x19)*(x50))));
    eerot[3]=((((x18)*(x61)))+(((x19)*(((((x11)*(x81)))+(((x15)*(x52))))))));
    eerot[4]=((((x18)*(x71)))+(((x19)*(((((x11)*(x84)))+(((x15)*(x23))))))));
    eerot[5]=((((-1.00000000000000)*(x18)*(x50)))+(((-1.00000000000000)*(x19)*(x79))));
    eetrans[1]=((0.140000000000000)+(((-1.00000000000000)*(x11)*(x19)*(x38)))+(((x18)*(x77)))+(((-0.220000000000000)*(x18)*(x50)))+(((-0.220000000000000)*(x19)*(x79))));
    eerot[6]=((((x20)*(x59)))+(((x30)*(((((x11)*(x82)))+(((x15)*(x81))))))));
    eerot[7]=((((x30)*(((((x11)*(x85)))+(((x15)*(x84)))))))+(((x20)*(((x67)+(((-1.00000000000000)*(x68))))))));
    eerot[8]=((((-1.00000000000000)*(x20)*(x44)))+(((-1.00000000000000)*(x30)*(x87))));
    eetrans[2]=((0.346000000000000)+(((-1.00000000000000)*(x15)*(x30)*(x38)))+(((-0.220000000000000)*(x20)*(x44)))+(((x20)*(x74)))+(((-0.220000000000000)*(x30)*(x87))));
}

class IKSolver {
public:
IKReal j0, cj0, sj0,
j1, cj1, sj1,
j3, cj3, sj3,
j4, cj4, sj4,
j5, cj5, sj5,
j6, cj6, sj6,
j2, cj2, sj2,
new_r00, r00,
new_r01, r01,
new_r02, r02,
new_r10, r10,
new_r11, r11,
new_r12, r12,
new_r20, r20,
new_r21, r21,
new_r22, r22,
new_px, new_py, new_pz, px, py, pz;

bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    vsolutions.resize(0); vsolutions.reserve(8);
    j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]);
    r00 = eerot[0*3+0];
    r01 = eerot[0*3+1];
    r02 = eerot[0*3+2];
    r10 = eerot[1*3+0];
    r11 = eerot[1*3+1];
    r12 = eerot[1*3+2];
    r20 = eerot[2*3+0];
    r21 = eerot[2*3+1];
    r22 = eerot[2*3+2];
    px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
    
    new_r00=r00;
    new_r01=((-1.00000000000000)*(r02));
    new_r02=r01;
    new_px=((-0.220000000000000)+(px)+(((-0.220000000000000)*(r02))));
    new_r10=r10;
    new_r11=((-1.00000000000000)*(r12));
    new_r12=r11;
    new_py=((-0.140000000000000)+(py)+(((-0.220000000000000)*(r12))));
    new_r20=r20;
    new_r21=((-1.00000000000000)*(r22));
    new_r22=r21;
    new_pz=((-0.346000000000000)+(pz)+(((-0.220000000000000)*(r22))));
    r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
    {
        if( 1 )
        {
        {
        IKReal j3array[2], cj3array[2], sj3array[2];
        bool j3valid[2]={false};
        IKReal x0=(pz)*(pz);
        IKReal x1=((2.98679637348110)*(x0));
        IKReal x2=(py)*(py);
        IKReal x3=((2.98679637348110)*(x2));
        IKReal x4=(px)*(px);
        IKReal x5=((2.98679637348110)*(x4));
        IKReal x6=((-1.18441410190393)+(x3)+(x1)+(x5));
        if( (x6) < -1.0001 || (x6) > 1.0001 )
            continue;
        IKReal x7=IKasin(x6);
        j3array[0]=((-1.34027003705633)+(x7));
        sj3array[0]=IKsin(j3array[0]);
        cj3array[0]=IKcos(j3array[0]);
        j3array[1]=((1.80132261653346)+(((-1.00000000000000)*(x7))));
        sj3array[1]=IKsin(j3array[1]);
        cj3array[1]=IKcos(j3array[1]);
        if( j3array[0] > IKPI )
            j3array[0]-=IK2PI;
        else if( j3array[0] < -IKPI )
            j3array[0]+=IK2PI;
        j3valid[0] = true;
        if( j3array[1] > IKPI )
            j3array[1]-=IK2PI;
        else if( j3array[1] < -IKPI )
            j3array[1]+=IK2PI;
        j3valid[1] = true;
        if( j3valid[0] && j3valid[1] && IKabs(cj3array[0]-cj3array[1]) < 0.0001 && IKabs(sj3array[0]-sj3array[1]) < 0.0001 )
            j3valid[1]=false;
        for(int ij3 = 0; ij3 < 2; ++ij3)
        {
        if( !j3valid[ij3] ) { continue; }
        j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
        
        {
            IKReal j0eval[1];
            if( ((((px)*(px))+((py)*(py)))) < (IKReal)-0.00001 )
                continue;
            j0eval[0]=IKabs(IKsqrt((((px)*(px))+((py)*(py)))));
            if( IKabs(j0eval[0]) < 0.000001  )
            {
                {
                    if( 1 )
                    {
                    {
                        IKReal j1eval[1];
                        if( ((((((((0.0450000000000000)*(cj2)*(cj3)))+(((-0.0450000000000000)*(cj2)))+(((-0.300000000000000)*(cj2)*(sj3)))))*(((((0.0450000000000000)*(cj2)*(cj3)))+(((-0.0450000000000000)*(cj2)))+(((-0.300000000000000)*(cj2)*(sj3))))))+((((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))))) < (IKReal)-0.00001 )
                            continue;
                        j1eval[0]=IKabs(IKsqrt((((((((0.0450000000000000)*(cj2)*(cj3)))+(((-0.0450000000000000)*(cj2)))+(((-0.300000000000000)*(cj2)*(sj3)))))*(((((0.0450000000000000)*(cj2)*(cj3)))+(((-0.0450000000000000)*(cj2)))+(((-0.300000000000000)*(cj2)*(sj3))))))+((((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                                if( 1 )
                                {
                                continue;
                            
                            } else
                            {
                            }
                            }
                        
                        } else
                        {
                            {
                            IKReal j1array[2], cj1array[2], sj1array[2];
                            bool j1valid[2]={false};
                            IKReal x8=((0.300000000000000)*(cj3));
                            IKReal x9=((0.0450000000000000)*(sj3));
                            IKReal x10=((0.550000000000000)+(x9)+(x8));
                            IKReal x11=((0.0450000000000000)*(cj2)*(cj3));
                            IKReal x12=((0.0450000000000000)*(cj2));
                            IKReal x13=((0.300000000000000)*(cj2)*(sj3));
                            IKReal x14=((x13)+(x12));
                            IKReal x15=((((-1.00000000000000)*(x14)))+(x11));
                            IKReal x16=IKatan2(x10, x15);
                            IKReal x17=(x15)*(x15);
                            IKReal x18=(x10)*(x10);
                            IKReal x19=((x17)+(x18));
                            if( (x19) < (IKReal)-0.00001 )
                                continue;
                            IKReal x20=IKsqrt(x19);
                            IKReal x21=IKabs(x20);
                            IKReal x22=((IKabs(x21) != 0)?((IKReal)1/(x21)):(IKReal)1.0e30);
                            IKReal x23=((pz)*(x22));
                            if( (x23) < -1.0001 || (x23) > 1.0001 )
                                continue;
                            IKReal x24=IKasin(x23);
                            j1array[0]=((((-1.00000000000000)*(x16)))+(x24));
                            sj1array[0]=IKsin(j1array[0]);
                            cj1array[0]=IKcos(j1array[0]);
                            j1array[1]=((3.14159265358979)+(((-1.00000000000000)*(x16)))+(((-1.00000000000000)*(x24))));
                            sj1array[1]=IKsin(j1array[1]);
                            cj1array[1]=IKcos(j1array[1]);
                            if( j1array[0] > IKPI )
                                j1array[0]-=IK2PI;
                            else if( j1array[0] < -IKPI )
                                j1array[0]+=IK2PI;
                            j1valid[0] = true;
                            if( j1array[1] > IKPI )
                                j1array[1]-=IK2PI;
                            else if( j1array[1] < -IKPI )
                                j1array[1]+=IK2PI;
                            j1valid[1] = true;
                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                j1valid[1]=false;
                            for(int ij1 = 0; ij1 < 2; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            {
                                IKReal j0eval[1];
                                j0eval[0]=((((-1.00000000000000)*(sj1)*((py)*(py))))+(((-1.00000000000000)*(sj1)*((px)*(px)))));
                                if( IKabs(j0eval[0]) < 0.000001  )
                                {
                                    {
                                    IKReal evalcond[4];
                                        IKReal x25=x8;
                                        IKReal x26=x9;
                                        IKReal x27=((0.550000000000000)+(x25)+(x26));
                                        IKReal x28=((x27)+(((-1.00000000000000)*(pz))));
                                        evalcond[0]=((IKfmod(((3.14159265358979)+(j1)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                        evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                        evalcond[2]=x28;
                                        evalcond[3]=x28;
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                        {
                                        {
                                            IKReal j0eval[1];
                                            j0eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                            if( IKabs(j0eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    {
                                                        IKReal j0eval[1];
                                                        j0eval[0]=((((py)*(((((-1.00000000000000)*(py)*(sj2)))+(((cj2)*(px)))))))+(((-1.00000000000000)*(px)*(((((cj2)*(py)))+(((px)*(sj2))))))));
                                                        if( IKabs(j0eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                            IKReal evalcond[4];
                                                                IKReal x29=x8;
                                                                IKReal x30=x9;
                                                                IKReal x31=x27;
                                                                IKReal x32=((x31)+(((-1.00000000000000)*(pz))));
                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=x32;
                                                                evalcond[3]=x32;
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                        IKReal evalcond[7];
                                                                            IKReal x33=((0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                            evalcond[2]=x33;
                                                                            evalcond[3]=x33;
                                                                            evalcond[4]=((-1.00000000000000)*(px));
                                                                            evalcond[5]=((-1.00000000000000)*(py));
                                                                            evalcond[6]=x33;
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x34=x4;
                                                                                    IKReal x35=x2;
                                                                                    IKReal x36=((0.0900000000000000)*(x35));
                                                                                    IKReal x37=((0.0900000000000000)*(x34));
                                                                                    IKReal x38=((x37)+(x36));
                                                                                    IKReal x39=x0;
                                                                                    IKReal x40=((0.212500000000000)+(x39)+(x35)+(x34));
                                                                                    IKReal x41=((1.10000000000000)*(pz));
                                                                                    IKReal x42=((((-1.00000000000000)*(x41)))+(x40));
                                                                                    j0array[0]=IKatan2(((py)*(x42)*(((IKabs(x38) != 0)?((IKReal)1/(x38)):(IKReal)1.0e30))), ((px)*(x42)*(((IKabs(x38) != 0)?((IKReal)1/(x38)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                continue;
                                                                            IKReal x84=IKasin(0.148340452930245);
                                                                            IKReal x85=((3.29048260119929)+(x84));
                                                                            IKReal x86=IKsin(x85);
                                                                            IKReal x87=IKcos(x85);
                                                                            IKReal x88=((0.0450000000000000)*(x86));
                                                                            IKReal x89=((0.300000000000000)*(x87));
                                                                            IKReal x90=((0.550000000000000)+(x88)+(x89));
                                                                            IKReal x91=((x90)+(((-1.00000000000000)*(pz))));
                                                                            evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                            evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((0.325950000000000)*(x87)))+(((-1.00000000000000)*((py)*(py))))+(((0.0765000000000000)*(x86)))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                            evalcond[2]=x91;
                                                                            evalcond[3]=x91;
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x92=x84;
                                                                                    IKReal x93=((3.29048260119929)+(x92));
                                                                                    IKReal x94=x4;
                                                                                    IKReal x95=x2;
                                                                                    IKReal x96=((x95)+(x94));
                                                                                    IKReal x97=IKsin(x93);
                                                                                    IKReal x98=((0.300000000000000)*(x97));
                                                                                    IKReal x99=((0.0450000000000000)+(x98));
                                                                                    IKReal x100=IKcos(x93);
                                                                                    IKReal x101=((0.0450000000000000)*(x100));
                                                                                    IKReal x102=((((-1.00000000000000)*(x101)))+(x99));
                                                                                    j0array[0]=IKatan2(((py)*(x102)*(((IKabs(x96) != 0)?((IKReal)1/(x96)):(IKReal)1.0e30))), ((px)*(x102)*(((IKabs(x96) != 0)?((IKReal)1/(x96)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                    IKReal evalcond[7];
                                                                                        IKReal x103=((0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                        evalcond[2]=x103;
                                                                                        evalcond[3]=x103;
                                                                                        evalcond[4]=((-1.00000000000000)*(px));
                                                                                        evalcond[5]=((-1.00000000000000)*(py));
                                                                                        evalcond[6]=x103;
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x104=x4;
                                                                                                IKReal x105=x2;
                                                                                                IKReal x106=((0.0900000000000000)*(x105));
                                                                                                IKReal x107=((0.0900000000000000)*(x104));
                                                                                                IKReal x108=((x106)+(x107));
                                                                                                IKReal x109=x0;
                                                                                                IKReal x110=((0.212500000000000)+(x109)+(x104)+(x105));
                                                                                                IKReal x111=((1.10000000000000)*(pz));
                                                                                                IKReal x112=((((-1.00000000000000)*(x111)))+(x110));
                                                                                                j0array[0]=IKatan2(((py)*(x112)*(((IKabs(x108) != 0)?((IKReal)1/(x108)):(IKReal)1.0e30))), ((px)*(x112)*(((IKabs(x108) != 0)?((IKReal)1/(x108)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                            continue;
                                                                                        IKReal x113=IKasin(0.148340452930245);
                                                                                        IKReal x114=((3.29048260119929)+(x113));
                                                                                        IKReal x115=IKsin(x114);
                                                                                        IKReal x116=IKcos(x114);
                                                                                        IKReal x117=((0.0450000000000000)*(x115));
                                                                                        IKReal x118=((0.300000000000000)*(x116));
                                                                                        IKReal x119=((0.550000000000000)+(x117)+(x118));
                                                                                        IKReal x120=((x119)+(((-1.00000000000000)*(pz))));
                                                                                        evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                        evalcond[1]=((0.396550000000000)+(((0.325950000000000)*(x116)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.0765000000000000)*(x115))));
                                                                                        evalcond[2]=x120;
                                                                                        evalcond[3]=x120;
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x121=x113;
                                                                                                IKReal x122=((3.29048260119929)+(x121));
                                                                                                IKReal x123=x4;
                                                                                                IKReal x124=x2;
                                                                                                IKReal x125=((x124)+(x123));
                                                                                                IKReal x126=IKsin(x122);
                                                                                                IKReal x127=((0.300000000000000)*(x126));
                                                                                                IKReal x128=((0.0450000000000000)+(x127));
                                                                                                IKReal x129=IKcos(x122);
                                                                                                IKReal x130=((0.0450000000000000)*(x129));
                                                                                                IKReal x131=((x128)+(((-1.00000000000000)*(x130))));
                                                                                                j0array[0]=IKatan2(((py)*(x131)*(((IKabs(x125) != 0)?((IKReal)1/(x125)):(IKReal)1.0e30))), ((px)*(x131)*(((IKabs(x125) != 0)?((IKReal)1/(x125)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x132=((0.300000000000000)*(sj3));
                                                                                    IKReal x133=((0.0450000000000000)+(x132));
                                                                                    IKReal x134=((0.0450000000000000)*(cj3));
                                                                                    IKReal x135=((x133)+(((-1.00000000000000)*(x134))));
                                                                                    IKReal x136=((IKabs(x135) != 0)?((IKReal)1/(x135)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((py)*(x136)), ((px)*(x136)));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x137=((0.300000000000000)*(sj3));
                                                                        IKReal x138=((0.0450000000000000)+(x137));
                                                                        IKReal x139=((0.0450000000000000)*(cj3));
                                                                        IKReal x140=((x138)+(((-1.00000000000000)*(x139))));
                                                                        IKReal x141=((IKabs(x140) != 0)?((IKReal)1/(x140)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((py)*(x141)), ((px)*(x141)));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                IKReal x142=x8;
                                                                IKReal x143=x9;
                                                                IKReal x144=x27;
                                                                IKReal x145=((x144)+(((-1.00000000000000)*(pz))));
                                                                evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=x145;
                                                                evalcond[3]=x145;
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                        IKReal evalcond[7];
                                                                            IKReal x146=((0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                            evalcond[2]=x146;
                                                                            evalcond[3]=x146;
                                                                            evalcond[4]=((-1.00000000000000)*(px));
                                                                            evalcond[5]=((-1.00000000000000)*(py));
                                                                            evalcond[6]=x146;
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x147=x2;
                                                                                    IKReal x148=x4;
                                                                                    IKReal x149=((0.0900000000000000)*(x147));
                                                                                    IKReal x150=((0.0900000000000000)*(x148));
                                                                                    IKReal x151=((x150)+(x149));
                                                                                    IKReal x152=x0;
                                                                                    IKReal x153=((0.212500000000000)+(x152)+(x147)+(x148));
                                                                                    IKReal x154=((1.10000000000000)*(pz));
                                                                                    IKReal x155=((((-1.00000000000000)*(x154)))+(x153));
                                                                                    j0array[0]=IKatan2(((-1.00000000000000)*(py)*(x155)*(((IKabs(x151) != 0)?((IKReal)1/(x151)):(IKReal)1.0e30))), ((-1.00000000000000)*(px)*(x155)*(((IKabs(x151) != 0)?((IKReal)1/(x151)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                continue;
                                                                            IKReal x156=IKasin(0.148340452930245);
                                                                            IKReal x157=((3.29048260119929)+(x156));
                                                                            IKReal x158=IKsin(x157);
                                                                            IKReal x159=IKcos(x157);
                                                                            IKReal x160=((0.0450000000000000)*(x158));
                                                                            IKReal x161=((0.300000000000000)*(x159));
                                                                            IKReal x162=((0.550000000000000)+(x160)+(x161));
                                                                            IKReal x163=((x162)+(((-1.00000000000000)*(pz))));
                                                                            evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                            evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(x159)))+(((0.0765000000000000)*(x158))));
                                                                            evalcond[2]=x163;
                                                                            evalcond[3]=x163;
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x164=x156;
                                                                                    IKReal x165=((3.29048260119929)+(x164));
                                                                                    IKReal x166=x4;
                                                                                    IKReal x167=x2;
                                                                                    IKReal x168=((x166)+(x167));
                                                                                    IKReal x169=IKsin(x165);
                                                                                    IKReal x170=((0.300000000000000)*(x169));
                                                                                    IKReal x171=((0.0450000000000000)+(x170));
                                                                                    IKReal x172=IKcos(x165);
                                                                                    IKReal x173=((0.0450000000000000)*(x172));
                                                                                    IKReal x174=((((-1.00000000000000)*(x173)))+(x171));
                                                                                    j0array[0]=IKatan2(((-1.00000000000000)*(py)*(x174)*(((IKabs(x168) != 0)?((IKReal)1/(x168)):(IKReal)1.0e30))), ((-1.00000000000000)*(px)*(x174)*(((IKabs(x168) != 0)?((IKReal)1/(x168)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                    IKReal evalcond[7];
                                                                                        IKReal x175=((0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                        evalcond[2]=x175;
                                                                                        evalcond[3]=x175;
                                                                                        evalcond[4]=((-1.00000000000000)*(px));
                                                                                        evalcond[5]=((-1.00000000000000)*(py));
                                                                                        evalcond[6]=x175;
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  && IKabs(evalcond[6]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x176=x2;
                                                                                                IKReal x177=x4;
                                                                                                IKReal x178=((0.0900000000000000)*(x176));
                                                                                                IKReal x179=((0.0900000000000000)*(x177));
                                                                                                IKReal x180=((x179)+(x178));
                                                                                                IKReal x181=x0;
                                                                                                IKReal x182=((0.212500000000000)+(x177)+(x176)+(x181));
                                                                                                IKReal x183=((1.10000000000000)*(pz));
                                                                                                IKReal x184=((((-1.00000000000000)*(x183)))+(x182));
                                                                                                j0array[0]=IKatan2(((-1.00000000000000)*(py)*(x184)*(((IKabs(x180) != 0)?((IKReal)1/(x180)):(IKReal)1.0e30))), ((-1.00000000000000)*(px)*(x184)*(((IKabs(x180) != 0)?((IKReal)1/(x180)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                            continue;
                                                                                        IKReal x185=IKasin(0.148340452930245);
                                                                                        IKReal x186=((3.29048260119929)+(x185));
                                                                                        IKReal x187=IKsin(x186);
                                                                                        IKReal x188=IKcos(x186);
                                                                                        IKReal x189=((0.0450000000000000)*(x187));
                                                                                        IKReal x190=((0.300000000000000)*(x188));
                                                                                        IKReal x191=((0.550000000000000)+(x190)+(x189));
                                                                                        IKReal x192=((x191)+(((-1.00000000000000)*(pz))));
                                                                                        evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                        evalcond[1]=((0.396550000000000)+(((0.325950000000000)*(x188)))+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.0765000000000000)*(x187))));
                                                                                        evalcond[2]=x192;
                                                                                        evalcond[3]=x192;
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x193=x185;
                                                                                                IKReal x194=((3.29048260119929)+(x193));
                                                                                                IKReal x195=x4;
                                                                                                IKReal x196=x2;
                                                                                                IKReal x197=((x196)+(x195));
                                                                                                IKReal x198=IKsin(x194);
                                                                                                IKReal x199=((0.300000000000000)*(x198));
                                                                                                IKReal x200=((0.0450000000000000)+(x199));
                                                                                                IKReal x201=IKcos(x194);
                                                                                                IKReal x202=((0.0450000000000000)*(x201));
                                                                                                IKReal x203=((((-1.00000000000000)*(x202)))+(x200));
                                                                                                j0array[0]=IKatan2(((-1.00000000000000)*(py)*(x203)*(((IKabs(x197) != 0)?((IKReal)1/(x197)):(IKReal)1.0e30))), ((-1.00000000000000)*(px)*(x203)*(((IKabs(x197) != 0)?((IKReal)1/(x197)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x204=((0.300000000000000)*(sj3));
                                                                                    IKReal x205=((0.0450000000000000)+(x204));
                                                                                    IKReal x206=((0.0450000000000000)*(cj3));
                                                                                    IKReal x207=((((-1.00000000000000)*(x206)))+(x205));
                                                                                    IKReal x208=((IKabs(x207) != 0)?((IKReal)1/(x207)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((-1.00000000000000)*(py)*(x208)), ((-1.00000000000000)*(px)*(x208)));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x209=((0.300000000000000)*(sj3));
                                                                        IKReal x210=((0.0450000000000000)+(x209));
                                                                        IKReal x211=((0.0450000000000000)*(cj3));
                                                                        IKReal x212=((x210)+(((-1.00000000000000)*(x211))));
                                                                        IKReal x213=((IKabs(x212) != 0)?((IKReal)1/(x212)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((-1.00000000000000)*(py)*(x213)), ((-1.00000000000000)*(px)*(x213)));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                            
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            }
                                                            }
                                                        
                                                        } else
                                                        {
                                                            {
                                                            IKReal j0array[1], cj0array[1], sj0array[1];
                                                            bool j0valid[1]={false};
                                                            IKReal x214=((cj2)*(py));
                                                            IKReal x215=((px)*(sj2));
                                                            IKReal x216=((x214)+(x215));
                                                            IKReal x217=((-1.00000000000000)*(x216));
                                                            IKReal x218=((0.0450000000000000)*(cj3)*(sj2));
                                                            IKReal x219=((0.0450000000000000)*(sj2));
                                                            IKReal x220=((0.300000000000000)*(sj2)*(sj3));
                                                            IKReal x221=((x219)+(x220));
                                                            IKReal x222=((x218)+(((-1.00000000000000)*(x221))));
                                                            IKReal x223=((cj2)*(px));
                                                            IKReal x224=((py)*(sj2));
                                                            IKReal x225=((x223)+(((-1.00000000000000)*(x224))));
                                                            IKReal x226=((px)*(x217));
                                                            IKReal x227=((py)*(x225));
                                                            IKReal x228=((x227)+(x226));
                                                            j0array[0]=IKatan2(((-1.00000000000000)*(x217)*(x222)*(((IKabs(x228) != 0)?((IKReal)1/(x228)):(IKReal)1.0e30))), ((x222)*(x225)*(((IKabs(x228) != 0)?((IKReal)1/(x228)):(IKReal)1.0e30))));
                                                            sj0array[0]=IKsin(j0array[0]);
                                                            cj0array[0]=IKcos(j0array[0]);
                                                            if( j0array[0] > IKPI )
                                                                j0array[0]-=IK2PI;
                                                            else if( j0array[0] < -IKPI )
                                                                j0array[0]+=IK2PI;
                                                            j0valid[0] = true;
                                                            for(int ij0 = 0; ij0 < 1; ++ij0)
                                                            {
                                                            if( !j0valid[ij0] ) { continue; }
                                                            j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                        
                                                        }
                                                    
                                                    }
                                                
                                                } else
                                                {
                                                }
                                                }
                                            
                                            } else
                                            {
                                                {
                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                bool j0valid[1]={false};
                                                IKReal x229=x12;
                                                IKReal x230=x13;
                                                IKReal x231=((x229)+(x230));
                                                IKReal x232=((1.00000000000000)*(cj3)*(x229));
                                                IKReal x233=((((-1.00000000000000)*(x232)))+(x231));
                                                IKReal x234=((0.0450000000000000)*(cj3)*(sj2));
                                                IKReal x235=((0.0450000000000000)*(sj2));
                                                IKReal x236=((0.300000000000000)*(sj2)*(sj3));
                                                IKReal x237=((x236)+(x235));
                                                IKReal x238=((((-1.00000000000000)*(x237)))+(x234));
                                                IKReal x239=x4;
                                                IKReal x240=x2;
                                                IKReal x241=((x239)+(x240));
                                                IKReal x242=((-1.00000000000000)*(x241));
                                                IKReal x243=((IKabs(x242) != 0)?((IKReal)1/(x242)):(IKReal)1.0e30);
                                                j0array[0]=IKatan2(((x243)*(((((px)*(x238)))+(((-1.00000000000000)*(py)*(x233)))))), ((x243)*(((((-1.00000000000000)*(px)*(x233)))+(((-1.00000000000000)*(py)*(x238)))))));
                                                sj0array[0]=IKsin(j0array[0]);
                                                cj0array[0]=IKcos(j0array[0]);
                                                if( j0array[0] > IKPI )
                                                    j0array[0]-=IK2PI;
                                                else if( j0array[0] < -IKPI )
                                                    j0array[0]+=IK2PI;
                                                j0valid[0] = true;
                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                {
                                                if( !j0valid[ij0] ) { continue; }
                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                            
                                            }
                                        
                                        }
                                    
                                    } else
                                    {
                                        IKReal x244=x8;
                                        IKReal x245=x9;
                                        evalcond[0]=((IKfmod(((-3.14159265358979)+(3.14159265358979)+(j1)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                        evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                        evalcond[2]=((0.550000000000000)+(x245)+(x244)+(pz));
                                        evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(x244)))+(((-1.00000000000000)*(x245)))+(((-1.00000000000000)*(pz))));
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                        {
                                        {
                                            IKReal j0eval[1];
                                            j0eval[0]=(((px)*(px))+((py)*(py)));
                                            if( IKabs(j0eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    {
                                                        IKReal j0eval[1];
                                                        j0eval[0]=((((-1.00000000000000)*(py)*(((((-1.00000000000000)*(cj2)*(py)))+(((px)*(sj2)))))))+(((px)*(((((cj2)*(px)))+(((py)*(sj2))))))));
                                                        if( IKabs(j0eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                            IKReal evalcond[4];
                                                                IKReal x246=x8;
                                                                IKReal x247=x9;
                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=((0.550000000000000)+(x247)+(x246)+(pz));
                                                                evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(x246)))+(((-1.00000000000000)*(x247)))+(((-1.00000000000000)*(pz))));
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                        IKReal evalcond[6];
                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                            evalcond[2]=((0.850000000000000)+(pz));
                                                                            evalcond[3]=((-0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                            evalcond[4]=((-1.00000000000000)*(px));
                                                                            evalcond[5]=((-1.00000000000000)*(py));
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x248=x2;
                                                                                    IKReal x249=x4;
                                                                                    IKReal x250=((0.0900000000000000)*(x248));
                                                                                    IKReal x251=((0.0900000000000000)*(x249));
                                                                                    IKReal x252=((x250)+(x251));
                                                                                    IKReal x253=x0;
                                                                                    IKReal x254=((1.10000000000000)*(pz));
                                                                                    IKReal x255=((0.212500000000000)+(x254)+(x253)+(x249)+(x248));
                                                                                    j0array[0]=IKatan2(((px)*(x255)*(((IKabs(x252) != 0)?((IKReal)1/(x252)):(IKReal)1.0e30))), ((-1.00000000000000)*(py)*(x255)*(((IKabs(x252) != 0)?((IKReal)1/(x252)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                continue;
                                                                            IKReal x256=IKasin(0.148340452930245);
                                                                            IKReal x257=((3.29048260119929)+(x256));
                                                                            IKReal x258=IKsin(x257);
                                                                            IKReal x259=IKcos(x257);
                                                                            IKReal x260=((0.0450000000000000)*(x258));
                                                                            IKReal x261=((0.300000000000000)*(x259));
                                                                            evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                            evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.0765000000000000)*(x258)))+(((0.325950000000000)*(x259))));
                                                                            evalcond[2]=((0.550000000000000)+(x261)+(x260)+(pz));
                                                                            evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(x260)))+(((-1.00000000000000)*(x261)))+(((-1.00000000000000)*(pz))));
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x262=x256;
                                                                                    IKReal x263=((3.29048260119929)+(x262));
                                                                                    IKReal x264=x4;
                                                                                    IKReal x265=x2;
                                                                                    IKReal x266=((x265)+(x264));
                                                                                    IKReal x267=IKsin(x263);
                                                                                    IKReal x268=((0.300000000000000)*(x267));
                                                                                    IKReal x269=((0.0450000000000000)+(x268));
                                                                                    IKReal x270=IKcos(x263);
                                                                                    IKReal x271=((0.0450000000000000)*(x270));
                                                                                    IKReal x272=((x269)+(((-1.00000000000000)*(x271))));
                                                                                    j0array[0]=IKatan2(((px)*(x272)*(((IKabs(x266) != 0)?((IKReal)1/(x266)):(IKReal)1.0e30))), ((-1.00000000000000)*(py)*(x272)*(((IKabs(x266) != 0)?((IKReal)1/(x266)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                    IKReal evalcond[6];
                                                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                        evalcond[2]=((0.850000000000000)+(pz));
                                                                                        evalcond[3]=((-0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                                        evalcond[4]=((-1.00000000000000)*(px));
                                                                                        evalcond[5]=((-1.00000000000000)*(py));
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x273=x2;
                                                                                                IKReal x274=x4;
                                                                                                IKReal x275=((0.0900000000000000)*(x273));
                                                                                                IKReal x276=((0.0900000000000000)*(x274));
                                                                                                IKReal x277=((x276)+(x275));
                                                                                                IKReal x278=x0;
                                                                                                IKReal x279=((1.10000000000000)*(pz));
                                                                                                IKReal x280=((0.212500000000000)+(x274)+(x273)+(x278)+(x279));
                                                                                                j0array[0]=IKatan2(((px)*(x280)*(((IKabs(x277) != 0)?((IKReal)1/(x277)):(IKReal)1.0e30))), ((-1.00000000000000)*(py)*(x280)*(((IKabs(x277) != 0)?((IKReal)1/(x277)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                            continue;
                                                                                        IKReal x281=IKasin(0.148340452930245);
                                                                                        IKReal x282=((3.29048260119929)+(x281));
                                                                                        IKReal x283=IKsin(x282);
                                                                                        IKReal x284=IKcos(x282);
                                                                                        IKReal x285=((0.0450000000000000)*(x283));
                                                                                        IKReal x286=((0.300000000000000)*(x284));
                                                                                        evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                        evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.0765000000000000)*(x283)))+(((0.325950000000000)*(x284))));
                                                                                        evalcond[2]=((0.550000000000000)+(x286)+(x285)+(pz));
                                                                                        evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(x285)))+(((-1.00000000000000)*(x286)))+(((-1.00000000000000)*(pz))));
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x287=x281;
                                                                                                IKReal x288=((3.29048260119929)+(x287));
                                                                                                IKReal x289=x4;
                                                                                                IKReal x290=x2;
                                                                                                IKReal x291=((x290)+(x289));
                                                                                                IKReal x292=IKsin(x288);
                                                                                                IKReal x293=((0.300000000000000)*(x292));
                                                                                                IKReal x294=((0.0450000000000000)+(x293));
                                                                                                IKReal x295=IKcos(x288);
                                                                                                IKReal x296=((0.0450000000000000)*(x295));
                                                                                                IKReal x297=((((-1.00000000000000)*(x296)))+(x294));
                                                                                                j0array[0]=IKatan2(((px)*(x297)*(((IKabs(x291) != 0)?((IKReal)1/(x291)):(IKReal)1.0e30))), ((-1.00000000000000)*(py)*(x297)*(((IKabs(x291) != 0)?((IKReal)1/(x291)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x298=((0.300000000000000)*(sj3));
                                                                                    IKReal x299=((0.0450000000000000)+(x298));
                                                                                    IKReal x300=((0.0450000000000000)*(cj3));
                                                                                    IKReal x301=((x299)+(((-1.00000000000000)*(x300))));
                                                                                    IKReal x302=((IKabs(x301) != 0)?((IKReal)1/(x301)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((px)*(x302)), ((-1.00000000000000)*(py)*(x302)));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x303=((0.300000000000000)*(sj3));
                                                                        IKReal x304=((0.0450000000000000)+(x303));
                                                                        IKReal x305=((0.0450000000000000)*(cj3));
                                                                        IKReal x306=((x304)+(((-1.00000000000000)*(x305))));
                                                                        IKReal x307=((IKabs(x306) != 0)?((IKReal)1/(x306)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((px)*(x307)), ((-1.00000000000000)*(py)*(x307)));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                IKReal x308=x8;
                                                                IKReal x309=x9;
                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=((0.550000000000000)+(x308)+(x309)+(pz));
                                                                evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(pz)))+(((-1.00000000000000)*(x309)))+(((-1.00000000000000)*(x308))));
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                        IKReal evalcond[6];
                                                                            evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                            evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                            evalcond[2]=((0.850000000000000)+(pz));
                                                                            evalcond[3]=((-0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                            evalcond[4]=((-1.00000000000000)*(px));
                                                                            evalcond[5]=((-1.00000000000000)*(py));
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x310=x4;
                                                                                    IKReal x311=x2;
                                                                                    IKReal x312=x0;
                                                                                    IKReal x313=((1.10000000000000)*(pz));
                                                                                    IKReal x314=((0.212500000000000)+(x311)+(x310)+(x313)+(x312));
                                                                                    IKReal x315=((0.0900000000000000)*(x311));
                                                                                    IKReal x316=((0.0900000000000000)*(x310));
                                                                                    IKReal x317=((x315)+(x316));
                                                                                    j0array[0]=IKatan2(((-1.00000000000000)*(px)*(x314)*(((IKabs(x317) != 0)?((IKReal)1/(x317)):(IKReal)1.0e30))), ((py)*(x314)*(((IKabs(x317) != 0)?((IKReal)1/(x317)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                continue;
                                                                            IKReal x318=IKasin(0.148340452930245);
                                                                            IKReal x319=((3.29048260119929)+(x318));
                                                                            IKReal x320=IKsin(x319);
                                                                            IKReal x321=IKcos(x319);
                                                                            IKReal x322=((0.0450000000000000)*(x320));
                                                                            IKReal x323=((0.300000000000000)*(x321));
                                                                            evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                            evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(x321)))+(((0.0765000000000000)*(x320))));
                                                                            evalcond[2]=((0.550000000000000)+(x322)+(x323)+(pz));
                                                                            evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(x323)))+(((-1.00000000000000)*(x322)))+(((-1.00000000000000)*(pz))));
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x324=x318;
                                                                                    IKReal x325=((3.29048260119929)+(x324));
                                                                                    IKReal x326=x4;
                                                                                    IKReal x327=x2;
                                                                                    IKReal x328=((x326)+(x327));
                                                                                    IKReal x329=IKsin(x325);
                                                                                    IKReal x330=((0.300000000000000)*(x329));
                                                                                    IKReal x331=((0.0450000000000000)+(x330));
                                                                                    IKReal x332=IKcos(x325);
                                                                                    IKReal x333=((0.0450000000000000)*(x332));
                                                                                    IKReal x334=((x331)+(((-1.00000000000000)*(x333))));
                                                                                    j0array[0]=IKatan2(((-1.00000000000000)*(px)*(x334)*(((IKabs(x328) != 0)?((IKReal)1/(x328)):(IKReal)1.0e30))), ((py)*(x334)*(((IKabs(x328) != 0)?((IKReal)1/(x328)):(IKReal)1.0e30))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                    IKReal evalcond[6];
                                                                                        evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979)))));
                                                                                        evalcond[1]=((0.722500000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz)))));
                                                                                        evalcond[2]=((0.850000000000000)+(pz));
                                                                                        evalcond[3]=((-0.850000000000000)+(((-1.00000000000000)*(pz))));
                                                                                        evalcond[4]=((-1.00000000000000)*(px));
                                                                                        evalcond[5]=((-1.00000000000000)*(py));
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  && IKabs(evalcond[5]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=((((0.0900000000000000)*((py)*(py))))+(((0.0900000000000000)*((px)*(px)))));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x335=x4;
                                                                                                IKReal x336=x2;
                                                                                                IKReal x337=x0;
                                                                                                IKReal x338=((1.10000000000000)*(pz));
                                                                                                IKReal x339=((0.212500000000000)+(x338)+(x337)+(x336)+(x335));
                                                                                                IKReal x340=((0.0900000000000000)*(x336));
                                                                                                IKReal x341=((0.0900000000000000)*(x335));
                                                                                                IKReal x342=((x340)+(x341));
                                                                                                j0array[0]=IKatan2(((-1.00000000000000)*(px)*(x339)*(((IKabs(x342) != 0)?((IKReal)1/(x342)):(IKReal)1.0e30))), ((py)*(x339)*(((IKabs(x342) != 0)?((IKReal)1/(x342)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( (0.148340452930245) < -1.0001 || (0.148340452930245) > 1.0001 )
                                                                                            continue;
                                                                                        IKReal x343=IKasin(0.148340452930245);
                                                                                        IKReal x344=((3.29048260119929)+(x343));
                                                                                        IKReal x345=IKsin(x344);
                                                                                        IKReal x346=IKcos(x344);
                                                                                        IKReal x347=((0.0450000000000000)*(x345));
                                                                                        IKReal x348=((0.300000000000000)*(x346));
                                                                                        evalcond[0]=((IKfmod(((-3.43937254880879)+(3.14159265358979)+(j3)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                                        evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(x346)))+(((0.0765000000000000)*(x345))));
                                                                                        evalcond[2]=((0.550000000000000)+(x347)+(x348)+(pz));
                                                                                        evalcond[3]=((-0.550000000000000)+(((-1.00000000000000)*(x347)))+(((-1.00000000000000)*(x348)))+(((-1.00000000000000)*(pz))));
                                                                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                                        {
                                                                                        {
                                                                                            IKReal j0eval[1];
                                                                                            j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                                            if( IKabs(j0eval[0]) < 0.000001  )
                                                                                            {
                                                                                                {
                                                                                                    if( 1 )
                                                                                                    {
                                                                                                    continue;
                                                                                                
                                                                                                } else
                                                                                                {
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            } else
                                                                                            {
                                                                                                {
                                                                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                                bool j0valid[1]={false};
                                                                                                IKReal x349=x343;
                                                                                                IKReal x350=((3.29048260119929)+(x349));
                                                                                                IKReal x351=x4;
                                                                                                IKReal x352=x2;
                                                                                                IKReal x353=((x351)+(x352));
                                                                                                IKReal x354=IKsin(x350);
                                                                                                IKReal x355=((0.300000000000000)*(x354));
                                                                                                IKReal x356=((0.0450000000000000)+(x355));
                                                                                                IKReal x357=IKcos(x350);
                                                                                                IKReal x358=((0.0450000000000000)*(x357));
                                                                                                IKReal x359=((((-1.00000000000000)*(x358)))+(x356));
                                                                                                j0array[0]=IKatan2(((-1.00000000000000)*(px)*(x359)*(((IKabs(x353) != 0)?((IKReal)1/(x353)):(IKReal)1.0e30))), ((py)*(x359)*(((IKabs(x353) != 0)?((IKReal)1/(x353)):(IKReal)1.0e30))));
                                                                                                sj0array[0]=IKsin(j0array[0]);
                                                                                                cj0array[0]=IKcos(j0array[0]);
                                                                                                if( j0array[0] > IKPI )
                                                                                                    j0array[0]-=IK2PI;
                                                                                                else if( j0array[0] < -IKPI )
                                                                                                    j0array[0]+=IK2PI;
                                                                                                j0valid[0] = true;
                                                                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                                {
                                                                                                if( !j0valid[ij0] ) { continue; }
                                                                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                                
                                                                                                rotationfunction0(vsolutions);
                                                                                                }
                                                                                                }
                                                                                            
                                                                                            }
                                                                                        
                                                                                        }
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x360=((0.300000000000000)*(sj3));
                                                                                    IKReal x361=((0.0450000000000000)+(x360));
                                                                                    IKReal x362=((0.0450000000000000)*(cj3));
                                                                                    IKReal x363=((((-1.00000000000000)*(x362)))+(x361));
                                                                                    IKReal x364=((IKabs(x363) != 0)?((IKReal)1/(x363)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((-1.00000000000000)*(px)*(x364)), ((py)*(x364)));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x365=((0.300000000000000)*(sj3));
                                                                        IKReal x366=((0.0450000000000000)+(x365));
                                                                        IKReal x367=((0.0450000000000000)*(cj3));
                                                                        IKReal x368=((((-1.00000000000000)*(x367)))+(x366));
                                                                        IKReal x369=((IKabs(x368) != 0)?((IKReal)1/(x368)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((-1.00000000000000)*(px)*(x369)), ((py)*(x369)));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                            
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            }
                                                            }
                                                        
                                                        } else
                                                        {
                                                            {
                                                            IKReal j0array[1], cj0array[1], sj0array[1];
                                                            bool j0valid[1]={false};
                                                            IKReal x370=((px)*(sj2));
                                                            IKReal x371=((cj2)*(py));
                                                            IKReal x372=((((-1.00000000000000)*(x371)))+(x370));
                                                            IKReal x373=((cj2)*(px));
                                                            IKReal x374=((py)*(sj2));
                                                            IKReal x375=((x374)+(x373));
                                                            IKReal x376=x12;
                                                            IKReal x377=x13;
                                                            IKReal x378=((x377)+(x376));
                                                            IKReal x379=((1.00000000000000)*(cj3)*(x376));
                                                            IKReal x380=((((-1.00000000000000)*(x379)))+(x378));
                                                            IKReal x381=((py)*(x372));
                                                            j0array[0]=IKatan2(((x372)*(x380)*(((IKabs(((((px)*(x375)))+(((-1.00000000000000)*(x381))))) != 0)?((IKReal)1/(((((px)*(x375)))+(((-1.00000000000000)*(x381)))))):(IKReal)1.0e30))), ((x375)*(x380)*(((IKabs(((x381)+(((-1.00000000000000)*(px)*(x375))))) != 0)?((IKReal)1/(((x381)+(((-1.00000000000000)*(px)*(x375)))))):(IKReal)1.0e30))));
                                                            sj0array[0]=IKsin(j0array[0]);
                                                            cj0array[0]=IKcos(j0array[0]);
                                                            if( j0array[0] > IKPI )
                                                                j0array[0]-=IK2PI;
                                                            else if( j0array[0] < -IKPI )
                                                                j0array[0]+=IK2PI;
                                                            j0valid[0] = true;
                                                            for(int ij0 = 0; ij0 < 1; ++ij0)
                                                            {
                                                            if( !j0valid[ij0] ) { continue; }
                                                            j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                        
                                                        }
                                                    
                                                    }
                                                
                                                } else
                                                {
                                                }
                                                }
                                            
                                            } else
                                            {
                                                {
                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                bool j0valid[1]={false};
                                                IKReal x382=x4;
                                                IKReal x383=x2;
                                                IKReal x384=((x382)+(x383));
                                                IKReal x385=((IKabs(x384) != 0)?((IKReal)1/(x384)):(IKReal)1.0e30);
                                                IKReal x386=((0.0450000000000000)*(cj3)*(sj2));
                                                IKReal x387=((0.0450000000000000)*(sj2));
                                                IKReal x388=((0.300000000000000)*(sj2)*(sj3));
                                                IKReal x389=((x387)+(x388));
                                                IKReal x390=((x386)+(((-1.00000000000000)*(x389))));
                                                IKReal x391=x12;
                                                IKReal x392=x13;
                                                IKReal x393=((x391)+(x392));
                                                IKReal x394=((1.00000000000000)*(cj3)*(x391));
                                                IKReal x395=((((-1.00000000000000)*(x394)))+(x393));
                                                j0array[0]=IKatan2(((x385)*(((((-1.00000000000000)*(py)*(x395)))+(((-1.00000000000000)*(px)*(x390)))))), ((x385)*(((((py)*(x390)))+(((-1.00000000000000)*(px)*(x395)))))));
                                                sj0array[0]=IKsin(j0array[0]);
                                                cj0array[0]=IKcos(j0array[0]);
                                                if( j0array[0] > IKPI )
                                                    j0array[0]-=IK2PI;
                                                else if( j0array[0] < -IKPI )
                                                    j0array[0]+=IK2PI;
                                                j0valid[0] = true;
                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                {
                                                if( !j0valid[ij0] ) { continue; }
                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                            
                                            }
                                        
                                        }
                                    
                                    } else
                                    {
                                        if( 1 )
                                        {
                                        {
                                            IKReal j0eval[1];
                                            j0eval[0]=((((-1.00000000000000)*(cj1)*((py)*(py))))+(((-1.00000000000000)*(cj1)*((px)*(px)))));
                                            if( IKabs(j0eval[0]) < 0.000001  )
                                            {
                                                {
                                                IKReal evalcond[4];
                                                    IKReal x396=x11;
                                                    IKReal x397=x12;
                                                    IKReal x398=x13;
                                                    IKReal x399=((x397)+(x398)+(pz));
                                                    evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((-1.57079632679490)+(3.14159265358979)+(j1)), ((2.00000000000000)*(3.14159265358979)))));
                                                    evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                    evalcond[2]=((((-1.00000000000000)*(x396)))+(x399));
                                                    evalcond[3]=((((-1.00000000000000)*(x399)))+(x396));
                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                    {
                                                    {
                                                        IKReal j0eval[1];
                                                        j0eval[0]=((((cj2)*((py)*(py))))+(((cj2)*((px)*(px)))));
                                                        if( IKabs(j0eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                            IKReal evalcond[5];
                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=pz;
                                                                evalcond[3]=pz;
                                                                evalcond[4]=((-1.00000000000000)*(pz));
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((py)*(((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3)))))))+(((px)*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3))))))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x400=x8;
                                                                                    IKReal x401=x9;
                                                                                    IKReal x402=((0.550000000000000)+(x401)+(x400));
                                                                                    IKReal x403=((0.300000000000000)*(sj3));
                                                                                    IKReal x404=((0.0450000000000000)+(x403));
                                                                                    IKReal x405=((0.0450000000000000)*(cj3));
                                                                                    IKReal x406=((x404)+(((-1.00000000000000)*(x405))));
                                                                                    IKReal x407=((py)*(x406));
                                                                                    IKReal x408=((px)*(x402));
                                                                                    IKReal x409=((x407)+(x408));
                                                                                    IKReal x410=((IKabs(x409) != 0)?((IKReal)1/(x409)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((x410)*(((((x402)*(x406)))+(((px)*(py)))))), ((x410)*(((((-1.00000000000000)*((x406)*(x406))))+((px)*(px))))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x411=((0.300000000000000)*(sj3));
                                                                        IKReal x412=((0.0450000000000000)+(x411));
                                                                        IKReal x413=((0.0450000000000000)*(cj3));
                                                                        IKReal x414=((x412)+(((-1.00000000000000)*(x413))));
                                                                        IKReal x415=x8;
                                                                        IKReal x416=x9;
                                                                        IKReal x417=((0.550000000000000)+(x416)+(x415));
                                                                        IKReal x418=x4;
                                                                        IKReal x419=x2;
                                                                        IKReal x420=((x418)+(x419));
                                                                        IKReal x421=((-1.00000000000000)*(x420));
                                                                        IKReal x422=((IKabs(x421) != 0)?((IKReal)1/(x421)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((x422)*(((((-1.00000000000000)*(px)*(x414)))+(((-1.00000000000000)*(py)*(x417)))))), ((x422)*(((((py)*(x414)))+(((-1.00000000000000)*(px)*(x417)))))));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=pz;
                                                                evalcond[3]=((-1.00000000000000)*(pz));
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((py)*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))))+(((px)*(((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3))))))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x423=((0.300000000000000)*(sj3));
                                                                                    IKReal x424=((0.0450000000000000)+(x423));
                                                                                    IKReal x425=((0.0450000000000000)*(cj3));
                                                                                    IKReal x426=((((-1.00000000000000)*(x425)))+(x424));
                                                                                    IKReal x427=x8;
                                                                                    IKReal x428=x9;
                                                                                    IKReal x429=((0.550000000000000)+(x428)+(x427));
                                                                                    IKReal x430=((py)*(x429));
                                                                                    IKReal x431=((px)*(x426));
                                                                                    IKReal x432=((x430)+(x431));
                                                                                    IKReal x433=((IKabs(x432) != 0)?((IKReal)1/(x432)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((x433)*(((((-1.00000000000000)*((x426)*(x426))))+((py)*(py))))), ((x433)*(((((x426)*(x429)))+(((px)*(py)))))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x434=((0.300000000000000)*(sj3));
                                                                        IKReal x435=((0.0450000000000000)+(x434));
                                                                        IKReal x436=((0.0450000000000000)*(cj3));
                                                                        IKReal x437=((((-1.00000000000000)*(x436)))+(x435));
                                                                        IKReal x438=x8;
                                                                        IKReal x439=x9;
                                                                        IKReal x440=((0.550000000000000)+(x438)+(x439));
                                                                        IKReal x441=x4;
                                                                        IKReal x442=x2;
                                                                        IKReal x443=((x441)+(x442));
                                                                        IKReal x444=((-1.00000000000000)*(x443));
                                                                        IKReal x445=((IKabs(x444) != 0)?((IKReal)1/(x444)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((x445)*(((((px)*(x437)))+(((-1.00000000000000)*(py)*(x440)))))), ((x445)*(((((-1.00000000000000)*(py)*(x437)))+(((-1.00000000000000)*(px)*(x440)))))));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                if( 1 )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=((((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py)))));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x446=x8;
                                                                        IKReal x447=x9;
                                                                        IKReal x448=((0.550000000000000)+(x447)+(x446));
                                                                        IKReal x449=((0.0450000000000000)*(cj3)*(sj2));
                                                                        IKReal x450=((0.0450000000000000)*(sj2));
                                                                        IKReal x451=((0.300000000000000)*(sj2)*(sj3));
                                                                        IKReal x452=((x450)+(x451));
                                                                        IKReal x453=((((-1.00000000000000)*(x452)))+(x449));
                                                                        IKReal x454=x4;
                                                                        IKReal x455=x2;
                                                                        IKReal x456=((x454)+(x455));
                                                                        IKReal x457=((-1.00000000000000)*(x456));
                                                                        IKReal x458=((IKabs(x457) != 0)?((IKReal)1/(x457)):(IKReal)1.0e30);
                                                                        j0array[0]=IKatan2(((x458)*(((((px)*(x453)))+(((-1.00000000000000)*(py)*(x448)))))), ((x458)*(((((-1.00000000000000)*(py)*(x453)))+(((-1.00000000000000)*(px)*(x448)))))));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            }
                                                            }
                                                        
                                                        } else
                                                        {
                                                            {
                                                            IKReal j0array[1], cj0array[1], sj0array[1];
                                                            bool j0valid[1]={false};
                                                            IKReal x459=x2;
                                                            IKReal x460=((cj2)*(x459));
                                                            IKReal x461=x4;
                                                            IKReal x462=((cj2)*(x461));
                                                            IKReal x463=((x462)+(x460));
                                                            IKReal x464=((IKabs(x463) != 0)?((IKReal)1/(x463)):(IKReal)1.0e30);
                                                            IKReal x465=x8;
                                                            IKReal x466=x9;
                                                            IKReal x467=((0.550000000000000)+(x466)+(x465));
                                                            j0array[0]=IKatan2(((x464)*(((((cj2)*(py)*(x467)))+(((-1.00000000000000)*(px)*(pz)*(sj2)))))), ((x464)*(((((py)*(pz)*(sj2)))+(((cj2)*(px)*(x467)))))));
                                                            sj0array[0]=IKsin(j0array[0]);
                                                            cj0array[0]=IKcos(j0array[0]);
                                                            if( j0array[0] > IKPI )
                                                                j0array[0]-=IK2PI;
                                                            else if( j0array[0] < -IKPI )
                                                                j0array[0]+=IK2PI;
                                                            j0valid[0] = true;
                                                            for(int ij0 = 0; ij0 < 1; ++ij0)
                                                            {
                                                            if( !j0valid[ij0] ) { continue; }
                                                            j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                        
                                                        }
                                                    
                                                    }
                                                
                                                } else
                                                {
                                                    IKReal x468=x12;
                                                    IKReal x469=x13;
                                                    IKReal x470=((x469)+(x468));
                                                    IKReal x471=((1.00000000000000)*(cj3)*(x468));
                                                    IKReal x472=((x471)+(pz));
                                                    IKReal x473=((((-1.00000000000000)*(x472)))+(x470));
                                                    evalcond[0]=((IKfmod(((1.57079632679490)+(3.14159265358979)+(j1)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                    evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                    evalcond[2]=x473;
                                                    evalcond[3]=x473;
                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                    {
                                                    {
                                                        IKReal j0eval[1];
                                                        j0eval[0]=((((-1.00000000000000)*(cj2)*((py)*(py))))+(((-1.00000000000000)*(cj2)*((px)*(px)))));
                                                        if( IKabs(j0eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                            IKReal evalcond[5];
                                                                IKReal x474=((-1.00000000000000)*(pz));
                                                                evalcond[0]=((IKfmod(((-1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979))))+(((-1.00000000000000)*(3.14159265358979))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=x474;
                                                                evalcond[3]=x474;
                                                                evalcond[4]=x474;
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((-1.00000000000000)*(py)*(((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3)))))))+(((px)*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3))))))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x475=x8;
                                                                                    IKReal x476=x9;
                                                                                    IKReal x477=((0.550000000000000)+(x475)+(x476));
                                                                                    IKReal x478=((0.300000000000000)*(sj3));
                                                                                    IKReal x479=((0.0450000000000000)+(x478));
                                                                                    IKReal x480=((0.0450000000000000)*(cj3));
                                                                                    IKReal x481=((((-1.00000000000000)*(x480)))+(x479));
                                                                                    IKReal x482=((px)*(x477));
                                                                                    IKReal x483=((py)*(x481));
                                                                                    IKReal x484=((((-1.00000000000000)*(x483)))+(x482));
                                                                                    IKReal x485=((IKabs(x484) != 0)?((IKReal)1/(x484)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((x485)*(((((-1.00000000000000)*(px)*(py)))+(((x477)*(x481)))))), ((x485)*(((((-1.00000000000000)*((x477)*(x477))))+((py)*(py))))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x486=x4;
                                                                        IKReal x487=x2;
                                                                        IKReal x488=((x487)+(x486));
                                                                        IKReal x489=((IKabs(x488) != 0)?((IKReal)1/(x488)):(IKReal)1.0e30);
                                                                        IKReal x490=((0.300000000000000)*(sj3));
                                                                        IKReal x491=((0.0450000000000000)+(x490));
                                                                        IKReal x492=((0.0450000000000000)*(cj3));
                                                                        IKReal x493=((((-1.00000000000000)*(x492)))+(x491));
                                                                        IKReal x494=x8;
                                                                        IKReal x495=x9;
                                                                        IKReal x496=((0.550000000000000)+(x494)+(x495));
                                                                        j0array[0]=IKatan2(((x489)*(((((px)*(x493)))+(((-1.00000000000000)*(py)*(x496)))))), ((x489)*(((((-1.00000000000000)*(px)*(x496)))+(((-1.00000000000000)*(py)*(x493)))))));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                evalcond[0]=((((-1.00000000000000)*(3.14159265358979)))+(IKfmod(((1.57079632679490)+(3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)))));
                                                                evalcond[1]=((0.396550000000000)+(((-1.00000000000000)*((px)*(px))))+(((-1.00000000000000)*((py)*(py))))+(((-1.00000000000000)*((pz)*(pz))))+(((0.325950000000000)*(cj3)))+(((0.0765000000000000)*(sj3))));
                                                                evalcond[2]=((-1.00000000000000)*(pz));
                                                                evalcond[3]=pz;
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            {
                                                                                IKReal j0eval[1];
                                                                                j0eval[0]=((((py)*(((0.0450000000000000)+(((0.300000000000000)*(sj3)))+(((-0.0450000000000000)*(cj3)))))))+(((px)*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3))))))));
                                                                                if( IKabs(j0eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                    
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                                                                    bool j0valid[1]={false};
                                                                                    IKReal x497=((0.300000000000000)*(sj3));
                                                                                    IKReal x498=((0.0450000000000000)+(x497));
                                                                                    IKReal x499=((0.0450000000000000)*(cj3));
                                                                                    IKReal x500=((((-1.00000000000000)*(x499)))+(x498));
                                                                                    IKReal x501=x8;
                                                                                    IKReal x502=x9;
                                                                                    IKReal x503=((0.550000000000000)+(x501)+(x502));
                                                                                    IKReal x504=((py)*(x500));
                                                                                    IKReal x505=((px)*(x503));
                                                                                    IKReal x506=((x504)+(x505));
                                                                                    IKReal x507=((IKabs(x506) != 0)?((IKReal)1/(x506)):(IKReal)1.0e30);
                                                                                    j0array[0]=IKatan2(((x507)*(((((-1.00000000000000)*(px)*(py)))+(((-1.00000000000000)*(x500)*(x503)))))), ((x507)*((((py)*(py))+(((-1.00000000000000)*((x503)*(x503))))))));
                                                                                    sj0array[0]=IKsin(j0array[0]);
                                                                                    cj0array[0]=IKcos(j0array[0]);
                                                                                    if( j0array[0] > IKPI )
                                                                                        j0array[0]-=IK2PI;
                                                                                    else if( j0array[0] < -IKPI )
                                                                                        j0array[0]+=IK2PI;
                                                                                    j0valid[0] = true;
                                                                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                                    {
                                                                                    if( !j0valid[ij0] ) { continue; }
                                                                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                
                                                                                }
                                                                            
                                                                            }
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x508=x4;
                                                                        IKReal x509=x2;
                                                                        IKReal x510=((x508)+(x509));
                                                                        IKReal x511=((IKabs(x510) != 0)?((IKReal)1/(x510)):(IKReal)1.0e30);
                                                                        IKReal x512=((0.300000000000000)*(sj3));
                                                                        IKReal x513=((0.0450000000000000)+(x512));
                                                                        IKReal x514=((0.0450000000000000)*(cj3));
                                                                        IKReal x515=((x513)+(((-1.00000000000000)*(x514))));
                                                                        IKReal x516=x8;
                                                                        IKReal x517=x9;
                                                                        IKReal x518=((0.550000000000000)+(x517)+(x516));
                                                                        j0array[0]=IKatan2(((x511)*(((((-1.00000000000000)*(px)*(x515)))+(((-1.00000000000000)*(py)*(x518)))))), ((x511)*(((((-1.00000000000000)*(px)*(x518)))+(((py)*(x515)))))));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                                if( 1 )
                                                                {
                                                                {
                                                                    IKReal j0eval[1];
                                                                    j0eval[0]=(((px)*(px))+((py)*(py)));
                                                                    if( IKabs(j0eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                        
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                    
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j0array[1], cj0array[1], sj0array[1];
                                                                        bool j0valid[1]={false};
                                                                        IKReal x519=x4;
                                                                        IKReal x520=x2;
                                                                        IKReal x521=((x520)+(x519));
                                                                        IKReal x522=((IKabs(x521) != 0)?((IKReal)1/(x521)):(IKReal)1.0e30);
                                                                        IKReal x523=((0.0450000000000000)*(cj3)*(sj2));
                                                                        IKReal x524=((0.0450000000000000)*(sj2));
                                                                        IKReal x525=((0.300000000000000)*(sj2)*(sj3));
                                                                        IKReal x526=((x524)+(x525));
                                                                        IKReal x527=((((-1.00000000000000)*(x526)))+(x523));
                                                                        IKReal x528=x8;
                                                                        IKReal x529=x9;
                                                                        IKReal x530=((0.550000000000000)+(x528)+(x529));
                                                                        j0array[0]=IKatan2(((x522)*(((((-1.00000000000000)*(px)*(x527)))+(((-1.00000000000000)*(py)*(x530)))))), ((x522)*(((((-1.00000000000000)*(px)*(x530)))+(((py)*(x527)))))));
                                                                        sj0array[0]=IKsin(j0array[0]);
                                                                        cj0array[0]=IKcos(j0array[0]);
                                                                        if( j0array[0] > IKPI )
                                                                            j0array[0]-=IK2PI;
                                                                        else if( j0array[0] < -IKPI )
                                                                            j0array[0]+=IK2PI;
                                                                        j0valid[0] = true;
                                                                        for(int ij0 = 0; ij0 < 1; ++ij0)
                                                                        {
                                                                        if( !j0valid[ij0] ) { continue; }
                                                                        j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                    
                                                                    }
                                                                
                                                                }
                                                            
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            }
                                                            }
                                                        
                                                        } else
                                                        {
                                                            {
                                                            IKReal j0array[1], cj0array[1], sj0array[1];
                                                            bool j0valid[1]={false};
                                                            IKReal x531=x8;
                                                            IKReal x532=x9;
                                                            IKReal x533=((0.550000000000000)+(x531)+(x532));
                                                            IKReal x534=x2;
                                                            IKReal x535=((cj2)*(x534));
                                                            IKReal x536=x4;
                                                            IKReal x537=((cj2)*(x536));
                                                            IKReal x538=((x535)+(x537));
                                                            IKReal x539=((-1.00000000000000)*(x538));
                                                            IKReal x540=((IKabs(x539) != 0)?((IKReal)1/(x539)):(IKReal)1.0e30);
                                                            j0array[0]=IKatan2(((x540)*(((((-1.00000000000000)*(px)*(pz)*(sj2)))+(((cj2)*(py)*(x533)))))), ((x540)*(((((py)*(pz)*(sj2)))+(((cj2)*(px)*(x533)))))));
                                                            sj0array[0]=IKsin(j0array[0]);
                                                            cj0array[0]=IKcos(j0array[0]);
                                                            if( j0array[0] > IKPI )
                                                                j0array[0]-=IK2PI;
                                                            else if( j0array[0] < -IKPI )
                                                                j0array[0]+=IK2PI;
                                                            j0valid[0] = true;
                                                            for(int ij0 = 0; ij0 < 1; ++ij0)
                                                            {
                                                            if( !j0valid[ij0] ) { continue; }
                                                            j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                        
                                                        }
                                                    
                                                    }
                                                
                                                } else
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                
                                                } else
                                                {
                                                }
                                                }
                                                }
                                                }
                                            
                                            } else
                                            {
                                                {
                                                IKReal j0array[1], cj0array[1], sj0array[1];
                                                bool j0valid[1]={false};
                                                IKReal x541=((0.0450000000000000)*(cj3)*(sj2));
                                                IKReal x542=((0.0450000000000000)*(sj2));
                                                IKReal x543=((0.300000000000000)*(sj2)*(sj3));
                                                IKReal x544=((x542)+(x543));
                                                IKReal x545=((((-1.00000000000000)*(x544)))+(x541));
                                                IKReal x546=x12;
                                                IKReal x547=x13;
                                                IKReal x548=((pz)*(sj1));
                                                IKReal x549=((x546)+(x547)+(x548));
                                                IKReal x550=((1.00000000000000)*(cj3)*(x546));
                                                IKReal x551=((((-1.00000000000000)*(x550)))+(x549));
                                                IKReal x552=x4;
                                                IKReal x553=((cj1)*(x552));
                                                IKReal x554=x2;
                                                IKReal x555=((cj1)*(x554));
                                                IKReal x556=((x553)+(x555));
                                                IKReal x557=((-1.00000000000000)*(x556));
                                                IKReal x558=((IKabs(x557) != 0)?((IKReal)1/(x557)):(IKReal)1.0e30);
                                                j0array[0]=IKatan2(((x558)*(((((cj1)*(px)*(x545)))+(((-1.00000000000000)*(py)*(x551)))))), ((x558)*(((((-1.00000000000000)*(cj1)*(py)*(x545)))+(((-1.00000000000000)*(px)*(x551)))))));
                                                sj0array[0]=IKsin(j0array[0]);
                                                cj0array[0]=IKcos(j0array[0]);
                                                if( j0array[0] > IKPI )
                                                    j0array[0]-=IK2PI;
                                                else if( j0array[0] < -IKPI )
                                                    j0array[0]+=IK2PI;
                                                j0valid[0] = true;
                                                for(int ij0 = 0; ij0 < 1; ++ij0)
                                                {
                                                if( !j0valid[ij0] ) { continue; }
                                                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                            
                                            }
                                        
                                        }
                                    
                                    } else
                                    {
                                    }
                                    }
                                    }
                                    }
                                
                                } else
                                {
                                    {
                                    IKReal j0array[1], cj0array[1], sj0array[1];
                                    bool j0valid[1]={false};
                                    IKReal x559=((0.0450000000000000)*(cj3)*(sj2));
                                    IKReal x560=((0.0450000000000000)*(sj2));
                                    IKReal x561=((0.300000000000000)*(sj2)*(sj3));
                                    IKReal x562=((x560)+(x561));
                                    IKReal x563=((x559)+(((-1.00000000000000)*(x562))));
                                    IKReal x564=x8;
                                    IKReal x565=x9;
                                    IKReal x566=((0.550000000000000)+(x564)+(x565));
                                    IKReal x567=((cj1)*(pz));
                                    IKReal x568=((x566)+(((-1.00000000000000)*(x567))));
                                    IKReal x569=x2;
                                    IKReal x570=((sj1)*(x569));
                                    IKReal x571=x4;
                                    IKReal x572=((sj1)*(x571));
                                    IKReal x573=((x570)+(x572));
                                    IKReal x574=((-1.00000000000000)*(x573));
                                    IKReal x575=((IKabs(x574) != 0)?((IKReal)1/(x574)):(IKReal)1.0e30);
                                    j0array[0]=IKatan2(((x575)*(((((px)*(sj1)*(x563)))+(((-1.00000000000000)*(py)*(x568)))))), ((x575)*(((((-1.00000000000000)*(py)*(sj1)*(x563)))+(((-1.00000000000000)*(px)*(x568)))))));
                                    sj0array[0]=IKsin(j0array[0]);
                                    cj0array[0]=IKcos(j0array[0]);
                                    if( j0array[0] > IKPI )
                                        j0array[0]-=IK2PI;
                                    else if( j0array[0] < -IKPI )
                                        j0array[0]+=IK2PI;
                                    j0valid[0] = true;
                                    for(int ij0 = 0; ij0 < 1; ++ij0)
                                    {
                                    if( !j0valid[ij0] ) { continue; }
                                    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                                    
                                    rotationfunction0(vsolutions);
                                    }
                                    }
                                
                                }
                            
                            }
                            }
                            }
                        
                        }
                    
                    }
                
                } else
                {
                }
                }
            
            } else
            {
                {
                IKReal j0array[2], cj0array[2], sj0array[2];
                bool j0valid[2]={false};
                IKReal x576=x4;
                IKReal x577=x2;
                IKReal x578=((x577)+(x576));
                if( (x578) < (IKReal)-0.00001 )
                    continue;
                IKReal x579=IKsqrt(x578);
                IKReal x580=IKabs(x579);
                IKReal x581=((IKabs(x580) != 0)?((IKReal)1/(x580)):(IKReal)1.0e30);
                IKReal x582=((0.0450000000000000)*(cj3)*(sj2));
                IKReal x583=((0.0450000000000000)*(sj2));
                IKReal x584=((0.300000000000000)*(sj2)*(sj3));
                IKReal x585=((x583)+(x584));
                IKReal x586=((x582)+(((-1.00000000000000)*(x585))));
                IKReal x587=((x581)*(x586));
                if( (x587) < -1.0001 || (x587) > 1.0001 )
                    continue;
                IKReal x588=IKasin(x587);
                IKReal x589=((-1.00000000000000)*(py));
                IKReal x590=IKatan2(x589, px);
                j0array[0]=((((-1.00000000000000)*(x590)))+(((-1.00000000000000)*(x588))));
                sj0array[0]=IKsin(j0array[0]);
                cj0array[0]=IKcos(j0array[0]);
                j0array[1]=((3.14159265358979)+(((-1.00000000000000)*(x590)))+(x588));
                sj0array[1]=IKsin(j0array[1]);
                cj0array[1]=IKcos(j0array[1]);
                if( j0array[0] > IKPI )
                    j0array[0]-=IK2PI;
                else if( j0array[0] < -IKPI )
                    j0array[0]+=IK2PI;
                j0valid[0] = true;
                if( j0array[1] > IKPI )
                    j0array[1]-=IK2PI;
                else if( j0array[1] < -IKPI )
                    j0array[1]+=IK2PI;
                j0valid[1] = true;
                if( j0valid[0] && j0valid[1] && IKabs(cj0array[0]-cj0array[1]) < 0.0001 && IKabs(sj0array[0]-sj0array[1]) < 0.0001 )
                    j0valid[1]=false;
                for(int ij0 = 0; ij0 < 2; ++ij0)
                {
                if( !j0valid[ij0] ) { continue; }
                j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
                
                {
                    IKReal j1eval[1];
                    j1eval[0]=(((pz)*(pz))+((((((cj0)*(px)))+(((py)*(sj0)))))*(((((cj0)*(px)))+(((py)*(sj0)))))));
                    if( IKabs(j1eval[0]) < 0.000001  )
                    {
                        {
                            if( 1 )
                            {
                            {
                                IKReal j1eval[1];
                                j1eval[0]=((((pz)*(((((0.0450000000000000)*(cj2)*(cj3)))+(((-0.0450000000000000)*(cj2)))+(((-0.300000000000000)*(cj2)*(sj3)))))))+(((-1.00000000000000)*(((((cj0)*(px)))+(((py)*(sj0)))))*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3))))))));
                                if( IKabs(j1eval[0]) < 0.000001  )
                                {
                                    {
                                        if( 1 )
                                        {
                                        continue;
                                    
                                    } else
                                    {
                                    }
                                    }
                                
                                } else
                                {
                                    {
                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                    bool j1valid[1]={false};
                                    IKReal x591=((0.300000000000000)*(cj3));
                                    IKReal x592=((0.0450000000000000)*(sj3));
                                    IKReal x593=((0.550000000000000)+(x592)+(x591));
                                    IKReal x594=((cj0)*(px));
                                    IKReal x595=((py)*(sj0));
                                    IKReal x596=((x595)+(x594));
                                    IKReal x597=((-1.00000000000000)*(x596));
                                    IKReal x598=((x593)*(x597));
                                    IKReal x599=((0.0450000000000000)*(cj2)*(cj3));
                                    IKReal x600=((0.0450000000000000)*(cj2));
                                    IKReal x601=((0.300000000000000)*(cj2)*(sj3));
                                    IKReal x602=((x601)+(x600));
                                    IKReal x603=((x599)+(((-1.00000000000000)*(x602))));
                                    IKReal x604=((pz)*(x603));
                                    IKReal x605=((x598)+(x604));
                                    IKReal x606=((IKabs(x605) != 0)?((IKReal)1/(x605)):(IKReal)1.0e30);
                                    j1array[0]=IKatan2(((x606)*(((((-1.00000000000000)*((x593)*(x593))))+((pz)*(pz))))), ((x606)*(((((pz)*(x597)))+(((x593)*(x603)))))));
                                    sj1array[0]=IKsin(j1array[0]);
                                    cj1array[0]=IKcos(j1array[0]);
                                    if( j1array[0] > IKPI )
                                        j1array[0]-=IK2PI;
                                    else if( j1array[0] < -IKPI )
                                        j1array[0]+=IK2PI;
                                    j1valid[0] = true;
                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                    {
                                    if( !j1valid[ij1] ) { continue; }
                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                    
                                    rotationfunction0(vsolutions);
                                    }
                                    }
                                
                                }
                            
                            }
                        
                        } else
                        {
                        }
                        }
                    
                    } else
                    {
                        {
                        IKReal j1array[1], cj1array[1], sj1array[1];
                        bool j1valid[1]={false};
                        IKReal x607=((cj0)*(px));
                        IKReal x608=((py)*(sj0));
                        IKReal x609=((x607)+(x608));
                        IKReal x610=((-1.00000000000000)*(x609));
                        IKReal x611=(x610)*(x610);
                        IKReal x612=x0;
                        IKReal x613=((x611)+(x612));
                        IKReal x614=((IKabs(x613) != 0)?((IKReal)1/(x613)):(IKReal)1.0e30);
                        IKReal x615=((0.0450000000000000)*(cj2)*(cj3));
                        j1array[0]=IKatan2(((x614)*(((((-1.00000000000000)*(x610)*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))))+(((-1.00000000000000)*(pz)*(((((0.0450000000000000)*(cj2)))+(((0.300000000000000)*(cj2)*(sj3)))+(((-1.00000000000000)*(x615)))))))))), ((x614)*(((((x610)*(((((-0.0450000000000000)*(cj2)))+(x615)+(((-0.300000000000000)*(cj2)*(sj3)))))))+(((pz)*(((0.550000000000000)+(((0.300000000000000)*(cj3)))+(((0.0450000000000000)*(sj3)))))))))));
                        sj1array[0]=IKsin(j1array[0]);
                        cj1array[0]=IKcos(j1array[0]);
                        if( j1array[0] > IKPI )
                            j1array[0]-=IK2PI;
                        else if( j1array[0] < -IKPI )
                            j1array[0]+=IK2PI;
                        j1valid[0] = true;
                        for(int ij1 = 0; ij1 < 1; ++ij1)
                        {
                        if( !j1valid[ij1] ) { continue; }
                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                        
                        rotationfunction0(vsolutions);
                        }
                        }
                    
                    }
                
                }
                }
                }
            
            }
        
        }
        }
        }
    
    } else
    {
    }
    }
}
return vsolutions.size()>0;
}
    void rotationfunction0(std::vector<IKSolution>& vsolutions) {
        IKReal x43=((cj1)*(cj2)*(sj0));
        IKReal x44=((cj0)*(sj2));
        IKReal x45=((((-1.00000000000000)*(x44)))+(x43));
        IKReal x46=((cj3)*(x45));
        IKReal x47=((sj0)*(sj1)*(sj3));
        IKReal x48=((((-1.00000000000000)*(x47)))+(x46));
        IKReal x49=((cj1)*(sj3));
        IKReal x50=((cj2)*(cj3)*(sj1));
        IKReal x51=((x49)+(x50));
        IKReal x52=((-1.00000000000000)*(x51));
        IKReal x53=((sj0)*(sj2));
        IKReal x54=((cj0)*(cj1)*(cj2));
        IKReal x55=((x54)+(x53));
        IKReal x56=((cj3)*(x55));
        IKReal x57=((cj0)*(sj1)*(sj3));
        IKReal x58=((x56)+(((-1.00000000000000)*(x57))));
        IKReal x59=((((-1.00000000000000)*(x43)))+(x44));
        IKReal x60=((sj3)*(x59));
        IKReal x61=((cj3)*(sj0)*(sj1));
        IKReal x62=((x60)+(((-1.00000000000000)*(x61))));
        IKReal x63=((cj2)*(sj1)*(sj3));
        IKReal x64=((cj1)*(cj3));
        IKReal x65=((x63)+(((-1.00000000000000)*(x64))));
        IKReal x66=((-1.00000000000000)*(x55));
        IKReal x67=((sj3)*(x66));
        IKReal x68=((cj0)*(cj3)*(sj1));
        IKReal x69=((x67)+(((-1.00000000000000)*(x68))));
        IKReal x70=((cj1)*(x44));
        IKReal x71=((cj2)*(sj0));
        IKReal x72=((((-1.00000000000000)*(x71)))+(x70));
        IKReal x73=((cj0)*(cj2));
        IKReal x74=((cj1)*(x53));
        IKReal x75=((x74)+(x73));
        new_r00=((((r10)*(x48)))+(((r00)*(x58)))+(((r20)*(x52))));
        new_r01=((((r01)*(x58)))+(((r21)*(x52)))+(((r11)*(x48))));
        new_r02=((((r22)*(x52)))+(((r02)*(x58)))+(((r12)*(x48))));
        new_r10=((((r10)*(x62)))+(((r20)*(x65)))+(((r00)*(x69))));
        new_r11=((((r11)*(x62)))+(((r01)*(x69)))+(((r21)*(x65))));
        new_r12=((((r22)*(x65)))+(((r02)*(x69)))+(((r12)*(x62))));
        new_r20=((((r10)*(x75)))+(((-1.00000000000000)*(r20)*(sj1)*(sj2)))+(((r00)*(x72))));
        new_r21=((((r11)*(x75)))+(((-1.00000000000000)*(r21)*(sj1)*(sj2)))+(((r01)*(x72))));
        new_r22=((((r02)*(x72)))+(((-1.00000000000000)*(r22)*(sj1)*(sj2)))+(((r12)*(x75))));
        {
        IKReal j5eval;
        j5eval=new_r11;
        if( j5eval >= -1.000010 && j5eval <= -0.999990 )
        {
            {
            j5 = 3.141593; sj5 = 0.000000; cj5 = -1.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=-1.00000000000000;
            j6=((((-1.00000000000000)*(IKatan2(((-1.00000000000000)*(new_r02)), new_r00))))+(((-1.00000000000000)*(3.14159265358979))));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
        
        } else
        if( j5eval >= 0.999990 && j5eval <= 1.000010 )
        {
            {
            j5 = 0.000000; sj5 = 0.000000; cj5 = 1.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=1.00000000000000;
            j6=((-1.00000000000000)*(IKatan2(new_r20, new_r22)));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
        
        } else
        {
            {
            IKReal j4array[2], cj4array[2], sj4array[2];
            bool j4valid[2]={false};
            j4array[0]=IKatan2(((-1.00000000000000)*(new_r21)), ((-1.00000000000000)*(new_r01)));
            sj4array[0]=IKsin(j4array[0]);
            cj4array[0]=IKcos(j4array[0]);
            j4array[1] = j4array[0] > 0 ? j4array[0]-IKPI : j4array[0]+IKPI;
            sj4array[1] = -sj4array[0];
            cj4array[1] = -cj4array[0];
            if( j4array[0] > IKPI )
                j4array[0]-=IK2PI;
            else if( j4array[0] < -IKPI )
                j4array[0]+=IK2PI;
            j4valid[0] = true;
            if( j4array[1] > IKPI )
                j4array[1]-=IK2PI;
            else if( j4array[1] < -IKPI )
                j4array[1]+=IK2PI;
            j4valid[1] = true;
            if( j4valid[0] && j4valid[1] && IKabs(cj4array[0]-cj4array[1]) < 0.0001 && IKabs(sj4array[0]-sj4array[1]) < 0.0001 )
                j4valid[1]=false;
            for(int ij4 = 0; ij4 < 2; ++ij4)
            {
            if( !j4valid[ij4] ) { continue; }
            j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
            
            {
            IKReal evalcond[1];
                evalcond[0]=IKcos(j4);
                if( IKabs(evalcond[0]) < 0.000010  )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(((-1.00000000000000)*(new_r21)*(((IKabs(IKsin(j4)) != 0)?((IKReal)1/(IKsin(j4))):(IKReal)1.0e30))), new_r11);
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal j6array[1], cj6array[1], sj6array[1];
                bool j6valid[1]={false};
                IKReal x76=IKsin(j4);
                IKReal x77=((IKabs(x76) != 0)?((IKReal)1/(x76)):(IKReal)1.0e30);
                j6array[0]=IKatan2(((new_r00)*(x77)), ((-1.00000000000000)*(new_r02)*(x77)));
                sj6array[0]=IKsin(j6array[0]);
                cj6array[0]=IKcos(j6array[0]);
                if( j6array[0] > IKPI )
                    j6array[0]-=IK2PI;
                else if( j6array[0] < -IKPI )
                    j6array[0]+=IK2PI;
                j6valid[0] = true;
                for(int ij6 = 0; ij6 < 1; ++ij6)
                {
                if( !j6valid[ij6] ) { continue; }
                j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                
                vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                solution.basesol.resize(7);
                solution.basesol[0].foffset = j0;
                solution.basesol[1].foffset = j1;
                solution.basesol[2].foffset = j2;
                solution.basesol[3].foffset = j3;
                solution.basesol[4].foffset = j4;
                solution.basesol[5].foffset = j5;
                solution.basesol[6].foffset = j6;
                solution.vfree.resize(0);
                }
                }
                }
                }
            
            } else
            {
                if( 1 )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(((-1.00000000000000)*(new_r01)*(((IKabs(cj4) != 0)?((IKReal)1/(cj4)):(IKReal)1.0e30))), new_r11);
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal evalcond[1];
                    evalcond[0]=IKsin(j5);
                    if( IKabs(evalcond[0]) < 0.000010  )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x78=IKcos(j5);
                    IKReal x79=((IKabs(x78) != 0)?((IKReal)1/(x78)):(IKReal)1.0e30);
                    IKReal x80=IKcos(j4);
                    IKReal x81=IKsin(j4);
                    j6array[0]=IKatan2(((((new_r22)*(x79)*(x81)))+(((new_r02)*(x79)*(x80)))), ((((new_r22)*(x80)))+(((-1.00000000000000)*(new_r02)*(x81)))));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                
                } else
                {
                    if( 1 )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x82=IKsin(j5);
                    IKReal x83=((IKabs(x82) != 0)?((IKReal)1/(x82)):(IKReal)1.0e30);
                    j6array[0]=IKatan2(((new_r12)*(x83)), ((new_r10)*(x83)));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                
                } else
                {
                }
                }
                }
                }
                }
            
            } else
            {
            }
            }
            }
            }
            }
        
        }
        }
    }};

/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
IKSolver solver;
return solver.ik(eetrans,eerot,pfree,vsolutions);
}

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv)
{
    if( argc != 12+getNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",getNumFreeParameters());
        return 1;
    }

    std::vector<IKSolution> vsolutions;
    std::vector<IKReal> vfree(getNumFreeParameters());
    IKReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ik(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, vsolutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)vsolutions.size());
    std::vector<IKReal> sol(getNumJoints());
    for(size_t i = 0; i < vsolutions.size(); ++i) {
        printf("sol%d (free=%d): ", (int)i, (int)vsolutions[i].GetFree().size());
        std::vector<IKReal> vsolfree(vsolutions[i].GetFree().size());
        vsolutions[i].GetSolution(&sol[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( size_t j = 0; j < sol.size(); ++j)
            printf("%f, ", (float)sol[j]);
        printf("\n");
    }
    return 0;
}

#endif
